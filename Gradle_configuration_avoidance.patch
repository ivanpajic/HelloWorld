Subject: [PATCH] Gradle configuration avoidance
---
Index: build.gradle
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -16,7 +16,7 @@
   id "datadog.dependency-locking"
 
   id "com.diffplug.spotless" version "6.13.0"
-  id 'com.github.spotbugs' version '5.0.14'
+  id 'com.github.spotbugs' version '6.0.20' apply false
   id "de.thetaphi.forbiddenapis" version "3.5.1"
 
   id 'pl.allegro.tech.build.axion-release' version '1.14.4'
@@ -111,7 +111,7 @@
   }
 }
 
-wrapper {
+tasks.named("wrapper", Wrapper).configure {
   distributionType = Wrapper.DistributionType.ALL
 }
 
@@ -152,3 +152,4 @@
 }
 
 apply from: "$rootDir/gradle/ci_jobs.gradle"
+
Index: buildSrc/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/build.gradle.kts b/buildSrc/build.gradle.kts
--- a/buildSrc/build.gradle.kts	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/buildSrc/build.gradle.kts	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -46,11 +46,11 @@
   testImplementation("org.codehaus.groovy", "groovy-all", "3.0.17")
 }
 
-tasks.compileKotlin {
+tasks.named("compileKotlin").configure {
   dependsOn(":call-site-instrumentation-plugin:build")
 }
 
-tasks.test {
+tasks.named("test", Test::class.java).configure {
   useJUnitPlatform()
   enabled = project.hasProperty("runBuildSrcTests")
 }
Index: buildSrc/call-site-instrumentation-plugin/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/call-site-instrumentation-plugin/build.gradle.kts b/buildSrc/call-site-instrumentation-plugin/build.gradle.kts
--- a/buildSrc/call-site-instrumentation-plugin/build.gradle.kts	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/buildSrc/call-site-instrumentation-plugin/build.gradle.kts	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -69,26 +69,22 @@
   group = "build"
 }
 
-tasks {
-  withType<AbstractCompile>() {
+tasks.withType<AbstractCompile>().configureEach {
     dependsOn(copyCallSiteSources)
-  }
 }
 
-tasks {
-  named<ShadowJar>("shadowJar") {
-    mergeServiceFiles()
-    manifest {
-      attributes(mapOf("Main-Class" to "datadog.trace.plugin.csi.PluginApplication"))
-    }
+tasks.named<ShadowJar>("shadowJar").configure {
+  mergeServiceFiles()
+  manifest {
+    attributes(mapOf("Main-Class" to "datadog.trace.plugin.csi.PluginApplication"))
   }
 }
 
-tasks.build {
+tasks.named("build").configure {
   dependsOn(tasks.shadowJar)
 }
 
-tasks.test {
+tasks.named<Test>("test").configure {
   useJUnitPlatform()
   enabled = project.hasProperty("runBuildSrcTests")
 }
Index: buildSrc/src/main/groovy/InstrumentPlugin.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/src/main/groovy/InstrumentPlugin.groovy b/buildSrc/src/main/groovy/InstrumentPlugin.groovy
--- a/buildSrc/src/main/groovy/InstrumentPlugin.groovy	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/buildSrc/src/main/groovy/InstrumentPlugin.groovy	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
 import org.gradle.api.file.Directory
 import org.gradle.api.file.DirectoryProperty
 import org.gradle.api.invocation.BuildInvocationDetails
+import org.gradle.api.plugins.JavaPlugin
+import org.gradle.api.plugins.JavaPluginExtension
 import org.gradle.api.provider.ListProperty
 import org.gradle.api.provider.Property
 import org.gradle.api.tasks.Classpath
@@ -13,6 +15,7 @@
 import org.gradle.api.tasks.InputFiles
 import org.gradle.api.tasks.Optional
 import org.gradle.api.tasks.OutputDirectory
+import org.gradle.api.tasks.SourceSet
 import org.gradle.api.tasks.TaskAction
 import org.gradle.api.tasks.compile.AbstractCompile
 import org.gradle.jvm.toolchain.JavaLanguageVersion
@@ -32,66 +35,76 @@
 class InstrumentPlugin implements Plugin<Project> {
   @Override
   void apply(Project project) {
+    assert project.plugins.hasPlugin(JavaPlugin), "InstrumentPlugin must be applied after JavaPlugin"
+    println("Applying InstrumentPlugin to ${project.name}")
     InstrumentExtension extension = project.extensions.create('instrument', InstrumentExtension)
+    project.extensions.getByType(JavaPluginExtension).sourceSets.all { SourceSet sourceSet ->
+      createTask(project, extension, sourceSet)
+    }
+  }
+
+  static void createTask(Project project,  InstrumentExtension extension, SourceSet sourceSet) {
+    String compileTaskName = sourceSet.getTaskName('compile', 'java')
+    println("InstrumentPlugin: Creating task for $compileTaskName")
+    boolean isMainSourceSet = compileTaskName in ['compileJava', 'compileScala', 'compileKotlin'] || compileTaskName =~ /compileMain_.+Java/
+    if (!isMainSourceSet) {
+      return
+    }
 
-    project.tasks.matching {
-      it.name in ['compileJava', 'compileScala', 'compileKotlin'] ||
-        it.name =~ /compileMain_.+Java/
-    }.all {
-      AbstractCompile compileTask = it as AbstractCompile
-      Matcher versionMatcher = it.name =~ /compileMain_(.+)Java/
-      project.afterEvaluate {
-        if (!compileTask.source.empty) {
-          String sourceSetSuffix = null
-          String javaVersion = null
-          if (versionMatcher.matches()) {
-            sourceSetSuffix = versionMatcher.group(1)
-            if (sourceSetSuffix ==~ /java\d+/) {
-              javaVersion = sourceSetSuffix[4..-1]
-            }
-          }
+    Matcher versionMatcher = compileTaskName =~ /compileMain_(.+)Java/
+    String instrumentTaskName = compileTaskName.replace('compile', 'instrument')
+
+    String sourceSetSuffix = null
+    String javaVersion = null
+    if (versionMatcher.matches()) {
+      sourceSetSuffix = versionMatcher.group(1)
+      if (sourceSetSuffix ==~ /java\d+/) {
+        javaVersion = sourceSetSuffix[4..-1]
+      }
+    }
 
-          // insert intermediate 'raw' directory for unprocessed classes
-          Directory classesDir = compileTask.destinationDirectory.get()
-          Directory rawClassesDir = classesDir.dir(
-            "../raw${sourceSetSuffix ? "_$sourceSetSuffix" : ''}/")
-          compileTask.destinationDirectory.set(rawClassesDir.asFile)
+    project.tasks.named(compileTaskName, AbstractCompile).configure {
+      // insert intermediate 'raw' directory for unprocessed classes
+      Directory classesDir = it.destinationDirectory.get()
+      Directory rawClassesDir = classesDir.dir(
+        "../raw${sourceSetSuffix ? "_$sourceSetSuffix" : ''}/")
+      it.destinationDirectory.set(rawClassesDir.asFile)
 
-          // insert task between compile and jar, and before test*
-          String instrumentTaskName = compileTask.name.replace('compile', 'instrument')
-          def instrumentTask = project.tasks.register(instrumentTaskName, InstrumentTask) {
-            // Task configuration
-            it.group = 'Byte Buddy'
-            it.description = "Instruments the classes compiled by ${compileTask.name}"
-            it.inputs.dir(compileTask.destinationDirectory)
-            it.outputs.dir(classesDir)
-            // Task inputs
-            it.javaVersion = javaVersion
-            def instrumenterConfiguration = project.configurations.named('instrumentPluginClasspath')
-            if (instrumenterConfiguration.present) {
-              it.pluginClassPath.from(instrumenterConfiguration.get())
-            }
-            it.plugins = extension.plugins
-            it.instrumentingClassPath.from(
-              findCompileClassPath(project, it.name) +
-                rawClassesDir +
-                findAdditionalClassPath(extension, it.name)
-            )
-            it.sourceDirectory = rawClassesDir
-            // Task output
-            it.targetDirectory = classesDir
-          }
-          if (javaVersion) {
-            project.tasks.named(project.sourceSets."main_java${javaVersion}".classesTaskName) {
-              it.dependsOn(instrumentTask)
-            }
-          } else {
-            project.tasks.named(project.sourceSets.main.classesTaskName) {
-              it.dependsOn(instrumentTask)
-            }
-          }
-        }
-      }
+      ext.originalClassesDir = classesDir
+      ext.rawClassesDir = rawClassesDir
+    }
+
+    def instrumentTask = project.tasks.register(instrumentTaskName, InstrumentTask) {
+      AbstractCompile compileTask = project.tasks.named(compileTaskName, AbstractCompile).get()
+      Directory originalClassesDir = compileTask.originalClassesDir
+      Directory rawClassesDir = compileTask.rawClassesDir
+
+      // insert task between compile and jar, and before test*
+
+      // Task configuration
+      it.group = 'Byte Buddy'
+      it.description = "Instruments the classes compiled by ${compileTask.name}"
+      it.inputs.dir(compileTask.destinationDirectory)
+      it.outputs.dir(originalClassesDir)
+      // Task inputs
+      it.javaVersion = javaVersion
+      def instrumenterConfiguration = project.configurations.named('instrumentPluginClasspath')
+      if (instrumenterConfiguration.present) {
+        it.pluginClassPath.from(instrumenterConfiguration.get())
+      }
+      it.plugins = extension.plugins
+      it.instrumentingClassPath.from(
+        findCompileClassPath(project, it.name) +
+          rawClassesDir +
+          findAdditionalClassPath(extension, it.name)
+      )
+      it.sourceDirectory = rawClassesDir
+      // Task output
+      it.targetDirectory = originalClassesDir
+    }
+
+    project.tasks.named(sourceSet.classesTaskName).configure {
+      it.dependsOn(instrumentTask)
     }
   }
 
Index: buildSrc/src/main/groovy/MuzzlePlugin.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/src/main/groovy/MuzzlePlugin.groovy b/buildSrc/src/main/groovy/MuzzlePlugin.groovy
--- a/buildSrc/src/main/groovy/MuzzlePlugin.groovy	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/buildSrc/src/main/groovy/MuzzlePlugin.groovy	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+import org.gradle.api.tasks.compile.AbstractCompile
+import org.gradle.api.tasks.compile.JavaCompile
+
 import static MuzzleAction.createClassLoader
 
 import org.apache.maven.repository.internal.MavenRepositorySystemUtils
@@ -105,49 +108,44 @@
 
     // compileMuzzle compiles all projects required to run muzzle validation.
     // Not adding group and description to keep this task from showing in `gradle tasks`.
-    def compileMuzzle = project.task('compileMuzzle')
-    compileMuzzle.dependsOn(toolingProject.tasks.named("compileJava"))
-    project.afterEvaluate {
-      project.tasks.matching {
-        it.name =~ /\Ainstrument(Main)?(_.+)?(Java|Scala|Kotlin)/
-      }.all {
-        compileMuzzle.dependsOn(it)
-      }
+    def compileMuzzle = project.tasks.register('compileMuzzle') {
+      it.dependsOn(toolingProject.tasks.named("compileJava"))
+      it.dependsOn(project.tasks.withType(InstrumentTask))
+      it.dependsOn bootstrapProject.tasks.named("compileJava")
+      it.dependsOn bootstrapProject.tasks.named("compileMain_java11Java")
+      it.dependsOn toolingProject.tasks.named("compileJava")
     }
-    compileMuzzle.dependsOn bootstrapProject.tasks.compileJava
-    compileMuzzle.dependsOn bootstrapProject.tasks.compileMain_java11Java
-    compileMuzzle.dependsOn toolingProject.tasks.compileJava
 
-    project.task(['type': MuzzleTask], 'muzzle') {
-      description = "Run instrumentation muzzle on compile time dependencies"
-      doLast {
+    project.tasks.register('muzzle', MuzzleTask) {
+      it.description = "Run instrumentation muzzle on compile time dependencies"
+      it.doLast {
         if (!project.muzzle.directives.any { it.assertPass }) {
           project.getLogger().info('No muzzle pass directives configured. Asserting pass against instrumentation compile-time dependencies')
           assertMuzzle(muzzleBootstrap, muzzleTooling, project)
         }
       }
-      dependsOn compileMuzzle
+      it.dependsOn compileMuzzle
     }
 
-    project.task(['type': MuzzleTask], 'printReferences') {
-      description = "Print references created by instrumentation muzzle"
-      doLast {
+    project.tasks.register('printReferences', MuzzleTask) {
+      it.description = "Print references created by instrumentation muzzle"
+      it.doLast {
         printMuzzle(project)
       }
-      dependsOn compileMuzzle
+      it.dependsOn compileMuzzle
     }
-    project.task(['type': MuzzleTask], 'generateMuzzleReport') {
-      description = "Print instrumentation version report"
-      doLast {
+    project.tasks.register('generateMuzzleReport', MuzzleTask) {
+      it.description = "Print instrumentation version report"
+      it.doLast {
         dumpVersionRanges(project)
       }
-      dependsOn compileMuzzle
+      it.dependsOn compileMuzzle
     }
 
 
-    project.task(['type': MuzzleTask], 'mergeMuzzleReports') {
-      description = "Merge generated version reports in one unique csv"
-      doLast {
+    project.tasks.register('mergeMuzzleReports', MuzzleTask) {
+      it.description = "Merge generated version reports in one unique csv"
+      it.doLast {
         mergeReports(project)
       }
     }
Index: buildSrc/src/main/kotlin/datadog/gradle/plugin/CallSiteInstrumentationPlugin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/src/main/kotlin/datadog/gradle/plugin/CallSiteInstrumentationPlugin.kt b/buildSrc/src/main/kotlin/datadog/gradle/plugin/CallSiteInstrumentationPlugin.kt
--- a/buildSrc/src/main/kotlin/datadog/gradle/plugin/CallSiteInstrumentationPlugin.kt	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/buildSrc/src/main/kotlin/datadog/gradle/plugin/CallSiteInstrumentationPlugin.kt	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -95,10 +95,9 @@
     csiSourceSet.compileClasspath += mainSourceSet.output // mainly needed for the plugin tests
     csiSourceSet.annotationProcessorPath += mainSourceSet.annotationProcessorPath
     csiSourceSet.java.srcDir(targetFolder)
-    project.getTasksByName(csiSourceSet.getCompileTaskName("java"), false).forEach { task ->
-      val compile = task as AbstractCompile
-      compile.sourceCompatibility = JavaVersion.VERSION_1_8.toString()
-      compile.targetCompatibility = JavaVersion.VERSION_1_8.toString()
+    project.tasks.named(csiSourceSet.getCompileTaskName("java"), AbstractCompile::class.java).configure {
+      sourceCompatibility = JavaVersion.VERSION_1_8.toString()
+      targetCompatibility = JavaVersion.VERSION_1_8.toString()
     }
 
     // add csi classes to test classpath
@@ -137,14 +136,12 @@
   }
 
   private fun createTasks(project: Project, extension: CallSiteInstrumentationExtension) {
-    val compileTask: AbstractCompile = project.tasks.named("compileJava", AbstractCompile::class.java).get()
-    val input = compileTask.destinationDirectory
-    createGenerateCallSiteTask(project, extension, compileTask, input)
+    createGenerateCallSiteTask(project, extension, "compileJava")
     val targetFolder = extension.targetFolder.get().asFile
-    project.tasks.withType(AbstractCompile::class.java).matching {
-      task -> task.name.startsWith("compileTest")
-    }.configureEach {
-      classpath += project.files(targetFolder)
+    project.tasks.withType(AbstractCompile::class.java).configureEach {
+      if (name.startsWith("compileTest")) {
+        classpath += project.files(targetFolder)
+      }
     }
     project.tasks.withType(Test::class.java).configureEach {
       classpath += project.files(targetFolder)
@@ -159,9 +156,8 @@
 
   private fun createGenerateCallSiteTask(project: Project,
                                          extension: CallSiteInstrumentationExtension,
-                                         compileTask: AbstractCompile,
-                                         input: DirectoryProperty) {
-    val taskName = compileTask.name.replace("compile", "generateCallSite")
+                                         compileTaskName: String) {
+    val taskName = compileTaskName.replace("compile", "generateCallSite")
     val rootFolder = extension.rootFolder.getOrElse(project.rootDir)
     val pluginJarFile = Paths.get(
       rootFolder.toString(),
@@ -171,8 +167,10 @@
       "libs",
       "call-site-instrumentation-plugin-all.jar"
     ).toFile()
-    val programClassPath = getProgramClasspath(project).map { it.toString() }
     val callSiteGeneratorTask = project.tasks.register(taskName, JavaExec::class.java) {
+      val compileTask = project.tasks.named(compileTaskName, AbstractCompile::class.java).get()
+      val input = compileTask.destinationDirectory
+
       // Task description
       group = "call site instrumentation"
       description = "Generates call sites from ${compileTask.name}"
@@ -189,6 +187,7 @@
       mainClass.set(CALL_SITE_INSTRUMENTER_MAIN_CLASS)
       // Write the call site instrumenter arguments into a temporary file
       doFirst {
+        val programClassPath = getProgramClasspath(project).map { it.toString() }
         val argumentFile = newTempFile(temporaryDir, "call-site-arguments")
         val arguments = listOf(
           extension.srcFolder.get().asFile.toString(),
@@ -200,20 +199,23 @@
         Files.write(argumentFile.toPath(), arguments)
         args(argumentFile.toString())
       }
-    }.get()
-
-    // insert task after compile
-    callSiteGeneratorTask.dependsOn(compileTask)
+      // insert task after compile
+      dependsOn(compileTask)
+    }
+
+    // make all sourcesets' class tasks depend on call site generator
     val sourceSets = getSourceSets(project)
-    val mainSourceSet = sourceSets.named(SourceSet.MAIN_SOURCE_SET_NAME).get()
-    project.tasks.named(mainSourceSet.classesTaskName).configure {
-      dependsOn(callSiteGeneratorTask)
+    sourceSets.named(SourceSet.MAIN_SOURCE_SET_NAME).configure {
+      project.tasks.named(classesTaskName).configure {
+        dependsOn(callSiteGeneratorTask)
+      }
     }
 
     // compile generated sources
-    val csiSourceSet = sourceSets.named("csi").get()
-    project.tasks.named(csiSourceSet.compileJavaTaskName).configure {
-      callSiteGeneratorTask.finalizedBy(this)
+    sourceSets.named("csi").configure {
+      project.tasks.named(compileJavaTaskName).configure {
+        dependsOn(callSiteGeneratorTask)
+      }
     }
   }
 
Index: dd-java-agent/agent-bootstrap/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-bootstrap/build.gradle b/dd-java-agent/agent-bootstrap/build.gradle
--- a/dd-java-agent/agent-bootstrap/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-bootstrap/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -34,7 +34,7 @@
   }
 }
 
-compileMain_java11Java.configure {
+tasks.named("compileMain_java11Java", JavaCompile).configure {
   setJavaVersion(it, 11)
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
@@ -45,11 +45,11 @@
   main_java11CompileOnly sourceSets.main.output
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_java11.output
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-builder/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-builder/build.gradle b/dd-java-agent/agent-builder/build.gradle
--- a/dd-java-agent/agent-builder/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-builder/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -19,7 +19,7 @@
   }
 }
 
-compileMain_java11Java.configure {
+tasks.named("compileMain_java11Java", JavaCompile).configure {
   setJavaVersion(it, 11)
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
@@ -31,11 +31,11 @@
   runtimeOnly sourceSets.main_java11.output
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_java11.output
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-ci-visibility/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-ci-visibility/build.gradle b/dd-java-agent/agent-ci-visibility/build.gradle
--- a/dd-java-agent/agent-ci-visibility/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-ci-visibility/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 buildscript {
   repositories {
     mavenCentral()
@@ -50,10 +52,10 @@
   testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.9.2") // Required to update dependency lock files
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
Index: dd-java-agent/agent-debugger/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-debugger/build.gradle b/dd-java-agent/agent-debugger/build.gradle
--- a/dd-java-agent/agent-debugger/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-debugger/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -61,14 +63,14 @@
   testRuntimeOnly group: 'antlr', name: 'antlr', version: '2.7.7'
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
   dependencies {
     exclude(project(':dd-java-agent:agent-debugger:debugger-bootstrap'))
   }
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
   from sourceSets.main.output
 }
Index: dd-java-agent/agent-iast/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-iast/build.gradle b/dd-java-agent/agent-iast/build.gradle
--- a/dd-java-agent/agent-iast/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-iast/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,7 +4,7 @@
   id 'com.github.johnrengelman.shadow'
   id 'me.champeau.jmh'
   id 'java-test-fixtures'
-  id 'com.google.protobuf' version '0.8.18'
+  id 'com.google.protobuf' version '0.9.4'
   id 'net.ltgt.errorprone' version '3.1.0'
 }
 
@@ -37,7 +37,9 @@
     grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
   }
   generateProtoTasks {
-    all()*.plugins { grpc {} }
+    ofSourceSet("test").configureEach {
+      plugins { grpc {} }
+    }
   }
 }
 
@@ -71,11 +73,11 @@
   errorprone('com.google.errorprone:error_prone_core:2.23.0')
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   dependencies deps.excludeShared
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
 
Index: dd-java-agent/agent-jmxfetch/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-jmxfetch/build.gradle b/dd-java-agent/agent-jmxfetch/build.gradle
--- a/dd-java-agent/agent-jmxfetch/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-jmxfetch/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,7 @@
 import java.nio.file.Files
 import java.nio.file.attribute.BasicFileAttributes
 import java.util.stream.Collectors
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
 
 import static java.nio.file.StandardCopyOption.REPLACE_EXISTING
 import static java.nio.file.StandardOpenOption.CREATE
@@ -23,7 +24,7 @@
   api project(':dd-java-agent:agent-bootstrap')
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
 }
 
@@ -100,7 +101,7 @@
   dependsOn 'submodulesUpdate'
 }
 
-processResources {
+tasks.named("processResources").configure {
   dependsOn 'copyMetricConfigs'
   from("$buildDir/integrations-core-resources")
 }
Index: dd-java-agent/agent-logs-intake/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-logs-intake/build.gradle b/dd-java-agent/agent-logs-intake/build.gradle
--- a/dd-java-agent/agent-logs-intake/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-logs-intake/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -15,10 +15,10 @@
   implementation project(':communication')
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   dependencies deps.excludeShared
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
Index: dd-java-agent/agent-otel/otel-bootstrap/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-otel/otel-bootstrap/build.gradle b/dd-java-agent/agent-otel/otel-bootstrap/build.gradle
--- a/dd-java-agent/agent-otel/otel-bootstrap/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-otel/otel-bootstrap/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -65,7 +67,7 @@
   dependsOn 'unpackJars'
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
 
   include '*.jar'
@@ -104,6 +106,6 @@
   relocate 'datadog.opentelemetry.shim', 'datadog.trace.bootstrap.otel.shim'
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
Index: dd-java-agent/agent-profiling/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/build.gradle b/dd-java-agent/agent-profiling/build.gradle
--- a/dd-java-agent/agent-profiling/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -37,10 +39,10 @@
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
Index: dd-java-agent/agent-profiling/profiling-controller-ddprof/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/profiling-controller-ddprof/build.gradle b/dd-java-agent/agent-profiling/profiling-controller-ddprof/build.gradle
--- a/dd-java-agent/agent-profiling/profiling-controller-ddprof/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/profiling-controller-ddprof/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -51,7 +51,7 @@
   }
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-profiling/profiling-controller-jfr/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/profiling-controller-jfr/build.gradle b/dd-java-agent/agent-profiling/profiling-controller-jfr/build.gradle
--- a/dd-java-agent/agent-profiling/profiling-controller-jfr/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/profiling-controller-jfr/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -43,7 +43,7 @@
   options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'/*, '-Werror'*/])
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-profiling/profiling-controller-jfr/implementation/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/profiling-controller-jfr/implementation/build.gradle b/dd-java-agent/agent-profiling/profiling-controller-jfr/implementation/build.gradle
--- a/dd-java-agent/agent-profiling/profiling-controller-jfr/implementation/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/profiling-controller-jfr/implementation/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -16,7 +16,7 @@
   }
 }
 
-compileMain_java11Java.configure {
+tasks.named("compileMain_java11Java", JavaCompile).configure {
   setJavaVersion(it, 11)
   sourceCompatibility = JavaVersion.VERSION_1_9
   targetCompatibility = JavaVersion.VERSION_1_9
@@ -39,11 +39,11 @@
   'com.datadog.profiling.controller.jfr.SimpleJFRAccess*'
 ]
 
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_java11.output
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-profiling/profiling-controller-openjdk/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/profiling-controller-openjdk/build.gradle b/dd-java-agent/agent-profiling/profiling-controller-openjdk/build.gradle
--- a/dd-java-agent/agent-profiling/profiling-controller-openjdk/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/profiling-controller-openjdk/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -48,7 +48,7 @@
   }
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-profiling/profiling-ddprof/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-profiling/profiling-ddprof/build.gradle b/dd-java-agent/agent-profiling/profiling-ddprof/build.gradle
--- a/dd-java-agent/agent-profiling/profiling-ddprof/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-profiling/profiling-ddprof/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -40,7 +42,7 @@
   testImplementation libs.bundles.junit5
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   archiveClassifier = ''
   include {
     def rslt = false
@@ -53,7 +55,9 @@
   }
 }
 
-build.dependsOn shadowJar
+tasks.named("build").configure {
+  dependsOn shadowJar
+}
 
 configurations.all {
   resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
@@ -71,7 +75,7 @@
   }
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/agent-tooling/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/agent-tooling/build.gradle b/dd-java-agent/agent-tooling/build.gradle
--- a/dd-java-agent/agent-tooling/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/agent-tooling/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -34,8 +34,8 @@
   }
 }
 
-compileJava.dependsOn 'generateClassNameTries'
-sourcesJar.dependsOn 'generateClassNameTries'
+tasks.named('compileJava').configure { dependsOn 'generateClassNameTries' }
+tasks.named('sourcesJar').configure { dependsOn 'generateClassNameTries' }
 
 dependencies {
   api(project(':dd-java-agent:agent-bootstrap')) {
@@ -65,27 +65,34 @@
   jmhVersion = '1.32'
   includeTests = true
 }
-compileJmhJava.dependsOn compileTestJava
-compileTestJava.dependsOn 'generateTestClassNameTries'
+tasks.named("compileJmhJava", JavaCompile).configure {
+  dependsOn 'compileTestJava'
+}
+tasks.named("compileTestJava", JavaCompile).configure {
+  dependsOn 'generateTestClassNameTries'
+}
 
-forbiddenApisJmh {
+tasks.named("forbiddenApisJmh").configure {
   ignoreFailures = true
 }
 
-forbiddenApisTest_java11 {
+tasks.named("forbiddenApisTest_java11").configure {
   // it will fail due to missing JDK >= 9 classes
   // java.lang.ClassNotFoundException: java.lang.invoke.StringConcatFactory
   failOnMissingClasses = false
 }
 
-project.tasks.compileTestJava.dependsOn(project.tasks.generateTestClassNameTries)
-project.tasks.compileTestGroovy.dependsOn(project.tasks.compileTest_java11Java)
-project.tasks.compileTest_java11Java.configure {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
+  dependsOn 'compileTest_java11Java'
+}
+
+tasks.named("compileTest_java11Java", JavaCompile).configure {
   sourceCompatibility = JavaVersion.VERSION_11
   targetCompatibility = JavaVersion.VERSION_11
   setJavaVersion(it, 11)
 }
 
-final jmh = project.tasks.jmh
-jmh.outputs.upToDateWhen { false }
-jmh.dependsOn(compileTestJava)
+tasks.named("jmh").configure {
+  outputs.upToDateWhen { false }
+  dependsOn 'compileTestJava'
+}
Index: dd-java-agent/appsec/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/appsec/build.gradle b/dd-java-agent/appsec/build.gradle
--- a/dd-java-agent/appsec/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/appsec/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,6 @@
 import groovy.json.JsonOutput
 import groovy.json.JsonSlurper
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
 
 plugins {
   id "com.github.johnrengelman.shadow"
@@ -31,16 +32,16 @@
   exclude group: 'org.eclipse.jetty', module: 'jetty-server'
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   exclude '**/*-dbgsym.zip'
   dependencies deps.excludeShared
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   archiveClassifier = 'unbundled'
 }
 
-processResources {
+tasks.named("processResources").configure {
   doLast {
     fileTree(dir: outputs.files.asPath, includes: ['**/*.json']).each {
       it.text = JsonOutput.toJson(new JsonSlurper().parse(it))
@@ -58,12 +59,13 @@
     includes = [project.jmhIncludes]
   }
 }
-jmhJar {
+tasks.named("jmhJar", Jar).configure {
   exclude 'org/slf4j/impl/**/*'
 }
 
 
-task runSampleApp(type: GradleBuild, dependsOn: ':dd-java-agent:shadowJar') {
+tasks.register("runSampleApp", GradleBuild) {
+  dependsOn ':dd-java-agent:shadowJar'
   description = "Run AppSec sample app with instrumentation"
   group = 'application'
 
@@ -122,7 +124,7 @@
 tasks.withType(Test).configureEach {
   jvmArgs += ['-Ddd.appsec.enabled=true']
 }
-def rootDir = project.rootDir
+
 spotless {
   java {
     target 'src/**/*.java'
Index: dd-java-agent/benchmark-integration/jetty-perftest/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/benchmark-integration/jetty-perftest/build.gradle b/dd-java-agent/benchmark-integration/jetty-perftest/build.gradle
--- a/dd-java-agent/benchmark-integration/jetty-perftest/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/benchmark-integration/jetty-perftest/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -8,7 +8,7 @@
   implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.1.v20170120'
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes("Main-Class": "datadog.perftest.jetty.JettyPerftest")
   }
Index: dd-java-agent/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/build.gradle b/dd-java-agent/build.gradle
--- a/dd-java-agent/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -74,7 +74,7 @@
 
 def includeShadowJar(TaskProvider<ShadowJar> shadowJarTask, String jarname) {
   def opentracingFound = new AtomicBoolean()
-  project.processResources {
+  project.tasks.named('processResources').configure {
     doFirst {
       eachFile {
         // We seem unlikely to use this name somewhere else.
@@ -109,6 +109,8 @@
   includeShadowJar proj.tasks.named("shadowJar"), jarname
 }
 
+logger.debug("Will apply build.gradle stage includeSubprojShadowJar for :dd-java-agent")
+
 includeSubprojShadowJar ':dd-java-agent:instrumentation', 'inst'
 includeSubprojShadowJar ':dd-java-agent:agent-jmxfetch', 'metrics'
 includeSubprojShadowJar ':dd-java-agent:agent-profiling', 'profiling'
@@ -145,21 +147,24 @@
   archiveClassifier = 'trace'
   it.dependencies deps.excludeShared
 }
+
 includeShadowJar(traceShadowJar, 'trace')
 
-shadowJar generalShadowJarConfig >> {
-  configurations = [project.configurations.shadowInclude]
+tasks.named("shadowJar", ShadowJar).configure {
+  generalShadowJarConfig >> {
+    configurations = [project.configurations.shadowInclude]
 
-  archiveClassifier = ''
+    archiveClassifier = ''
 
-  manifest {
-    attributes(
-      "Main-Class": "datadog.trace.bootstrap.AgentBootstrap",
-      "Agent-Class": "datadog.trace.bootstrap.AgentBootstrap",
-      "Premain-Class": "datadog.trace.bootstrap.AgentBootstrap",
-      "Can-Redefine-Classes": true,
-      "Can-Retransform-Classes": true,
-      )
+    manifest {
+      attributes(
+        "Main-Class": "datadog.trace.bootstrap.AgentBootstrap",
+        "Agent-Class": "datadog.trace.bootstrap.AgentBootstrap",
+        "Premain-Class": "datadog.trace.bootstrap.AgentBootstrap",
+        "Can-Redefine-Classes": true,
+        "Can-Retransform-Classes": true,
+        )
+    }
   }
 }
 
@@ -180,7 +185,7 @@
   dependsOn 'writeVersionNumberFile'
 }
 
-compileJava.dependsOn 'generateAgentJarIndex'
+tasks.named('compileJava').configure { dependsOn 'generateAgentJarIndex' }
 
 subprojects { Project subProj ->
   // Don't need javadoc task run for internal projects.
@@ -293,3 +298,5 @@
 tasks.named('check').configure {
   dependsOn 'checkAgentJarSize'
 }
+
+logger.debug("Will apply build.gradle for :dd-java-agent (done)")
Index: dd-java-agent/cws-tls/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/cws-tls/build.gradle b/dd-java-agent/cws-tls/build.gradle
--- a/dd-java-agent/cws-tls/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/cws-tls/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -18,7 +20,7 @@
   testImplementation project(":dd-java-agent:testing")
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies deps.excludeShared
   // exclude this since it's available in the instrumentation jar
   exclude 'com/sun/jna/**/*'
Index: dd-java-agent/instrumentation/aerospike-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aerospike-4/build.gradle b/dd-java-agent/instrumentation/aerospike-4/build.gradle
--- a/dd-java-agent/instrumentation/aerospike-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aerospike-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   latestDepTestMinJavaVersionForTests = JavaVersion.VERSION_21
   latestDepForkedTestMinJavaVersionForTests = JavaVersion.VERSION_21
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.aerospike'
@@ -11,9 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
-
 addTestSuiteForDir("latestDepTest", "test")
 addTestSuiteForDir("latest7DepTest", "test")
 addTestSuiteExtendingForDir("latestDepForkedTest", "latestDepTest", "test")
Index: dd-java-agent/instrumentation/akka-concurrent/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/akka-concurrent/build.gradle b/dd-java-agent/instrumentation/akka-concurrent/build.gradle
--- a/dd-java-agent/instrumentation/akka-concurrent/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/akka-concurrent/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
 def akkaVersion = '2.5.0'
 def scalaVersion = '2.11'
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-scala.gradle"
+
 muzzle {
   pass {
     group = 'com.typesafe.akka'
@@ -12,9 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-scala.gradle"
-
 addTestSuite('akka23Test')
 addTestSuiteForDir('latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/akka-http-10.0/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/akka-http-10.0/build.gradle b/dd-java-agent/instrumentation/akka-http-10.0/build.gradle
--- a/dd-java-agent/instrumentation/akka-http-10.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/akka-http-10.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -22,12 +22,12 @@
 addTestSuiteForDir 'version102IastTest', 'iastTest'
 addTestSuiteForDir 'latestDepIastTest', 'iastTest'
 
-compileLagomTestJava {
+tasks.named("compileLagomTestJava", JavaCompile).configure {
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
 }
 
-compileLagomTestGroovy {
+tasks.named("compileLagomTestGroovy", GroovyCompile).configure {
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
 }
@@ -86,7 +86,7 @@
 
 // Create test artifacts so play-2.6 can reuse the akka-http test instrumentation
 artifacts {
-  testArtifacts baseTestJar
+  testArtifacts tasks.named("baseTestJar", Jar)
 }
 
 sourceSets {
@@ -168,32 +168,32 @@
   lagomTestImplementation group: 'com.lightbend.lagom', name: 'lagom-javadsl-testkit_2.11', version: '1.4.0'
 }
 
-compileBaseTestGroovy {
+tasks.named("compileBaseTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileBaseTestScala.destinationDirectory))
   dependsOn "compileBaseTestScala"
 }
 
-compileBaseForkedTestGroovy {
+tasks.named("compileBaseForkedTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileBaseTestScala.destinationDirectory))
   dependsOn "compileBaseTestScala"
 }
 
-compileVersion101TestGroovy {
+tasks.named("compileVersion101TestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileVersion101TestScala.destinationDirectory))
   dependsOn "compileVersion101TestScala"
 }
 
-compileVersion101ForkedTestGroovy {
+tasks.named("compileVersion101ForkedTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileVersion101TestScala.destinationDirectory))
   dependsOn "compileVersion101TestScala"
 }
 
-compileVersion102Scala213TestGroovy {
+tasks.named("compileVersion102Scala213TestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileVersion102Scala213TestScala.destinationDirectory))
   dependsOn "compileVersion102Scala213TestScala"
 }
 
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileLatestDepTestScala.destinationDirectory))
   dependsOn "compileLatestDepTestScala"
 }
Index: dd-java-agent/instrumentation/akka-init/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/akka-init/build.gradle b/dd-java-agent/instrumentation/akka-init/build.gradle
--- a/dd-java-agent/instrumentation/akka-init/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/akka-init/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
 def akkaVersion = '2.3.2'
 def scalaVersion = '2.11'
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-scala.gradle"
+
 muzzle {
   pass {
     group = 'com.typesafe.akka'
@@ -11,9 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-scala.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/apache-httpasyncclient-4/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/apache-httpasyncclient-4/build.gradle b/dd-java-agent/instrumentation/apache-httpasyncclient-4/build.gradle
--- a/dd-java-agent/instrumentation/apache-httpasyncclient-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/apache-httpasyncclient-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/apache-httpclient-4/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/apache-httpclient-4/build.gradle b/dd-java-agent/instrumentation/apache-httpclient-4/build.gradle
--- a/dd-java-agent/instrumentation/apache-httpclient-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/apache-httpclient-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   fail {
     group = "commons-httpclient"
@@ -20,8 +22,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuite('iastIntegrationTest')
 addTestSuiteExtendingForDir('v41IastIntegrationTest', 'iastIntegrationTest', 'iastIntegrationTest')
Index: dd-java-agent/instrumentation/apache-httpclient-5/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/apache-httpclient-5/build.gradle b/dd-java-agent/instrumentation/apache-httpclient-5/build.gradle
--- a/dd-java-agent/instrumentation/apache-httpclient-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/apache-httpclient-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.httpcomponents.client5"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/apache-httpcore-4/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/apache-httpcore-4/build.gradle b/dd-java-agent/instrumentation/apache-httpcore-4/build.gradle
--- a/dd-java-agent/instrumentation/apache-httpcore-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/apache-httpcore-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.httpcomponents"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/armeria-grpc/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/armeria-grpc/build.gradle b/dd-java-agent/instrumentation/armeria-grpc/build.gradle
--- a/dd-java-agent/instrumentation/armeria-grpc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/armeria-grpc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 plugins {
-  id 'com.google.protobuf' version '0.8.18'
+  id 'com.google.protobuf' version '0.9.4'
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'idea'
 
 muzzle {
   pass {
@@ -12,9 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'idea'
-
 // First version with Mac M1 support
 def protocVersion = '3.17.3'
 def grpcVersion = '1.42.2'
@@ -31,8 +31,10 @@
     }
   }
   generateProtoTasks {
-    all()*.plugins {
-      grpc {}
+    all().configureEach {
+      plugins {
+        grpc {}
+      }
     }
   }
 }
@@ -42,7 +44,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/armeria-jetty/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/armeria-jetty/build.gradle b/dd-java-agent/instrumentation/armeria-jetty/build.gradle
--- a/dd-java-agent/instrumentation/armeria-jetty/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/armeria-jetty/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,10 @@
   jetty11TestMinJavaVersionForTests = JavaVersion.VERSION_11
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+// TODO: This needed? not implicit?
+apply from: "$rootDir/gradle/configure_tests.gradle"
+
 muzzle {
   pass {
     group = "com.linecorp.armeria"
@@ -15,9 +19,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/configure_tests.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 addTestSuiteForDir("jetty9Test", "test/jetty9")
@@ -25,8 +26,13 @@
 addTestSuiteExtendingForDir("jetty9LatestDepTest", "latestDepTest", "test/jetty9")
 addTestSuiteExtendingForDir("jetty11LatestDepTest", "latestDepTest", "test/jetty11")
 
-[compileJetty11TestGroovy, jetty11Test, compileJetty11LatestDepTestGroovy, jetty11LatestDepTest].each {
-  it.configure {
+for (final taskName in [
+    'compileJetty11TestGroovy',
+    'jetty11Test',
+    'compileJetty11LatestDepTestGroovy',
+    'jetty11LatestDepTest'
+  ]) {
+  tasks.named(taskName).configure {
     javaLauncher = getJavaLauncherFor(11)
   }
 }
Index: dd-java-agent/instrumentation/avro/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/avro/build.gradle b/dd-java-agent/instrumentation/avro/build.gradle
--- a/dd-java-agent/instrumentation/avro/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/avro/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 ext {
   latestDepTestMinJavaVersionForTests = JavaVersion.VERSION_11
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.apache.avro'
@@ -10,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest','test')
 addTestSuiteForDir('latestDepTest8','test')
 dependencies {
Index: dd-java-agent/instrumentation/aws-java-sdk-1.11.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/build.gradle b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 // compiling against 1.11.0, but instrumentation should work against 1.10.33 with varying effects,
 // depending on the version's implementation. (i.e. DeleteOptionGroup may have less handlerCounts than
 // expected in 1.11.84. Testing against 1.11.0 instead of 1.10.33 because the RequestHandler class
@@ -14,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 // Features used in test_1_11_106 (builder) is available since 1.11.84, but
 // using 1.11.106 because of previous concerns with byte code differences
 // in 1.11.106, also, the DeleteOptionGroup request generates more spans
Index: dd-java-agent/instrumentation/aws-java-sdk-2.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sdk-2.2/build.gradle b/dd-java-agent/instrumentation/aws-java-sdk-2.2/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sdk-2.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sdk-2.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "software.amazon.awssdk"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 // Broken: at some point S3 moved the bucket name to the hostname resulting in host not found somebucket.localhost on all S3 tests
 // addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
Index: dd-java-agent/instrumentation/aws-java-sns-1.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sns-1.0/build.gradle b/dd-java-agent/instrumentation/aws-java-sns-1.0/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sns-1.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sns-1.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.amazonaws"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/aws-java-sns-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sns-2.0/build.gradle b/dd-java-agent/instrumentation/aws-java-sns-2.0/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sns-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sns-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "software.amazon.awssdk"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/aws-java-sqs-1.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sqs-1.0/build.gradle b/dd-java-agent/instrumentation/aws-java-sqs-1.0/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sqs-1.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sqs-1.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -9,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/aws-java-sqs-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-java-sqs-2.0/build.gradle b/dd-java-agent/instrumentation/aws-java-sqs-2.0/build.gradle
--- a/dd-java-agent/instrumentation/aws-java-sqs-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-java-sqs-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -10,12 +11,9 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
-
 dependencies {
   compileOnly group: 'software.amazon.awssdk', name: 'sqs', version: '2.2.0'
   compileOnly group: 'com.amazonaws', name: 'amazon-sqs-java-messaging-lib', version: '2.0.0'
Index: dd-java-agent/instrumentation/aws-lambda-handler/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/aws-lambda-handler/build.gradle b/dd-java-agent/instrumentation/aws-lambda-handler/build.gradle
--- a/dd-java-agent/instrumentation/aws-lambda-handler/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/aws-lambda-handler/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.amazonaws'
@@ -6,20 +8,12 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
-test {
-  environment "_HANDLER", "Handler"
-}
-
-forkedTest {
-  environment "_HANDLER", "Handler"
-}
-
-latestDepTest {
-  environment "_HANDLER", "Handler"
+for (final taskName in ['test', 'forkedTest', 'latestDepTest']) {
+  tasks.named(taskName).configure {
+    environment "_HANDLER", "Handler"
+  }
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/axis-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/axis-2/build.gradle b/dd-java-agent/instrumentation/axis-2/build.gradle
--- a/dd-java-agent/instrumentation/axis-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/axis-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.axis2"
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('latestDepForkedTest', 'test')
 configurations.all {
Index: dd-java-agent/instrumentation/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/build.gradle b/dd-java-agent/instrumentation/build.gradle
--- a/dd-java-agent/instrumentation/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 // this project will run in isolation under the agent's classloader
 buildscript {
 
@@ -14,100 +16,14 @@
 }
 apply from: "$rootDir/gradle/java.gradle"
 
-
 tasks.register("latestDepTest")
 
 Project parent_project = project
 subprojects { Project subProj ->
-  apply plugin: 'instrument'
-  apply plugin: 'muzzle'
-
-  configurations {
-    instrumentPluginClasspath {
-      visible = false
-      canBeConsumed = false
-      canBeResolved = true
-    }
-  }
-
-  instrument.plugins = [
-    'datadog.trace.agent.tooling.muzzle.MuzzleGradlePlugin',
-    'datadog.trace.agent.tooling.bytebuddy.NewTaskForGradlePlugin',
-    'datadog.trace.agent.tooling.bytebuddy.reqctx.RewriteRequestContextAdvicePlugin',
-  ]
-
-  subProj.tasks.withType(Javadoc).configureEach { enabled = false }
-
-  subProj.afterEvaluate {
-    String jdkCompile = null
-    if (project.hasProperty('minJavaVersionForTests') && project.getProperty('minJavaVersionForTests') != JavaVersion.VERSION_1_8) {
-      def version = JavaVersion.toVersion(project.getProperty('minJavaVersionForTests'))
-      def name = "java$version.majorVersion"
-      jdkCompile = "main_${name}Implementation"
-    }
-    dependencies {
-      // Apply common dependencies for instrumentation.
-      implementation project(':dd-trace-api')
-      implementation project(':dd-java-agent:agent-tooling')
-      implementation libs.bytebuddy
-      if (jdkCompile) {
-        "$jdkCompile" project(':dd-trace-api')
-        "$jdkCompile" project(':dd-java-agent:agent-tooling')
-        "$jdkCompile" libs.bytebuddy
-      }
-
-      annotationProcessor libs.autoservice.processor
-      compileOnly libs.autoservice.annotation
-
-      // Include instrumentations instrumenting core JDK classes to ensure interoperability with other instrumentation
-      testImplementation project(':dd-java-agent:instrumentation:java-concurrent')
-      testImplementation project(':dd-java-agent:instrumentation:java-concurrent:java-completablefuture')
-      // FIXME: we should enable this, but currently this fails tests for google http client
-      //testImplementation project(':dd-java-agent:instrumentation:http-url-connection')
-      testImplementation project(':dd-java-agent:instrumentation:classloading')
-
-      testImplementation project(':dd-java-agent:testing')
-      testAnnotationProcessor libs.autoservice.processor
-      testCompileOnly libs.autoservice.annotation
-
-      instrumentPluginClasspath project(path: ':dd-java-agent:agent-tooling', configuration: 'instrumentPluginClasspath')
-    }
-
-    subProj.testing {
-      suites.configureEach {
-        // SpockRunner that we use to run agent tests cannot be properly ported to JUnit 5,
-        // since the framework does not provide the hooks / extension points
-        // that can be used to shadow the tested class.
-
-        // In order to mitigate this, SpockRunner extends JUnitPlatform,
-        // which is a JUnit 4 runner that allows executing JUnit 5 tests in a JUnit 4 environment
-        // (i.e. running them as JUnit 4 tests).
-
-        // So even though Spock 2 tests run on top of JUnit 5,
-        // we execute them in "compatibility mode" so that SpockRunner could shadow the test class
-        // See https://junit.org/junit5/docs/current/user-guide/#running-tests-junit-platform-runner for more details.
-        useJUnit()
-      }
-    }
-
-    subProj.tasks.withType(Test).configureEach { subTask ->
-      // The `forkedTest` task is not a proper test suite, so it has to be configured directly
-      if (subTask.name == 'forkedTest') {
-        // See SpockRunner comment above
-        useJUnit()
-      }
-
-      if (subTask.name in ['latestDepTest', 'latestDepForkedTest']) {
-        subTask.jvmArgs '-Dtest.dd.latestDepTest=true'
-      }
-    }
-  }
-
-  def path = subProj.getPath()
   // don't include the redis RequestImpl stub
-  if (!path.equals(':dd-java-agent:instrumentation:vertx-redis-client-3.9:stubs')) {
+  if (!subProj.path.equals(':dd-java-agent:instrumentation:vertx-redis-client-3.9:stubs')) {
     parent_project.dependencies {
-      implementation project(path)
+      implementation subProj
     }
   }
 }
@@ -128,7 +44,7 @@
 }
 
 
-tasks.named('shadowJar').configure {
+tasks.named('shadowJar', ShadowJar).configure {
   duplicatesStrategy = DuplicatesStrategy.FAIL
   dependencies {
     // the tracer is now in a separate shadow jar
@@ -177,4 +93,7 @@
   dependsOn 'processResources'
 }
 
-shadowJar.dependsOn 'generateInstrumenterIndex', 'generateKnownTypesIndex'
+tasks.named("shadowJar").configure {
+  dependsOn 'generateInstrumenterIndex', 'generateKnownTypesIndex'
+}
+
Index: dd-java-agent/instrumentation/commons-codec-1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/commons-codec-1/build.gradle b/dd-java-agent/instrumentation/commons-codec-1/build.gradle
--- a/dd-java-agent/instrumentation/commons-codec-1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/commons-codec-1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'commons-codec'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/commons-httpclient-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/commons-httpclient-2/build.gradle b/dd-java-agent/instrumentation/commons-httpclient-2/build.gradle
--- a/dd-java-agent/instrumentation/commons-httpclient-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/commons-httpclient-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "commons-httpclient"
@@ -18,8 +20,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/commons-lang-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/commons-lang-2/build.gradle b/dd-java-agent/instrumentation/commons-lang-2/build.gradle
--- a/dd-java-agent/instrumentation/commons-lang-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/commons-lang-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'commons-lang'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/commons-lang-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/commons-lang-3/build.gradle b/dd-java-agent/instrumentation/commons-lang-3/build.gradle
--- a/dd-java-agent/instrumentation/commons-lang-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/commons-lang-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.apache.commons'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/commons-text/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/commons-text/build.gradle b/dd-java-agent/instrumentation/commons-text/build.gradle
--- a/dd-java-agent/instrumentation/commons-text/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/commons-text/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.apache.commons'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/couchbase/couchbase-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/couchbase/couchbase-2.0/build.gradle b/dd-java-agent/instrumentation/couchbase/couchbase-2.0/build.gradle
--- a/dd-java-agent/instrumentation/couchbase/couchbase-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/couchbase/couchbase-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -34,7 +34,7 @@
 
 // Create test artifacts so couchbase-2.6 can reuse tests
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/couchbase/couchbase-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/couchbase/couchbase-3.1/build.gradle b/dd-java-agent/instrumentation/couchbase/couchbase-3.1/build.gradle
--- a/dd-java-agent/instrumentation/couchbase/couchbase-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/couchbase/couchbase-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -10,8 +11,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/couchbase/couchbase-3.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/couchbase/couchbase-3.2/build.gradle b/dd-java-agent/instrumentation/couchbase/couchbase-3.2/build.gradle
--- a/dd-java-agent/instrumentation/couchbase/couchbase-3.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/couchbase/couchbase-3.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -10,8 +11,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/cxf-2.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/cxf-2.1/build.gradle b/dd-java-agent/instrumentation/cxf-2.1/build.gradle
--- a/dd-java-agent/instrumentation/cxf-2.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/cxf-2.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 ext {
   minVersionForTests = JavaVersion.VERSION_11
 }
+
+apply from: "${rootDir}/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.cxf"
@@ -17,21 +20,23 @@
   }
 }
 
-apply from: "${rootDir}/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 addTestSuiteForDir('cxf3LatestDepTest', 'test')
 
-[compileLatestDepTestJava, compileCxf3LatestDepTestJava].each {
-  it.configure {
-    setJavaVersion(it, 11)
+for (final taskName in ['compileLatestDepTestJava', 'compileCxf3LatestDepTestJava']) {
+  tasks.named(taskName, JavaCompile).configure {
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
   }
 }
 
-[compileLatestDepTestGroovy, latestDepTest, compileCxf3LatestDepTestGroovy, cxf3LatestDepTest].each {
-  it.configure {
+for (final taskName in [
+    'compileLatestDepTestGroovy',
+    'latestDepTest',
+    'compileCxf3LatestDepTestGroovy',
+    'cxf3LatestDepTest'
+  ]) {
+  tasks.named(taskName).configure {
     javaLauncher = getJavaLauncherFor(11)
   }
 }
Index: dd-java-agent/instrumentation/datanucleus-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/datanucleus-4/build.gradle b/dd-java-agent/instrumentation/datanucleus-4/build.gradle
--- a/dd-java-agent/instrumentation/datanucleus-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/datanucleus-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -12,6 +12,8 @@
   }
 }
 
+apply from: "${rootDir}/gradle/java.gradle"
+
 muzzle {
   // 2 libraries are instrumented.
   // Muzzle is tested by keeping one version fixed and modifying the other
@@ -33,8 +35,6 @@
   }
 }
 
-apply from: "${rootDir}/gradle/java.gradle"
-
 def datanucleusVersion = '4.0.5'
 
 // Datanucleus modifies persistable objects with bytecode manipulation
Index: dd-java-agent/instrumentation/datastax-cassandra-3.8/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/datastax-cassandra-3.8/build.gradle b/dd-java-agent/instrumentation/datastax-cassandra-3.8/build.gradle
--- a/dd-java-agent/instrumentation/datastax-cassandra-3.8/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/datastax-cassandra-3.8/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,7 @@
   cassandraDriverTestVersions = "[3.8,4.0)"
 }
 
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
 
@@ -17,8 +18,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/datastax-cassandra-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/datastax-cassandra-3/build.gradle b/dd-java-agent/instrumentation/datastax-cassandra-3/build.gradle
--- a/dd-java-agent/instrumentation/datastax-cassandra-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/datastax-cassandra-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,7 @@
   cassandraDriverTestVersions = "[3.0,4.0)"
 }
 
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
 
@@ -41,8 +42,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/datastax-cassandra-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/datastax-cassandra-4/build.gradle b/dd-java-agent/instrumentation/datastax-cassandra-4/build.gradle
--- a/dd-java-agent/instrumentation/datastax-cassandra-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/datastax-cassandra-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,6 +4,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_15
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.datastax.oss"
@@ -13,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/rest-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/rest-5/build.gradle b/dd-java-agent/instrumentation/elasticsearch/rest-5/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/rest-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/rest-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_15
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.elasticsearch.client"
@@ -22,8 +24,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/rest-6.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/rest-6.4/build.gradle b/dd-java-agent/instrumentation/elasticsearch/rest-6.4/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/rest-6.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/rest-6.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -15,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/rest-7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/rest-7/build.gradle b/dd-java-agent/instrumentation/elasticsearch/rest-7/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/rest-7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/rest-7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -15,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/transport-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport-2/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport-2/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.elasticsearch"
@@ -13,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/transport-5.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport-5.3/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport-5.3/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport-5.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport-5.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -16,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/transport-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport-5/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport-5/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_15
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.elasticsearch.client"
@@ -22,8 +24,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.elasticsearch.client', name: 'transport', version: '5.0.0'
 
Index: dd-java-agent/instrumentation/elasticsearch/transport-6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport-6/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport-6/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport-6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport-6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -16,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/transport-7.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport-7.3/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport-7.3/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport-7.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport-7.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -16,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/elasticsearch/transport/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/elasticsearch/transport/build.gradle b/dd-java-agent/instrumentation/elasticsearch/transport/build.gradle
--- a/dd-java-agent/instrumentation/elasticsearch/transport/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/elasticsearch/transport/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -16,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.elasticsearch.client', name: 'transport', version: '7.3.0'
 }
Index: dd-java-agent/instrumentation/exception-profiling/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/exception-profiling/build.gradle b/dd-java-agent/instrumentation/exception-profiling/build.gradle
--- a/dd-java-agent/instrumentation/exception-profiling/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/exception-profiling/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -18,14 +18,16 @@
 }
 
 // Must use Java 11 to build JFR enabled code - there is no JFR in OpenJDK 8 (revisit once JFR in Java 8 is available)
-[compileMain_java11Java, compileTestJava].each {
-  setJavaVersion(it, 11)
-  it.sourceCompatibility = JavaVersion.VERSION_1_8
-  it.targetCompatibility = JavaVersion.VERSION_1_8
-  it.options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'])
+for (final taskName in ['compileMain_java11Java', 'compileTestJava']) {
+  tasks.named(taskName, JavaCompile).configure {
+    setJavaVersion(it, 11)
+    it.sourceCompatibility = JavaVersion.VERSION_1_8
+    it.targetCompatibility = JavaVersion.VERSION_1_8
+    it.options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'])
+  }
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/instrumentation/freemarker-2.3.24/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/freemarker-2.3.24/build.gradle b/dd-java-agent/instrumentation/freemarker-2.3.24/build.gradle
--- a/dd-java-agent/instrumentation/freemarker-2.3.24/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/freemarker-2.3.24/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.freemarker'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/glassfish/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/glassfish/build.gradle b/dd-java-agent/instrumentation/glassfish/build.gradle
--- a/dd-java-agent/instrumentation/glassfish/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/glassfish/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.glassfish.main.extras'
@@ -12,8 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/google-http-client/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/google-http-client/build.gradle b/dd-java-agent/instrumentation/google-http-client/build.gradle
--- a/dd-java-agent/instrumentation/google-http-client/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/google-http-client/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.google.http-client"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/google-pubsub/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/google-pubsub/build.gradle b/dd-java-agent/instrumentation/google-pubsub/build.gradle
--- a/dd-java-agent/instrumentation/google-pubsub/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/google-pubsub/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.google.cloud"
@@ -6,12 +8,10 @@
     excludeDependency "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
   }
 }
-apply from: "$rootDir/gradle/java.gradle"
 
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
-
 dependencies {
   compileOnly group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.116.0'
   testImplementation group: 'org.testcontainers', name: 'gcloud', version: libs.versions.testcontainers.get()
Index: dd-java-agent/instrumentation/graal/native-image/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/graal/native-image/build.gradle b/dd-java-agent/instrumentation/graal/native-image/build.gradle
--- a/dd-java-agent/instrumentation/graal/native-image/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/graal/native-image/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   minJavaVersionForTests = JavaVersion.VERSION_11
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: "idea"
+
 muzzle {
   pass {
     group = "org.graalvm.nativeimage"
@@ -10,20 +13,19 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: "idea"
-
-[compileMain_java11Java, compileTestJava].each {
-  it.sourceCompatibility = JavaVersion.VERSION_11
-  it.targetCompatibility = JavaVersion.VERSION_11
-  setJavaVersion(it, 11)
-  it.options.compilerArgs.addAll([
-    '-Xlint:all,-processing,-options,-path',
-    '--add-modules',
-    'jdk.internal.vm.ci',
-    '--add-exports',
-    'jdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED'
-  ])
+for (final taskName in ["compileMain_java11Java", "compileTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
+    it.sourceCompatibility = JavaVersion.VERSION_11
+    it.targetCompatibility = JavaVersion.VERSION_11
+    setJavaVersion(it, 11)
+    it.options.compilerArgs.addAll([
+      '-Xlint:all,-processing,-options,-path',
+      '--add-modules',
+      'jdk.internal.vm.ci',
+      '--add-exports',
+      'jdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED'
+    ])
+  }
 }
 
 dependencies {
@@ -32,7 +34,7 @@
   main_java11CompileOnly group: 'org.graalvm.nativeimage', name: 'svm', version: '20.0.0'
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/instrumentation/gradle-3.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/gradle-3.0/build.gradle b/dd-java-agent/instrumentation/gradle-3.0/build.gradle
--- a/dd-java-agent/instrumentation/gradle-3.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/gradle-3.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,6 +10,6 @@
   compileOnly gradleApi()
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
Index: dd-java-agent/instrumentation/gradle-8.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/gradle-8.3/build.gradle b/dd-java-agent/instrumentation/gradle-8.3/build.gradle
--- a/dd-java-agent/instrumentation/gradle-8.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/gradle-8.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,6 +10,6 @@
   compileOnly gradleApi()
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
Index: dd-java-agent/instrumentation/graphql-java/graphql-java-14.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/graphql-java/graphql-java-14.0/build.gradle b/dd-java-agent/instrumentation/graphql-java/graphql-java-14.0/build.gradle
--- a/dd-java-agent/instrumentation/graphql-java/graphql-java-14.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/graphql-java/graphql-java-14.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.graphql-java"
@@ -9,8 +11,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/graphql-java/graphql-java-20.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/graphql-java/graphql-java-20.0/build.gradle b/dd-java-agent/instrumentation/graphql-java/graphql-java-20.0/build.gradle
--- a/dd-java-agent/instrumentation/graphql-java/graphql-java-20.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/graphql-java/graphql-java-20.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,6 +4,9 @@
   graphql21LatestDepTestMinJavaVersionForTests = JavaVersion.VERSION_11
   graphql21LatestDepForkedTestMinJavaVersionForTests = JavaVersion.VERSION_11
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 // there are a lot of invalid version using dates (i.e. com.graphql-java-graphql-java-2018-06-04T04-23-07)
 // so we limit by chunks
 muzzle {
@@ -30,8 +33,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 addTestSuiteForDir('graphql20LatestDepTest', 'test')
@@ -51,19 +52,10 @@
   graphql20LatestDepTestImplementation group: 'com.graphql-java', name: 'graphql-java', version: '20.+'
   graphql21LatestDepTestImplementation group: 'com.graphql-java', name: 'graphql-java', version: '21.+'
   latestDepTestImplementation group: 'com.graphql-java', name: 'graphql-java', version: '22.+'
+}
 
-  [
-    compileLatestDepTestJava,
-    compileLatestDepTestGroovy,
-    compileLatestDepForkedTestJava,
-    compileLatestDepForkedTestGroovy,
-    compileGraphql21LatestDepTestJava,
-    compileGraphql21LatestDepTestGroovy,
-    compileGraphql21LatestDepForkedTestJava,
-    compileGraphql21LatestDepForkedTestGroovy
-  ].each {
-    it.configure {
-      setJavaVersion(it, 11)
-    }
+tasks.withType(AbstractCompile).configureEach {
+  if (it.name.toLowerCase(Locale.ROOT).contains('latestdep')) {
+    setJavaVersion(it, 11)
   }
 }
Index: dd-java-agent/instrumentation/graphql-java/graphql-java-common/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/graphql-java/graphql-java-common/build.gradle b/dd-java-agent/instrumentation/graphql-java/graphql-java-common/build.gradle
--- a/dd-java-agent/instrumentation/graphql-java/graphql-java-common/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/graphql-java/graphql-java-common/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -7,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'com.graphql-java', name: 'graphql-java', version: '14.0'
 }
Index: dd-java-agent/instrumentation/grizzly-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/grizzly-2/build.gradle b/dd-java-agent/instrumentation/grizzly-2/build.gradle
--- a/dd-java-agent/instrumentation/grizzly-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/grizzly-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.glassfish.grizzly"
@@ -10,8 +12,6 @@
   // https://mvnrepository.com/artifact/com.sun.grizzly/grizzly-http
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/grizzly-client-1.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/grizzly-client-1.9/build.gradle b/dd-java-agent/instrumentation/grizzly-client-1.9/build.gradle
--- a/dd-java-agent/instrumentation/grizzly-client-1.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/grizzly-client-1.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -14,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/grizzly-http-2.3.20/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/grizzly-http-2.3.20/build.gradle b/dd-java-agent/instrumentation/grizzly-http-2.3.20/build.gradle
--- a/dd-java-agent/instrumentation/grizzly-http-2.3.20/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/grizzly-http-2.3.20/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.glassfish.grizzly"
@@ -11,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
@@ -34,6 +34,6 @@
   latestDepTestImplementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.+'
 }
 
-tasks.withType(Test) {
+tasks.withType(Test).configureEach {
   jvmArgs += ['-Ddd.integration.grizzly-filterchain.enabled=true']
 }
Index: dd-java-agent/instrumentation/grpc-1.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/grpc-1.5/build.gradle b/dd-java-agent/instrumentation/grpc-1.5/build.gradle
--- a/dd-java-agent/instrumentation/grpc-1.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/grpc-1.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 plugins {
-  id 'com.google.protobuf' version '0.8.18'
+  id 'com.google.protobuf' version '0.9.4'
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'idea'
 
 muzzle {
   pass {
@@ -10,9 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'idea'
-
 // First version with Mac M1 support
 def grpcVersion = '1.42.2'
 protobuf {
@@ -26,7 +26,9 @@
     grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
   }
   generateProtoTasks {
-    all()*.plugins { grpc {} }
+    all().configureEach {
+      plugins { grpc {} }
+    }
   }
 }
 
Index: dd-java-agent/instrumentation/gson-1.6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/gson-1.6/build.gradle b/dd-java-agent/instrumentation/gson-1.6/build.gradle
--- a/dd-java-agent/instrumentation/gson-1.6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/gson-1.6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.google.code.gson'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/guava-10/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/guava-10/build.gradle b/dd-java-agent/instrumentation/guava-10/build.gradle
--- a/dd-java-agent/instrumentation/guava-10/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/guava-10/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "${rootDir}/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.google.guava"
@@ -10,8 +12,6 @@
   }
 }
 
-apply from: "${rootDir}/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hazelcast-3.6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hazelcast-3.6/build.gradle b/dd-java-agent/instrumentation/hazelcast-3.6/build.gradle
--- a/dd-java-agent/instrumentation/hazelcast-3.6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hazelcast-3.6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.hazelcast"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hazelcast-3.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hazelcast-3.9/build.gradle b/dd-java-agent/instrumentation/hazelcast-3.9/build.gradle
--- a/dd-java-agent/instrumentation/hazelcast-3.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hazelcast-3.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.hazelcast"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hazelcast-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hazelcast-4.0/build.gradle b/dd-java-agent/instrumentation/hazelcast-4.0/build.gradle
--- a/dd-java-agent/instrumentation/hazelcast-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hazelcast-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hibernate/core-3.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hibernate/core-3.3/build.gradle b/dd-java-agent/instrumentation/hibernate/core-3.3/build.gradle
--- a/dd-java-agent/instrumentation/hibernate/core-3.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hibernate/core-3.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
  * instrumentation isn't able to reference it.
  */
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.hibernate"
@@ -14,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hibernate/core-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hibernate/core-4.0/build.gradle b/dd-java-agent/instrumentation/hibernate/core-4.0/build.gradle
--- a/dd-java-agent/instrumentation/hibernate/core-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hibernate/core-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.hibernate"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/hibernate/core-4.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hibernate/core-4.3/build.gradle b/dd-java-agent/instrumentation/hibernate/core-4.3/build.gradle
--- a/dd-java-agent/instrumentation/hibernate/core-4.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hibernate/core-4.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.hibernate"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/http-url-connection/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/http-url-connection/build.gradle b/dd-java-agent/instrumentation/http-url-connection/build.gradle
--- a/dd-java-agent/instrumentation/http-url-connection/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/http-url-connection/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,11 +1,11 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   testImplementation group: 'org.springframework', name: 'spring-web', version: '4.3.7.RELEASE'
 }
Index: dd-java-agent/instrumentation/hystrix-1.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/hystrix-1.4/build.gradle b/dd-java-agent/instrumentation/hystrix-1.4/build.gradle
--- a/dd-java-agent/instrumentation/hystrix-1.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/hystrix-1.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.netflix.hystrix"
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/iast-instrumenter/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/iast-instrumenter/build.gradle b/dd-java-agent/instrumentation/iast-instrumenter/build.gradle
--- a/dd-java-agent/instrumentation/iast-instrumenter/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/iast-instrumenter/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,16 +1,16 @@
+apply from: "${rootDir}/gradle/java.gradle"
+apply from: "${rootDir}/gradle/tries.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "${rootDir}/gradle/java.gradle"
-apply from: "${rootDir}/gradle/tries.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
-compileJava.dependsOn 'generateClassNameTries'
-sourcesJar.dependsOn 'generateClassNameTries'
+tasks.named('compileJava').configure { dependsOn 'generateClassNameTries' }
+tasks.named("sourcesJar", Jar).configure { dependsOn 'generateClassNameTries' }
 
 dependencies {
   testImplementation project(':dd-java-agent:agent-tooling')
Index: dd-java-agent/instrumentation/ignite-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/ignite-2.0/build.gradle b/dd-java-agent/instrumentation/ignite-2.0/build.gradle
--- a/dd-java-agent/instrumentation/ignite-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/ignite-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.apache.ignite'
@@ -11,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jackson-core/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jackson-core/build.gradle b/dd-java-agent/instrumentation/jackson-core/build.gradle
--- a/dd-java-agent/instrumentation/jackson-core/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jackson-core/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.fasterxml.jackson.core'
@@ -15,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 final jacksonVersion = '2.14.0'
Index: dd-java-agent/instrumentation/jackson-core/jackson-core-1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jackson-core/jackson-core-1/build.gradle b/dd-java-agent/instrumentation/jackson-core/jackson-core-1/build.gradle
--- a/dd-java-agent/instrumentation/jackson-core/jackson-core-1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jackson-core/jackson-core-1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.codehaus.jackson'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 final jacksonVersion = '1.9.13'
Index: dd-java-agent/instrumentation/jakarta-jms/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jakarta-jms/build.gradle b/dd-java-agent/instrumentation/jakarta-jms/build.gradle
--- a/dd-java-agent/instrumentation/jakarta-jms/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jakarta-jms/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   minJavaVersionForTests = JavaVersion.VERSION_17
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/configure_tests.gradle"
+
 muzzle {
   pass {
     group = "jakarta.jms"
@@ -12,9 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/configure_tests.gradle"
-
 repositories {
   maven {
     // only place that has org.jboss.naming:jnpserver:5.0.3.GA publicly accessible
@@ -23,7 +23,7 @@
   }
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   it.javaLauncher = getJavaLauncherFor(17)
 }
 
Index: dd-java-agent/instrumentation/jakarta-rs-annotations-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jakarta-rs-annotations-3/build.gradle b/dd-java-agent/instrumentation/jakarta-rs-annotations-3/build.gradle
--- a/dd-java-agent/instrumentation/jakarta-rs-annotations-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jakarta-rs-annotations-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -7,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepJava11Test', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/java-concurrent/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-concurrent/build.gradle b/dd-java-agent/instrumentation/java-concurrent/build.gradle
--- a/dd-java-agent/instrumentation/java-concurrent/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-concurrent/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,11 +1,11 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   testImplementation project(':dd-java-agent:instrumentation:trace-annotation')
 
Index: dd-java-agent/instrumentation/java-concurrent/java-completablefuture/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-concurrent/java-completablefuture/build.gradle b/dd-java-agent/instrumentation/java-concurrent/java-completablefuture/build.gradle
--- a/dd-java-agent/instrumentation/java-concurrent/java-completablefuture/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-concurrent/java-completablefuture/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,16 +1,16 @@
-
-muzzle {
-  pass {
-    coreJdk()
-  }
-}
-
 ext {
   skipSettingCompilerRelease = true
 }
+
 apply from: "${rootDir}/gradle/java.gradle"
 
-compileJava {
+muzzle {
+  pass {
+    coreJdk()
+  }
+}
+
+tasks.named("compileJava", JavaCompile).configure {
   javaCompiler = javaToolchains.compilerFor {
     languageVersion = JavaLanguageVersion.of(8)
   }
Index: dd-java-agent/instrumentation/java-concurrent/java-concurrent-21/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-concurrent/java-concurrent-21/build.gradle b/dd-java-agent/instrumentation/java-concurrent/java-concurrent-21/build.gradle
--- a/dd-java-agent/instrumentation/java-concurrent/java-concurrent-21/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-concurrent/java-concurrent-21/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -22,20 +22,21 @@
  */
 addTestSuite('previewTest')
 // Configure groovy test file compilation
-compilePreviewTestGroovy.configure {
+tasks.named("compilePreviewTestGroovy", GroovyCompile).configure {
   javaLauncher = javaToolchains.launcherFor {
     languageVersion = JavaLanguageVersion.of(21)
   }
   options.compilerArgs.add("--enable-preview")
 }
 // Configure Java test files compilation
-compilePreviewTestJava.configure {
+tasks.named("compilePreviewTestJava", JavaCompile).configure {
   options.compilerArgs.add("--enable-preview")
 }
 // Configure tests execution
-previewTest.configure {
+tasks.named("previewTest", Test).configure {
   jvmArgs = ['--enable-preview']
 }
+
 // Require the preview test suite to run as part of module check
 tasks.named("check").configure {
   dependsOn "previewTest"
@@ -49,7 +50,7 @@
 project.tasks.withType(AbstractCompile).configureEach {
   setJavaVersion(it, 21)
 }
-compileJava.configure {
+tasks.named("compileJava", JavaCompile).configure {
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
 }
Index: dd-java-agent/instrumentation/java-directbytebuffer/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-directbytebuffer/build.gradle b/dd-java-agent/instrumentation/java-directbytebuffer/build.gradle
--- a/dd-java-agent/instrumentation/java-directbytebuffer/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-directbytebuffer/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,24 +2,27 @@
   minJavaVersionForTests = JavaVersion.VERSION_11
   excludeJdk = ['SEMERU11', 'SEMERU17']
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: "idea"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: "idea"
-
 // Must use Java 11 to build JFR enabled code - there is no JFR in OpenJDK 8 (revisit once JFR in Java 8 is available)
-[compileMain_java11Java, compileTestJava].each {
-  it.sourceCompatibility = JavaVersion.VERSION_11
-  it.targetCompatibility = JavaVersion.VERSION_11
-  setJavaVersion(it, 11)
-  it.options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'])
+for (final taskName in ["compileMain_java11Java", "compileTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
+    it.sourceCompatibility = JavaVersion.VERSION_11
+    it.targetCompatibility = JavaVersion.VERSION_11
+    setJavaVersion(it, 11)
+    it.options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'])
+  }
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/instrumentation/java-http-client/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-http-client/build.gradle b/dd-java-agent/instrumentation/java-http-client/build.gradle
--- a/dd-java-agent/instrumentation/java-http-client/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-http-client/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,27 +2,26 @@
   minJavaVersionForTests = JavaVersion.VERSION_11
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: "idea"
+
 muzzle {
   pass {
     coreJdk('11')
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: "idea"
-
-
-tasks.named("compileMain_java11Java").configure {
+tasks.named("compileMain_java11Java", JavaCompile).configure {
   it.sourceCompatibility = JavaVersion.VERSION_11
   it.targetCompatibility = JavaVersion.VERSION_11
   setJavaVersion(it, 11)
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   javaLauncher = getJavaLauncherFor(11)
 }
 
-forbiddenApisMain_java11 {
+tasks.named("forbiddenApisMain_java11").configure {
   failOnMissingClasses = false
 }
 
Index: dd-java-agent/instrumentation/java-io/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-io/build.gradle b/dd-java-agent/instrumentation/java-io/build.gradle
--- a/dd-java-agent/instrumentation/java-io/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-io/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,12 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/java-lang/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-lang/build.gradle b/dd-java-agent/instrumentation/java-lang/build.gradle
--- a/dd-java-agent/instrumentation/java-lang/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-lang/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,19 +1,19 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
   testRuntimeOnly project(':dd-java-agent:instrumentation:iast-instrumenter')
 }
 
-tasks.compileTestJava.configure {
+tasks.named("compileTestJava", JavaCompile).configure {
   setJavaVersion(it, 8)
 }
 
Index: dd-java-agent/instrumentation/java-net/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-net/build.gradle b/dd-java-agent/instrumentation/java-net/build.gradle
--- a/dd-java-agent/instrumentation/java-net/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-net/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,19 +1,19 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
   testRuntimeOnly project(':dd-java-agent:instrumentation:iast-instrumenter')
 }
 
-tasks.compileTestJava.configure {
+tasks.named("compileTestJava").configure {
   setJavaVersion(it, 8)
 }
 
Index: dd-java-agent/instrumentation/java-security/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-security/build.gradle b/dd-java-agent/instrumentation/java-security/build.gradle
--- a/dd-java-agent/instrumentation/java-security/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-security/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,12 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 tasks.withType(Test).configureEach {
Index: dd-java-agent/instrumentation/java-util/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/java-util/build.gradle b/dd-java-agent/instrumentation/java-util/build.gradle
--- a/dd-java-agent/instrumentation/java-util/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/java-util/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,12 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/javax-naming/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/javax-naming/build.gradle b/dd-java-agent/instrumentation/javax-naming/build.gradle
--- a/dd-java-agent/instrumentation/javax-naming/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/javax-naming/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,12 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
@@ -14,7 +14,7 @@
 }
 
 
-tasks.compileTestJava.configure {
+tasks.named("compileTestJava", JavaCompile).configure {
   setJavaVersion(it, 8)
 }
 
Index: dd-java-agent/instrumentation/javax-xml/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/javax-xml/build.gradle b/dd-java-agent/instrumentation/javax-xml/build.gradle
--- a/dd-java-agent/instrumentation/javax-xml/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/javax-xml/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,12 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 repositories {
   maven {
     name 'WSO2-Dist'
Index: dd-java-agent/instrumentation/jax-rs-annotations-1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-annotations-1/build.gradle b/dd-java-agent/instrumentation/jax-rs-annotations-1/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-annotations-1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-annotations-1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "javax.ws.rs"
@@ -11,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'javax.ws.rs', name: 'jsr311-api', version: '1.1.1'
 
Index: dd-java-agent/instrumentation/jax-rs-annotations-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-annotations-2/build.gradle b/dd-java-agent/instrumentation/jax-rs-annotations-2/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-annotations-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-annotations-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   fail {
@@ -12,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('resteasy31Test', 'test')
 addTestSuite('nestedTest')
Index: dd-java-agent/instrumentation/jax-rs-annotations-2/filter-jersey/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-jersey/build.gradle b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-jersey/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-jersey/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-jersey/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // Cant assert fails because muzzle assumes all instrumentations will fail
   // Instrumentations in jax-rs-annotations-2 will pass
@@ -7,7 +9,6 @@
     versions = "[2.0, 3.0.0)" // javax.ws -> jakarta.ws at 3.0.0
   }
 }
-apply from: "$rootDir/gradle/java.gradle"
 
 dependencies {
   compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
Index: dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.0/build.gradle b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.0/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // Cant assert fails because muzzle assumes all instrumentations will fail
   // Instrumentations in jax-rs-annotations-2 will pass
@@ -15,7 +17,6 @@
     versions = "[3.5.0.Final,)"
   }
 }
-apply from: "$rootDir/gradle/java.gradle"
 
 dependencies {
   compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
Index: dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.1/build.gradle b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.1/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-annotations-2/filter-resteasy-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // Cant assert fails because muzzle assumes all instrumentations will fail
   // Instrumentations in jax-rs-annotations-2 will pass
@@ -9,7 +11,6 @@
     versions = "[3.1.0.Final,3.5.0.Final)"
   }
 }
-apply from: "$rootDir/gradle/java.gradle"
 
 dependencies {
   compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
Index: dd-java-agent/instrumentation/jax-rs-client-1.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-client-1.1/build.gradle b/dd-java-agent/instrumentation/jax-rs-client-1.1/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-client-1.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-client-1.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.sun.jersey"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jax-rs-client-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-rs-client-2.0/build.gradle b/dd-java-agent/instrumentation/jax-rs-client-2.0/build.gradle
--- a/dd-java-agent/instrumentation/jax-rs-client-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-rs-client-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "javax.ws.rs"
@@ -14,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jax-ws-annotations-1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-ws-annotations-1/build.gradle b/dd-java-agent/instrumentation/jax-ws-annotations-1/build.gradle
--- a/dd-java-agent/instrumentation/jax-ws-annotations-1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-ws-annotations-1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "javax.jws"
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'javax.jws', name: 'javax.jws-api', version: '1.1'
 
Index: dd-java-agent/instrumentation/jax-ws-annotations-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jax-ws-annotations-2/build.gradle b/dd-java-agent/instrumentation/jax-ws-annotations-2/build.gradle
--- a/dd-java-agent/instrumentation/jax-ws-annotations-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jax-ws-annotations-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "javax.xml.ws"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jboss-logmanager/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jboss-logmanager/build.gradle b/dd-java-agent/instrumentation/jboss-logmanager/build.gradle
--- a/dd-java-agent/instrumentation/jboss-logmanager/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jboss-logmanager/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.jboss.logmanager'
@@ -12,8 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.jboss.logmanager', name: 'jboss-logmanager', version: '1.1.0.GA'
 }
Index: dd-java-agent/instrumentation/jboss-modules/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jboss-modules/build.gradle b/dd-java-agent/instrumentation/jboss-modules/build.gradle
--- a/dd-java-agent/instrumentation/jboss-modules/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jboss-modules/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.jboss.modules'
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.jboss.modules', name: 'jboss-modules', version: '1.3.0.Final'
 }
Index: dd-java-agent/instrumentation/jdbc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jdbc/build.gradle b/dd-java-agent/instrumentation/jdbc/build.gradle
--- a/dd-java-agent/instrumentation/jdbc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jdbc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,9 @@
   id 'me.champeau.jmh'
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     coreJdk()
@@ -10,9 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('oldH2Test', 'test')
 addTestSuiteForDir('oldPostgresTest', 'test')
 addTestSuiteForDir('latestDepTest', 'test')
Index: dd-java-agent/instrumentation/jedis-1.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jedis-1.4/build.gradle b/dd-java-agent/instrumentation/jedis-1.4/build.gradle
--- a/dd-java-agent/instrumentation/jedis-1.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jedis-1.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "redis.clients"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jedis-3.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jedis-3.0/build.gradle b/dd-java-agent/instrumentation/jedis-3.0/build.gradle
--- a/dd-java-agent/instrumentation/jedis-3.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jedis-3.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   fail {
     group = "redis.clients"
@@ -13,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jedis-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jedis-4.0/build.gradle b/dd-java-agent/instrumentation/jedis-4.0/build.gradle
--- a/dd-java-agent/instrumentation/jedis-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jedis-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   fail {
@@ -13,8 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jersey-2-appsec/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jersey-2-appsec/build.gradle b/dd-java-agent/instrumentation/jersey-2-appsec/build.gradle
--- a/dd-java-agent/instrumentation/jersey-2-appsec/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jersey-2-appsec/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = 'jersey_2'
@@ -29,8 +31,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '2.0'
   compileOnly group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.0'
Index: dd-java-agent/instrumentation/jersey-3-appsec/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jersey-3-appsec/build.gradle b/dd-java-agent/instrumentation/jersey-3-appsec/build.gradle
--- a/dd-java-agent/instrumentation/jersey-3-appsec/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jersey-3-appsec/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = 'common'
@@ -22,8 +24,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.0.0'
   compileOnly group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '3.0.0'
Index: dd-java-agent/instrumentation/jersey/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jersey/build.gradle b/dd-java-agent/instrumentation/jersey/build.gradle
--- a/dd-java-agent/instrumentation/jersey/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jersey/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,6 +4,8 @@
   }
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.glassfish.jersey.core'
@@ -13,25 +15,23 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 // there are tests with jersey2 and grizzly on the grizzly-http-2.3.20 module
 addTestSuiteForDir('jersey2JettyTest', 'jersey2JettyTest')
 addTestSuiteForDir('jersey3JettyTest', 'jersey3JettyTest')
 
-compileJersey3JettyTestGroovy {
+tasks.named("compileJersey3JettyTestGroovy", GroovyCompile).configure {
   javaLauncher = getJavaLauncherFor(11)
 }
-compileTestJava.configure {
+tasks.named("compileTestJava", JavaCompile).configure {
   setJavaVersion(it, 11)
   sourceCompatibility = JavaVersion.VERSION_11
   targetCompatibility = JavaVersion.VERSION_11
 }
 
-jersey3JettyTest {
+tasks.named("jersey3JettyTest").configure {
   javaLauncher = getJavaLauncherFor(11)
 }
-test {
+tasks.named("test").configure {
   javaLauncher = getJavaLauncherFor(11)
 }
 
Index: dd-java-agent/instrumentation/jetty-11/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-11/build.gradle b/dd-java-agent/instrumentation/jetty-11/build.gradle
--- a/dd-java-agent/instrumentation/jetty-11/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-11/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,10 @@
   minJavaVersionForTests = JavaVersion.VERSION_11
 }
 
+apply plugin: 'java-test-fixtures'
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: "idea"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -10,10 +14,6 @@
   }
 }
 
-apply plugin: 'java-test-fixtures'
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: "idea"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('latestDepForkedTest', 'test')
 
@@ -22,10 +22,10 @@
   sourceCompatibility = JavaVersion.VERSION_1_8
   targetCompatibility = JavaVersion.VERSION_1_8
 }
-tasks.withType(GroovyCompile) {
+tasks.withType(GroovyCompile).configureEach {
   javaLauncher = getJavaLauncherFor(11)
 }
-tasks.withType(Test) {
+tasks.withType(Test).configureEach {
   javaLauncher = getJavaLauncherFor(11)
 }
 
Index: dd-java-agent/instrumentation/jetty-12/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-12/build.gradle b/dd-java-agent/instrumentation/jetty-12/build.gradle
--- a/dd-java-agent/instrumentation/jetty-12/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-12/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,8 @@
   minJavaVersionForTests = JavaVersion.VERSION_17
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -10,8 +12,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 // ee8
@@ -24,17 +24,18 @@
 addTestSuiteForDir('ee10Test', 'test/ee10')
 addTestSuiteExtendingForDir('ee10LatestDepTest', 'latestDepTest', 'test/ee10')
 
-[compileMain_java17Java, compileTestJava].each {
-  it.configure {
+for (final taskName in ["compileMain_java17Java", "compileTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
     setJavaVersion(it, 17)
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
   }
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   javaLauncher = getJavaLauncherFor(17)
 }
+
 dependencies {
   main_java17CompileOnly ("org.eclipse.jetty:jetty-server:12.0.0") {
     exclude group: 'org.slf4j', module: 'slf4j-api'
Index: dd-java-agent/instrumentation/jetty-7.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-7.0/build.gradle b/dd-java-agent/instrumentation/jetty-7.0/build.gradle
--- a/dd-java-agent/instrumentation/jetty-7.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-7.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepForkedTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jetty-7.6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-7.6/build.gradle b/dd-java-agent/instrumentation/jetty-7.6/build.gradle
--- a/dd-java-agent/instrumentation/jetty-7.6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-7.6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepForkedTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jetty-9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-9/build.gradle b/dd-java-agent/instrumentation/jetty-9/build.gradle
--- a/dd-java-agent/instrumentation/jetty-9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply plugin: 'java-test-fixtures'
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = '9_full_series'
@@ -60,9 +63,6 @@
   }
 }
 
-apply plugin: 'java-test-fixtures'
-apply from: "$rootDir/gradle/java.gradle"
-
 sourceSets {
   main_jetty904 {
     java.srcDirs "${project.projectDir}/src/main/java_jetty904"
@@ -78,21 +78,34 @@
   }
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_jetty904.output
   from sourceSets.main_jetty93.output
   from sourceSets.main_jetty9421.output
   from sourceSets.main_jetty10.output
 }
 
-List<DirectoryProperty> extraInstrumentJavaDirs = []
-['main_jetty904', 'main_jetty93', 'main_jetty9421', 'main_jetty10'].each {
-  JavaCompile compileTask = tasks["compile${it.capitalize()}Java"]
-  extraInstrumentJavaDirs << compileTask.destinationDirectory
-  compileTask.dependsOn tasks['compileJava']
+Provider<List<DirectoryProperty>> extraInstrumentJavaDirsProvider = project.provider {
+  List<DirectoryProperty> extraInstrumentJavaDirs = []
+  ['main_jetty904', 'main_jetty93', 'main_jetty9421', 'main_jetty10'].each {sourceSetName ->
+    final compileTaskName = "compile${sourceSetName.capitalize()}Java"
+    extraInstrumentJavaDirs << tasks.named(compileTaskName, JavaCompile).get().destinationDirectory
+  }
+  extraInstrumentJavaDirs
+}
+
+['main_jetty904', 'main_jetty93', 'main_jetty9421', 'main_jetty10'].each {sourceSetName ->
+  final compileTaskName = "compile${sourceSetName.capitalize()}Java"
+  tasks.named(compileTaskName).configure {
+    dependsOn 'compileJava'
+  }
   project.afterEvaluate { p ->
-    tasks['instrumentJava'].dependsOn compileTask
-    tasks["forbiddenApis${it.capitalize()}"].dependsOn("instrument${it.capitalize()}Java")
+    tasks.named('instrumentJava').configure {
+      dependsOn compileTaskName
+    }
+    tasks.named("forbiddenApis${sourceSetName.capitalize()}").configure {
+      dependsOn "instrument${sourceSetName.capitalize()}Java"
+    }
   }
 }
 
@@ -101,11 +114,11 @@
   // The muzzle generator of references run as part of InstrumentJava needs access to
   // these extra classes. The task dependencies for instrumentJava are added above
   additionalClasspath = [
-    instrumentJava: extraInstrumentJavaDirs
+    instrumentJava: extraInstrumentJavaDirsProvider
   ]
 }
 
-tasks['compileMain_jetty10Java'].configure {
+tasks.named('compileMain_jetty10Java').configure {
   setJavaVersion(it, 11)
 }
 
Index: dd-java-agent/instrumentation/jetty-appsec-7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-appsec-7/build.gradle b/dd-java-agent/instrumentation/jetty-appsec-7/build.gradle
--- a/dd-java-agent/instrumentation/jetty-appsec-7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-appsec-7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.eclipse.jetty'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.eclipse.jetty', name: 'jetty-server', version: '7.0.0.v20091005'
 }
Index: dd-java-agent/instrumentation/jetty-appsec-8.1.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-appsec-8.1.3/build.gradle b/dd-java-agent/instrumentation/jetty-appsec-8.1.3/build.gradle
--- a/dd-java-agent/instrumentation/jetty-appsec-8.1.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-appsec-8.1.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.eclipse.jetty'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.eclipse.jetty', name: 'jetty-server', version: '8.1.3.v20120416'
 }
Index: dd-java-agent/instrumentation/jetty-appsec-9.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-appsec-9.2/build.gradle b/dd-java-agent/instrumentation/jetty-appsec-9.2/build.gradle
--- a/dd-java-agent/instrumentation/jetty-appsec-9.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-appsec-9.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.eclipse.jetty'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.2.30.v20200428'
 }
Index: dd-java-agent/instrumentation/jetty-appsec-9.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-appsec-9.3/build.gradle b/dd-java-agent/instrumentation/jetty-appsec-9.3/build.gradle
--- a/dd-java-agent/instrumentation/jetty-appsec-9.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-appsec-9.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.eclipse.jetty'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.2.30.v20200428'
 }
Index: dd-java-agent/instrumentation/jetty-client/jetty-client-10.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-client/jetty-client-10.0/build.gradle b/dd-java-agent/instrumentation/jetty-client/jetty-client-10.0/build.gradle
--- a/dd-java-agent/instrumentation/jetty-client/jetty-client-10.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-client/jetty-client-10.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 ext {
   minJavaVersionForTests = JavaVersion.VERSION_11
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -21,16 +24,15 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('jetty11Test', 'test')
 addTestSuiteForDir('jetty10LatestDepTest', 'test')
-compileMain_java11Java.configure {
+tasks.named("compileMain_java11Java", JavaCompile).configure {
   it.sourceCompatibility = JavaVersion.VERSION_1_8
   it.targetCompatibility = JavaVersion.VERSION_1_8
   setJavaVersion(it, 11)
 }
+
 dependencies {
   main_java11CompileOnly group: 'org.eclipse.jetty', name: 'jetty-client', version: '10.0.0'
   main_java11Implementation(project(':dd-java-agent:instrumentation:jetty-client:jetty-client-common')) {
Index: dd-java-agent/instrumentation/jetty-client/jetty-client-12.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-client/jetty-client-12.0/build.gradle b/dd-java-agent/instrumentation/jetty-client/jetty-client-12.0/build.gradle
--- a/dd-java-agent/instrumentation/jetty-client/jetty-client-12.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-client/jetty-client-12.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 ext {
   minJavaVersionForTests = JavaVersion.VERSION_17
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.eclipse.jetty"
@@ -11,11 +14,9 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
-compileMain_java17Java.configure {
+tasks.named("compileMain_java17Java", JavaCompile).configure {
   setJavaVersion(it, 17)
 }
 
Index: dd-java-agent/instrumentation/jetty-client/jetty-client-9.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-client/jetty-client-9.1/build.gradle b/dd-java-agent/instrumentation/jetty-client/jetty-client-9.1/build.gradle
--- a/dd-java-agent/instrumentation/jetty-client/jetty-client-9.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-client/jetty-client-9.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   /**
    * Jetty Client 10+ passes if muzzle is run with Java 11 but fails otherwise because it
@@ -43,7 +45,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/jetty-util/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jetty-util/build.gradle b/dd-java-agent/instrumentation/jetty-util/build.gradle
--- a/dd-java-agent/instrumentation/jetty-util/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jetty-util/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,10 +1,10 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
     coreJdk()
   }
 }
-apply from: "$rootDir/gradle/java.gradle"
 
 addTestSuiteForDir('latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/jms/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jms/build.gradle b/dd-java-agent/instrumentation/jms/build.gradle
--- a/dd-java-agent/instrumentation/jms/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jms/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "javax.jms"
@@ -11,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 repositories {
   maven {
     // only place that has org.jboss.naming:jnpserver:5.0.3.GA publicly accessible
@@ -26,7 +26,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/jose-jwt/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/jose-jwt/build.gradle b/dd-java-agent/instrumentation/jose-jwt/build.gradle
--- a/dd-java-agent/instrumentation/jose-jwt/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/jose-jwt/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,12 +1,11 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/junit-4.10/munit-junit-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/junit-4.10/munit-junit-4/build.gradle b/dd-java-agent/instrumentation/junit-4.10/munit-junit-4/build.gradle
--- a/dd-java-agent/instrumentation/junit-4.10/munit-junit-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/junit-4.10/munit-junit-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -34,11 +34,11 @@
   latestDepTestImplementation group: 'org.scalameta', name: 'munit_2.13', version: '1.0.0'
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   dependsOn compileTestScala
   classpath += files(sourceSets.test.scala.destinationDirectory)
 }
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   dependsOn compileLatestDepTestScala
   classpath += files(sourceSets.latestDepTest.scala.destinationDirectory)
 }
Index: dd-java-agent/instrumentation/kafka-clients-0.11/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/kafka-clients-0.11/build.gradle b/dd-java-agent/instrumentation/kafka-clients-0.11/build.gradle
--- a/dd-java-agent/instrumentation/kafka-clients-0.11/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kafka-clients-0.11/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.kafka"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 addTestSuite('iastLatestDepTest3')
 
@@ -59,7 +59,7 @@
   resolutionStrategy.force 'org.assertj:assertj-core:2.9.1'
 }
 
-iastLatestDepTest3.configure {
+tasks.named("iastLatestDepTest3").configure {
   javaLauncher = getJavaLauncherFor(17)
   jvmArgs = ['--add-opens', 'java.base/java.util=ALL-UNNAMED']
 }
Index: dd-java-agent/instrumentation/kafka-streams-0.11/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/kafka-streams-0.11/build.gradle b/dd-java-agent/instrumentation/kafka-streams-0.11/build.gradle
--- a/dd-java-agent/instrumentation/kafka-streams-0.11/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kafka-streams-0.11/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.kafka"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/kafka-streams-1.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/kafka-streams-1.0/build.gradle b/dd-java-agent/instrumentation/kafka-streams-1.0/build.gradle
--- a/dd-java-agent/instrumentation/kafka-streams-1.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kafka-streams-1.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.kafka"
@@ -6,9 +8,6 @@
   }
 }
 
-
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/kotlin-coroutines/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/kotlin-coroutines/build.gradle b/dd-java-agent/instrumentation/kotlin-coroutines/build.gradle
--- a/dd-java-agent/instrumentation/kotlin-coroutines/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kotlin-coroutines/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -19,5 +19,5 @@
   testFixturesApi project(':dd-trace-api')
   testFixturesApi project(':dd-java-agent:instrumentation:trace-annotation')
   testFixturesApi project(':dd-java-agent:testing')
-  testFixturesApi 'com.github.spotbugs:spotbugs-annotations:4.2.0'
+  testFixturesApi "com.github.spotbugs:spotbugs-annotations:${libs.versions.spotbugs.get()}"
 }
Index: dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.3/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.3/build.gradle b/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.3/build.gradle
--- a/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   id 'java-test-fixtures'
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-kotlin.gradle"
+
 muzzle {
   pass {
     group = 'org.jetbrains.kotlin'
@@ -17,9 +20,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-kotlin.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 tasks.named("compileLatestDepTestGroovy").configure {
Index: dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.5/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.5/build.gradle b/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.5/build.gradle
--- a/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/kotlin-coroutines/coroutines-1.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   id 'java-test-fixtures'
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-kotlin.gradle"
+
 muzzle {
   pass {
     group = 'org.jetbrains.kotlin'
@@ -17,9 +20,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-kotlin.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 tasks.named("compileLatestDepTestGroovy").configure {
Index: dd-java-agent/instrumentation/lettuce-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/lettuce-4/build.gradle b/dd-java-agent/instrumentation/lettuce-4/build.gradle
--- a/dd-java-agent/instrumentation/lettuce-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/lettuce-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/lettuce-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/lettuce-5/build.gradle b/dd-java-agent/instrumentation/lettuce-5/build.gradle
--- a/dd-java-agent/instrumentation/lettuce-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/lettuce-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/liberty-20/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/liberty-20/build.gradle b/dd-java-agent/instrumentation/liberty-20/build.gradle
--- a/dd-java-agent/instrumentation/liberty-20/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/liberty-20/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -25,31 +25,45 @@
   testLogging libs.bundles.test.logging
 
   compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
-  compileOnly files({ tasks.installOpenLibertyDeps.extractedJars })
+  compileOnly files({
+    tasks.named("installOpenLibertyDeps").map {
+      it.extractedJars
+    }
+  })
   implementation project(':dd-java-agent:instrumentation:servlet-common')
 
-  testImplementation files({ tasks.installOpenLibertyDeps.wsServerJar })
+  testImplementation files({
+    tasks.named("installOpenLibertyDeps").map {
+      it.wsServerJar
+    }
+  })
   testImplementation testFixtures(project(':dd-java-agent:appsec'))
   testRuntimeOnly project(':dd-java-agent:instrumentation:osgi-4.3')
-  testRuntimeOnly files({ tasks.filterLogbackClassic.filteredLogbackDir })
+  testRuntimeOnly files({
+    tasks.named("filterLogbackClassic").map {
+      it.filteredLogbackDir
+    }
+  })
   testRuntimeOnly project(':dd-java-agent:instrumentation:servlet:request-3')
 
   webappCompileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
   // compileOnly to avoid bringing all the test dependencies to the test app
   // these are to be provided by the system classloader on test time
-  webappCompileOnly project(':dd-java-agent:instrumentation:servlet:request-3')
-    .tasks['compileTestFixturesJava'].classpath
+  webappCompileOnly project(':dd-java-agent:instrumentation:servlet:request-3').tasks.named('compileTestFixturesJava', JavaCompile).map { it.classpath}
   // only the testFixtures jar (not its dependencies) and groovy should be included in the webapp
   webappImplementation files(
-    project(':dd-java-agent:instrumentation:servlet:request-3')
-    .getTasksByName('testFixturesJar', false).archiveFile
+    project(':dd-java-agent:instrumentation:servlet:request-3').tasks.named("testFixturesJar", Jar).map {
+      it.archiveFile }
     )
   // use the above instead of:
   //  webappImplementation testFixtures(project(':dd-java-agent:instrumentation:servlet:request-3'))
   // because using testFixtures() causes some early evaluation of dependencies
   webappRuntimeOnly libs.groovy
 }
-compileWebappJava.dependsOn ':dd-java-agent:instrumentation:servlet:request-3:testFixturesJar'
+
+tasks.named("compileWebappJava").configure {
+  dependsOn ':dd-java-agent:instrumentation:servlet:request-3:testFixturesJar'
+}
 
 configurations.testRuntimeOnly {
   exclude group: 'ch.qos.logback', module: 'logback-classic'
@@ -87,9 +101,9 @@
   into extractDir
   outputs.file ext.serverXmlFile
 }
-[test, forkedTest]*.dependsOn webappClasses, installOpenLibertyDeps
-[test, forkedTest].each {
-  it.configure {
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn webappClasses, installOpenLibertyDeps
     jvmArgs += ["-Dserver.xml=${installOpenLibertyDeps.serverXmlFile.absoluteFile}"]
   }
 }
@@ -99,7 +113,11 @@
   into project.layout.buildDirectory.dir("$relAppDir/WEB-INF/lib")
   dependsOn ':dd-java-agent:instrumentation:servlet:request-3:testFixturesJar'
 }
-[test, forkedTest]*.dependsOn webappCopyJars
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn webappCopyJars
+  }
+}
 
 tasks.register('filterLogbackClassic', Sync) {
   ext.filteredLogbackDir = project.layout.buildDirectory.dir('filteredLogback')
@@ -109,4 +127,8 @@
   exclude 'META-INF/**'
   into ext.filteredLogbackDir
 }
-[test, forkedTest]*.dependsOn filterLogbackClassic
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn filterLogbackClassic
+  }
+}
Index: dd-java-agent/instrumentation/liberty-23/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/liberty-23/build.gradle b/dd-java-agent/instrumentation/liberty-23/build.gradle
--- a/dd-java-agent/instrumentation/liberty-23/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/liberty-23/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id 'java-test-fixtures'
   id 'com.github.johnrengelman.shadow'
@@ -26,33 +28,56 @@
   testLogging libs.bundles.test.logging
 
   compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'
-  compileOnly files({ tasks.installOpenLibertyDeps.extractedJars })
-  testImplementation files({ tasks.installOpenLibertyDeps.extractedJars })
+  compileOnly files({
+    tasks.named("installOpenLibertyDeps").map {
+      it.extractedJars
+    }
+  })
+  testImplementation files({
+    tasks.named("installOpenLibertyDeps").map {
+      it.extractedJars
+    }
+  })
 
   implementation project(':dd-java-agent:instrumentation:servlet:request-5')
-  testImplementation files({ tasks.installOpenLibertyDeps.wsServerJar })
+  testImplementation files({
+    tasks.named("installOpenLibertyDeps").map {
+      it.wsServerJar
+    }
+  })
   testImplementation testFixtures(project(':dd-java-agent:appsec'))
   testRuntimeOnly project(':dd-java-agent:instrumentation:osgi-4.3')
-  testRuntimeOnly files({ tasks.filterLogbackClassic.filteredLogbackDir })
+  testRuntimeOnly files({
+    tasks.named("filterLogbackClassic").map {
+      it.filteredLogbackDir
+    }
+  })
   testRuntimeOnly project(':dd-java-agent:instrumentation:servlet:request-5')
-  testRuntimeOnly files({ tasks.shadowJar.archiveFile })
+  testRuntimeOnly files({
+    tasks.named("shadowJar").map {
+      it.archiveFile
+    }
+  })
 
   webappCompileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'
   // compileOnly to avoid bringing all the test dependencies to the test app
   // these are to be provided by the system classloader on test time
-  webappCompileOnly project(':dd-java-agent:instrumentation:servlet:request-5')
-    .tasks['compileTestFixturesJava'].classpath
+  webappCompileOnly project(':dd-java-agent:instrumentation:servlet:request-5').tasks.named("compileTestFixturesJava", JavaCompile).map { it.classpath }
   // only the testFixtures jar (not its dependencies) and groovy should be included in the webapp
   webappImplementation files(
-    project(':dd-java-agent:instrumentation:servlet:request-5')
-    .getTasksByName('testFixturesJar', false).archiveFile
+    project(':dd-java-agent:instrumentation:servlet:request-5').tasks.named("testFixturesJar", Jar).map {
+      it.archiveFile
+    }
     )
   // use the above instead of:
   //  webappImplementation testFixtures(project(':dd-java-agent:instrumentation:servlet:request-5'))
   // because using testFixtures() causes some early evaluation of dependencies
   webappRuntimeOnly libs.groovy
 }
-compileWebappJava.dependsOn ':dd-java-agent:instrumentation:servlet:request-5:testFixturesJar'
+
+tasks.named('compileWebappJava').configure {
+  dependsOn ':dd-java-agent:instrumentation:servlet:request-5:testFixturesJar'
+}
 
 configurations.testRuntimeOnly {
   exclude group: 'ch.qos.logback', module: 'logback-classic'
@@ -96,9 +121,9 @@
   into extractDir
   outputs.file ext.serverXmlFile
 }
-[test, forkedTest]*.dependsOn webappClasses, installOpenLibertyDeps
-[test, forkedTest].each {
-  it.configure {
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn webappClasses, installOpenLibertyDeps
     jvmArgs += ["-Dserver.xml=${installOpenLibertyDeps.serverXmlFile.absoluteFile}"]
   }
 }
@@ -108,7 +133,11 @@
   into project.layout.buildDirectory.dir("$relAppDir/WEB-INF/lib")
   dependsOn ':dd-java-agent:instrumentation:servlet:request-5:testFixturesJar'
 }
-[test, forkedTest]*.dependsOn webappCopyJars
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn webappCopyJars
+  }
+}
 
 tasks.register('filterLogbackClassic', Sync) {
   ext.filteredLogbackDir = project.layout.buildDirectory.dir('filteredLogback')
@@ -118,9 +147,13 @@
   exclude 'META-INF/**'
   into ext.filteredLogbackDir
 }
-[test, forkedTest]*.dependsOn filterLogbackClassic
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn filterLogbackClassic
+  }
+}
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.shadow]
   zip64 true
 
@@ -146,4 +179,8 @@
     include "wlp/dev/*.jar"
   }
 }
-[test, forkedTest]*.dependsOn shadowJar
+for (final taskName in ["test", "forkedTest"]) {
+  tasks.named(taskName).configure {
+    dependsOn shadowJar
+  }
+}
Index: dd-java-agent/instrumentation/log4j1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/log4j1/build.gradle b/dd-java-agent/instrumentation/log4j1/build.gradle
--- a/dd-java-agent/instrumentation/log4j1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/log4j1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'log4j'
@@ -11,8 +13,6 @@
   testCompile.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/micronaut/http-server-netty-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/micronaut/http-server-netty-2.0/build.gradle b/dd-java-agent/instrumentation/micronaut/http-server-netty-2.0/build.gradle
--- a/dd-java-agent/instrumentation/micronaut/http-server-netty-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/micronaut/http-server-netty-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.micronaut"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/micronaut/http-server-netty-3.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/micronaut/http-server-netty-3.0/build.gradle b/dd-java-agent/instrumentation/micronaut/http-server-netty-3.0/build.gradle
--- a/dd-java-agent/instrumentation/micronaut/http-server-netty-3.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/micronaut/http-server-netty-3.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.micronaut"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/micronaut/http-server-netty-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/micronaut/http-server-netty-4.0/build.gradle b/dd-java-agent/instrumentation/micronaut/http-server-netty-4.0/build.gradle
--- a/dd-java-agent/instrumentation/micronaut/http-server-netty-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/micronaut/http-server-netty-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 ext {
   minJavaVersionForTests = JavaVersion.VERSION_17
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.micronaut"
@@ -10,20 +13,18 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
-[compileMain_java17Java, compileTestJava, compileLatestDepTestJava].each {
-  it.configure {
+for (final taskName in ["compileMain_java17Java", "compileTestJava", "compileLatestDepTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
     setJavaVersion(it, 17)
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
   }
 }
 
-[compileTestGroovy, compileLatestDepTestGroovy].each {
-  it.configure {
+for (final taskName in ["compileTestGroovy", "compileLatestDepTestGroovy"]) {
+  tasks.named(taskName, GroovyCompile).configure {
     javaLauncher = getJavaLauncherFor(17)
   }
 }
Index: dd-java-agent/instrumentation/mongo/bson-document/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/mongo/bson-document/build.gradle b/dd-java-agent/instrumentation/mongo/bson-document/build.gradle
--- a/dd-java-agent/instrumentation/mongo/bson-document/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/mongo/bson-document/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.mongodb"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.mongodb', name: 'mongo-java-driver', version: '3.1.0'
 
Index: dd-java-agent/instrumentation/mongo/driver-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/mongo/driver-3.1/build.gradle b/dd-java-agent/instrumentation/mongo/driver-3.1/build.gradle
--- a/dd-java-agent/instrumentation/mongo/driver-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/mongo/driver-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.mongodb"
@@ -18,8 +20,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/mongo/driver-3.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/mongo/driver-3.4/build.gradle b/dd-java-agent/instrumentation/mongo/driver-3.4/build.gradle
--- a/dd-java-agent/instrumentation/mongo/driver-3.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/mongo/driver-3.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.mongodb"
@@ -25,8 +27,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/mongo/driver-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/mongo/driver-4.0/build.gradle b/dd-java-agent/instrumentation/mongo/driver-4.0/build.gradle
--- a/dd-java-agent/instrumentation/mongo/driver-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/mongo/driver-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -14,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 addTestSuiteForDir('mongo43Test', 'test')
Index: dd-java-agent/instrumentation/mule-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/mule-4/build.gradle b/dd-java-agent/instrumentation/mule-4/build.gradle
--- a/dd-java-agent/instrumentation/mule-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/mule-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_15
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   extraRepository('anypoint-releases', 'https://maven.anypoint.mulesoft.com/api/v2/maven')
   extraRepository('mulesoft-releases', 'https://repository.mulesoft.org/releases')
@@ -25,15 +27,15 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 def muleVersion = '4.2.2'
 def muleBaseDir = "$buildDir/mule"
 def appDir = "$projectDir/application"
 def generatedResourcesDir = "$buildDir/generated-resources/test"
 
-clean.doFirst {
-  delete muleBaseDir
+tasks.named("clean").configure {
+  doFirst {
+    delete muleBaseDir
+  }
 }
 
 repositories {
Index: dd-java-agent/instrumentation/ognl-appsec/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/ognl-appsec/build.gradle b/dd-java-agent/instrumentation/ognl-appsec/build.gradle
--- a/dd-java-agent/instrumentation/ognl-appsec/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/ognl-appsec/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'ognl'
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'ognl', name: 'ognl', version: '3.3.2'
   testImplementation group: 'ognl', name: 'ognl', version: '3.3.2'
Index: dd-java-agent/instrumentation/okhttp-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/okhttp-2/build.gradle b/dd-java-agent/instrumentation/okhttp-2/build.gradle
--- a/dd-java-agent/instrumentation/okhttp-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/okhttp-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 /*
  Note: The Interceptor class for OkHttp was not introduced until 2.2+, so we need to make sure the
  instrumentation is not loaded unless the dependency is 2.2+.
@@ -17,8 +19,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/okhttp-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/okhttp-3/build.gradle b/dd-java-agent/instrumentation/okhttp-3/build.gradle
--- a/dd-java-agent/instrumentation/okhttp-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/okhttp-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.squareup.okhttp3"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opensearch/rest/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opensearch/rest/build.gradle b/dd-java-agent/instrumentation/opensearch/rest/build.gradle
--- a/dd-java-agent/instrumentation/opensearch/rest/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opensearch/rest/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -9,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opensearch/transport/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opensearch/transport/build.gradle b/dd-java-agent/instrumentation/opensearch/transport/build.gradle
--- a/dd-java-agent/instrumentation/opensearch/transport/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opensearch/transport/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -16,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opentelemetry/opentelemetry-0.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-0.3/build.gradle b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-0.3/build.gradle
--- a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-0.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-0.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,8 @@
 // Made this a variable so we can easily update to latest releases.
 def otelVersion = '0.3.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentelemetry-api'
@@ -11,8 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opentelemetry/opentelemetry-1.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-1.4/build.gradle b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-1.4/build.gradle
--- a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-1.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-1.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 def openTelemetryVersion = '1.4.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentelemetry-api'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.20/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.20/build.gradle b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.20/build.gradle
--- a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.20/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.20/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 def openTelemetryVersion = '1.20.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentelemetry-instrumentation-annotations'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.26/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.26/build.gradle b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.26/build.gradle
--- a/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.26/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentelemetry/opentelemetry-annotations-1.26/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 def openTelemetryVersion = '1.26.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentelemetry-instrumentation-annotations'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/opentracing/api-0.31/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentracing/api-0.31/build.gradle b/dd-java-agent/instrumentation/opentracing/api-0.31/build.gradle
--- a/dd-java-agent/instrumentation/opentracing/api-0.31/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentracing/api-0.31/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentracing-util'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   implementation project(':dd-java-agent:instrumentation:opentracing')
 
Index: dd-java-agent/instrumentation/opentracing/api-0.32/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/opentracing/api-0.32/build.gradle b/dd-java-agent/instrumentation/opentracing/api-0.32/build.gradle
--- a/dd-java-agent/instrumentation/opentracing/api-0.32/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/opentracing/api-0.32/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     module = 'opentracing-util'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/org-json/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/org-json/build.gradle b/dd-java-agent/instrumentation/org-json/build.gradle
--- a/dd-java-agent/instrumentation/org-json/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/org-json/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.json'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/osgi-4.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/osgi-4.3/build.gradle b/dd-java-agent/instrumentation/osgi-4.3/build.gradle
--- a/dd-java-agent/instrumentation/osgi-4.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/osgi-4.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // old coordinates
   pass {
@@ -14,8 +16,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.osgi', name: 'org.osgi.core', version: '4.3.0'
 }
Index: dd-java-agent/instrumentation/owasp-esapi-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/owasp-esapi-2/build.gradle b/dd-java-agent/instrumentation/owasp-esapi-2/build.gradle
--- a/dd-java-agent/instrumentation/owasp-esapi-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/owasp-esapi-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.owasp.esapi'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/pekko-concurrent/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/pekko-concurrent/build.gradle b/dd-java-agent/instrumentation/pekko-concurrent/build.gradle
--- a/dd-java-agent/instrumentation/pekko-concurrent/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/pekko-concurrent/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,8 @@
 def pekkoVersion = '1.0.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-scala.gradle"
+
 muzzle {
   pass {
     group = 'org.apache.pekko'
@@ -18,9 +21,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-scala.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 tasks.named("compileLatestDepTestGroovy").configure {
Index: dd-java-agent/instrumentation/pekko-http-1.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/pekko-http-1.0/build.gradle b/dd-java-agent/instrumentation/pekko-http-1.0/build.gradle
--- a/dd-java-agent/instrumentation/pekko-http-1.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/pekko-http-1.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -89,12 +89,12 @@
   dependsOn "latestDepIastTest"
 }
 
-compileBaseTestGroovy {
+tasks.named("compileBaseTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileBaseTestScala.destinationDirectory))
   dependsOn "compileBaseTestScala"
 }
 
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileLatestDepTestScala.destinationDirectory))
   dependsOn "compileLatestDepTestScala"
 }
Index: dd-java-agent/instrumentation/play-2.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/play-2.3/build.gradle b/dd-java-agent/instrumentation/play-2.3/build.gradle
--- a/dd-java-agent/instrumentation/play-2.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/play-2.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,8 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.typesafe.play'
@@ -22,8 +24,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 repositories {
   maven {
     // only place that has 'com.typesafe.netty:netty-http-pipelining:1.1.2' publicly accessible
@@ -58,7 +58,7 @@
   }
 }
 
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   classpath = classpath.plus(files(compileLatestDepTestScala.destinationDirectory))
   dependsOn compileLatestDepTestScala
 }
Index: dd-java-agent/instrumentation/play-2.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/play-2.4/build.gradle b/dd-java-agent/instrumentation/play-2.4/build.gradle
--- a/dd-java-agent/instrumentation/play-2.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/play-2.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,9 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala'
+
 muzzle {
   pass {
     name = "play24and25"
@@ -32,9 +35,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala'
-
 repositories {
   maven {
     // for muzzle because of play-2.3
@@ -44,8 +44,8 @@
   }
 }
 
-tasks.withType(org.gradle.api.tasks.scala.ScalaCompile) {
-  it.javaLauncher = getJavaLauncherFor(8)
+tasks.withType(org.gradle.api.tasks.scala.ScalaCompile).configureEach {
+  javaLauncher = getJavaLauncherFor(8)
 }
 
 addTestSuiteForDir('latestDepTest', 'test')
@@ -55,16 +55,22 @@
     java.srcDirs "${project.projectDir}/src/main/java_play25"
   }
 }
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_play25.output
 }
 project.afterEvaluate { p ->
-  instrumentJava.dependsOn compileMain_play25Java
-  forbiddenApisMain_play25.dependsOn instrumentMain_play25Java
+  tasks.named("instrumentJava").configure {
+    dependsOn compileMain_play25Java
+  }
+  tasks.named("forbiddenApisMain_play25").configure {
+    dependsOn instrumentMain_play25Java
+  }
 }
 instrument {
   additionalClasspath = [
-    instrumentJava: compileMain_play25Java.destinationDirectory
+    instrumentJava: tasks.named("compileMain_play25Java", JavaCompile).map {
+      it.destinationDirectory
+    }
   ]
 }
 
@@ -98,11 +104,11 @@
     exclude group: 'org.eclipse.jetty.websocket', module: 'websocket-client'
   }
 }
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   classpath = classpath + files(compileTestScala.destinationDirectory)
   dependsOn 'compileTestScala'
 }
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   classpath = classpath + files(compileLatestDepTestScala.destinationDirectory)
   dependsOn 'compileLatestDepTestScala'
 }
@@ -160,36 +166,37 @@
     dependsOn compileRouteGeneratorScala
   }
 }
-compileTestGeneratedScala {
+tasks.named("compileTestGeneratedScala", ScalaCompile).configure {
   classpath = classpath + files(compileTestScala.destinationDirectory)
   dependsOn buildTestRoutes, compileLatestDepTestScala
 }
-compileLatestDepTestGeneratedScala {
+tasks.named("compileLatestDepTestGeneratedScala", ScalaCompile).configure {
   classpath = classpath + files(compileLatestDepTestScala.destinationDirectory)
   dependsOn buildLatestDepTestRoutes, compileLatestDepTestScala
 }
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   classpath = classpath +
     files(compileTestGeneratedScala.destinationDirectory)
   dependsOn 'compileTestGeneratedScala'
 }
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   classpath = classpath +
     files(compileLatestDepTestGeneratedScala.destinationDirectory)
   dependsOn 'compileLatestDepTestGeneratedScala'
 }
+
 // do it this way rather than through dependencies {} because
 // latestDepTestImplementation extends testImplementation
-test {
+tasks.named("test", Test).configure {
   classpath = classpath + files(compileTestGeneratedScala.destinationDirectory)
 }
-latestDepTest {
+tasks.named("latestDepTest").configure {
   classpath = classpath + files(compileLatestDepTestGeneratedScala.destinationDirectory)
 }
 
-forbiddenApisTestGenerated {
+tasks.named("forbiddenApisTestGenerated").configure {
   enabled = false
 }
-forbiddenApisLatestDepTestGenerated {
+tasks.named("forbiddenApisLatestDepTestGenerated").configure {
   enabled = false
 }
Index: dd-java-agent/instrumentation/play-2.6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/play-2.6/build.gradle b/dd-java-agent/instrumentation/play-2.6/build.gradle
--- a/dd-java-agent/instrumentation/play-2.6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/play-2.6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -3,6 +3,9 @@
   maxJavaVersionForTests = JavaVersion.VERSION_1_8
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala'
+
 def scalaVersion = '2.11'
 def playVersion = '2.6.0'
 
@@ -50,9 +53,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala'
-
 repositories {
   maven {
     // for muzzle because of play-2.3
@@ -70,17 +70,23 @@
     java.srcDirs "${project.projectDir}/src/main/java_play27"
   }
 }
-jar {
+tasks.named("jar", Jar).configure {
   from sourceSets.main_play27.output
 }
-compileMain_play27Java.dependsOn compileJava
+tasks.named("compileMain_play27Java").configure { dependsOn compileJava }
 project.afterEvaluate { p ->
-  instrumentJava.dependsOn compileMain_play27Java
-  forbiddenApisMain_play27.dependsOn instrumentMain_play27Java
+  tasks.named("instrumentJava").configure {
+    dependsOn compileMain_play27Java
+  }
+  tasks.named("forbiddenApisMain_play27").configure {
+    dependsOn instrumentMain_play27Java
+  }
 }
 instrument {
   additionalClasspath = [
-    instrumentJava: compileMain_play27Java.destinationDirectory
+    instrumentJava: tasks.named("compileMain_play27Java", JavaCompile).map {
+      it.destinationDirectory
+    }
   ]
 }
 
@@ -125,17 +131,17 @@
     force group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.5'
   }
 })
-tasks.named("compileLatestDepTestJava").configure {
+tasks.named("compileLatestDepTestJava", JavaCompile).configure {
   it.sourceCompatibility = JavaVersion.VERSION_11
   it.targetCompatibility = JavaVersion.VERSION_11
   setJavaVersion(it, 11)
 }
-compileLatestDepTestScala {
+tasks.named("compileLatestDepTestScala", ScalaCompile).configure {
   javaLauncher = getJavaLauncherFor(11)
   classpath = classpath + files(compileBaseTestJava.destinationDirectory)
   dependsOn 'compileBaseTestJava'
 }
-latestDepTest {
+tasks.named("latestDepTest").configure {
   javaLauncher = getJavaLauncherFor(11)
   testClassesDirs = testClassesDirs + sourceSets.baseTest.output.classesDirs
 }
@@ -179,16 +185,16 @@
 
   dependsOn compileRouteGeneratorScala, compileLatestDepTestScala
 }
-compileLatestDepTestGeneratedScala {
+tasks.named("compileLatestDepTestGeneratedScala", ScalaCompile).configure {
   javaLauncher = getJavaLauncherFor(11)
   classpath = classpath + files(compileLatestDepTestScala.destinationDirectory)
   dependsOn buildLatestDepTestRoutes, compileLatestDepTestScala
 }
-forbiddenApisLatestDepTestGenerated {
+tasks.named("forbiddenApisLatestDepTestGenerated").configure {
   enabled = false
 }
 
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy", GroovyCompile).configure {
   javaLauncher = getJavaLauncherFor(11)
   classpath = classpath +
     files(compileLatestDepTestScala.destinationDirectory) +
Index: dd-java-agent/instrumentation/play-ws/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/play-ws/build.gradle b/dd-java-agent/instrumentation/play-ws/build.gradle
--- a/dd-java-agent/instrumentation/play-ws/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/play-ws/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -9,9 +9,8 @@
 
 // Create test artifact so that test base class can be reused
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
-
 
 dependencies {
   compileOnly group: 'com.typesafe.play', name: "play-ahc-ws-standalone_$scalaVersion", version: '1.0.2'
Index: dd-java-agent/instrumentation/protobuf/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/protobuf/build.gradle b/dd-java-agent/instrumentation/protobuf/build.gradle
--- a/dd-java-agent/instrumentation/protobuf/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/protobuf/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.google.protobuf"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'com.google.protobuf', name: 'protobuf-java', version: '3.0.0'
   testImplementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.0.0'
Index: dd-java-agent/instrumentation/quartz-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/quartz-2/build.gradle b/dd-java-agent/instrumentation/quartz-2/build.gradle
--- a/dd-java-agent/instrumentation/quartz-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/quartz-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/rabbitmq-amqp-2.7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/build.gradle b/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/build.gradle
--- a/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "com.rabbitmq"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 addTestSuiteForDir('latestReactorTest', 'reactorTest')
Index: dd-java-agent/instrumentation/ratpack-1.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/ratpack-1.5/build.gradle b/dd-java-agent/instrumentation/ratpack-1.5/build.gradle
--- a/dd-java-agent/instrumentation/ratpack-1.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/ratpack-1.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -9,13 +10,10 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
   compileOnly group: 'io.ratpack', name: 'ratpack-core', version: '1.5.0'
-  compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.2.0'
 
   testImplementation project(':dd-java-agent:instrumentation:netty-4.1')
   testImplementation group: 'io.ratpack', name: 'ratpack-groovy-test', version: '1.5.0'
Index: dd-java-agent/instrumentation/reactive-streams/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/reactive-streams/build.gradle b/dd-java-agent/instrumentation/reactive-streams/build.gradle
--- a/dd-java-agent/instrumentation/reactive-streams/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/reactive-streams/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 def reactiveStreamsVersion = '1.0.0'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.reactivestreams'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/reactor-core-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/reactor-core-3.1/build.gradle b/dd-java-agent/instrumentation/reactor-core-3.1/build.gradle
--- a/dd-java-agent/instrumentation/reactor-core-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/reactor-core-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/reactor-netty-1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/reactor-netty-1/build.gradle b/dd-java-agent/instrumentation/reactor-netty-1/build.gradle
--- a/dd-java-agent/instrumentation/reactor-netty-1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/reactor-netty-1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   fail {
@@ -13,8 +14,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/rediscala-1.8.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/rediscala-1.8.0/build.gradle b/dd-java-agent/instrumentation/rediscala-1.8.0/build.gradle
--- a/dd-java-agent/instrumentation/rediscala-1.8.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/rediscala-1.8.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -43,8 +44,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/redisson-2.0.0/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/redisson-2.0.0/build.gradle b/dd-java-agent/instrumentation/redisson-2.0.0/build.gradle
--- a/dd-java-agent/instrumentation/redisson-2.0.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/redisson-2.0.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -9,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestRedisson20Test', 'test/redisson20')
 addTestSuiteExtendingForDir('latestRedisson20ForkedTest', 'latestRedisson20Test', 'test/redisson20')
 addTestSuiteForDir('latestRedisson23Test', 'test/redisson23')
@@ -18,15 +17,15 @@
 addTestSuiteForDir('latestDepTest', 'test/redissonLatest')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test/redissonLatest')
 
-latestRedisson20Test {
+tasks.named("latestRedisson20Test").configure {
   finalizedBy latestRedisson20ForkedTest
 }
 
-latestRedisson23Test {
+tasks.named("latestRedisson23Test").configure {
   finalizedBy latestRedisson20ForkedTest
 }
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy latestDepForkedTest
 }
 
Index: dd-java-agent/instrumentation/resteasy-appsec/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/resteasy-appsec/build.gradle b/dd-java-agent/instrumentation/resteasy-appsec/build.gradle
--- a/dd-java-agent/instrumentation/resteasy-appsec/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/resteasy-appsec/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'java-test-fixtures'
+
 muzzle {
   pass {
     name = 'jaxrs'
@@ -13,15 +16,14 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'java-test-fixtures'
-
 addTestSuite('nettyTest')
 addTestSuite('jettyAsyncTest')
 
 //check.dependsOn nettyTest, jettyAsyncTest
 // CI invocations are only for test/latestDepTest
-test.finalizedBy nettyTest, jettyAsyncTest
+tasks.named("test", Test).configure {
+  finalizedBy nettyTest, jettyAsyncTest
+}
 configurations.all {
   resolutionStrategy.deactivateDependencyLocking()
 }
Index: dd-java-agent/instrumentation/restlet-2.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/restlet-2.2/build.gradle b/dd-java-agent/instrumentation/restlet-2.2/build.gradle
--- a/dd-java-agent/instrumentation/restlet-2.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/restlet-2.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.restlet.jse"
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 repositories {
   maven {
     // only place that has 'org.restlet.jse:org.restlet' publicly accessible
Index: dd-java-agent/instrumentation/rmi/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/rmi/build.gradle b/dd-java-agent/instrumentation/rmi/build.gradle
--- a/dd-java-agent/instrumentation/rmi/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/rmi/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,14 +5,14 @@
   maxJavaVersionForTests = JavaVersion.VERSION_15
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 def rmic = tasks.register('rmic', Exec) {
   dependsOn testClasses
 
Index: dd-java-agent/instrumentation/rxjava-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/rxjava-2/build.gradle b/dd-java-agent/instrumentation/rxjava-2/build.gradle
--- a/dd-java-agent/instrumentation/rxjava-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/rxjava-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -7,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/scala-concurrent/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scala-concurrent/build.gradle b/dd-java-agent/instrumentation/scala-concurrent/build.gradle
--- a/dd-java-agent/instrumentation/scala-concurrent/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scala-concurrent/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala' // Don't use test-with-scala since we want to pick our own version.
 
 muzzle {
   pass {
@@ -8,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala' // Don't use test-with-scala since we want to pick our own version.
-
 /**
  * This project has instrumentation to support Scala's copy of ForkJoinPool which was added in 2.8 and removed in 2.11.
  * It also has additional generic tests for scala context propagation support beyond 2.11 which are covered in latest12Test and latestDepTest.
Index: dd-java-agent/instrumentation/scala-promise/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scala-promise/build.gradle b/dd-java-agent/instrumentation/scala-promise/build.gradle
--- a/dd-java-agent/instrumentation/scala-promise/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scala-promise/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
  * Classes that are common to all versions of the Scala promise instrumentation.
  */
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala'
+
 muzzle {
   pass {
     group = 'org.scala-lang'
@@ -10,9 +13,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala'
-
 tasks.named("compileTestGroovy").configure {
   classpath += files(sourceSets.test.scala.classesDirectory)
 }
Index: dd-java-agent/instrumentation/scala-promise/scala-promise-2.10/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scala-promise/scala-promise-2.10/build.gradle b/dd-java-agent/instrumentation/scala-promise/scala-promise-2.10/build.gradle
--- a/dd-java-agent/instrumentation/scala-promise/scala-promise-2.10/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scala-promise/scala-promise-2.10/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,13 +1,3 @@
-
-muzzle {
-  pass {
-    group = 'org.scala-lang'
-    module = "scala-library"
-    versions = "[2.9.3,2.13)"
-    assertInverse = true
-  }
-}
-
 // We need to set up the spotless targets here before we apply the standard settings to avoid
 // having all the scala files in the common test directories being added as well, making spotless
 // fail because the files are outside this project directory
@@ -25,12 +15,21 @@
 apply from: "$rootDir/gradle/java.gradle"
 apply plugin: 'scala' // Don't use test-with-scala since we want to pick our own version.
 
+muzzle {
+  pass {
+    group = 'org.scala-lang'
+    module = "scala-library"
+    versions = "[2.9.3,2.13)"
+    assertInverse = true
+  }
+}
+
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'forkedTest')
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/scala-promise/scala-promise-2.13/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scala-promise/scala-promise-2.13/build.gradle b/dd-java-agent/instrumentation/scala-promise/scala-promise-2.13/build.gradle
--- a/dd-java-agent/instrumentation/scala-promise/scala-promise-2.13/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scala-promise/scala-promise-2.13/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,13 +1,3 @@
-
-muzzle {
-  pass {
-    group = 'org.scala-lang'
-    module = "scala-library"
-    versions = "[2.13,)"
-    assertInverse = true
-  }
-}
-
 // We need to set up the spotless targets here before we apply the standard settings to avoid
 // having all the scala files in the common test directories being added as well, making spotless
 // fail because the files are outside this project directory
@@ -25,12 +15,21 @@
 apply from: "$rootDir/gradle/java.gradle"
 apply plugin: 'scala' // Don't use test-with-scala since we want to pick our own version.
 
+muzzle {
+  pass {
+    group = 'org.scala-lang'
+    module = "scala-library"
+    versions = "[2.13,)"
+    assertInverse = true
+  }
+}
+
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'forkedTest')
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/scala/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scala/build.gradle b/dd-java-agent/instrumentation/scala/build.gradle
--- a/dd-java-agent/instrumentation/scala/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scala/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,7 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala'
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.scala-lang'
@@ -7,10 +11,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala'
-apply plugin: 'call-site-instrumentation'
-
 dependencies {
   // First 2.10 version that accepts target 1.8
   compileOnly group: 'org.scala-lang', name: 'scala-library', version: '2.10.7'
Index: dd-java-agent/instrumentation/scalatest/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/scalatest/build.gradle b/dd-java-agent/instrumentation/scalatest/build.gradle
--- a/dd-java-agent/instrumentation/scalatest/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/scalatest/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -23,12 +23,12 @@
   latestDepTestImplementation group: 'org.scalatest', name: 'scalatest_2.12', version: '+'
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy").configure {
   dependsOn compileTestScala
   classpath += files(sourceSets.test.scala.destinationDirectory)
 }
 
-compileLatestDepTestGroovy {
+tasks.named("compileLatestDepTestGroovy").configure {
   dependsOn compileLatestDepTestScala
   classpath += files(sourceSets.latestDepTest.scala.destinationDirectory)
 }
Index: dd-java-agent/instrumentation/selenium/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/selenium/build.gradle b/dd-java-agent/instrumentation/selenium/build.gradle
--- a/dd-java-agent/instrumentation/selenium/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/selenium/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -38,7 +38,7 @@
   }
 })
 
-tasks.matching { it.name.startsWith('latestDepTest') || it.name.contains('LatestDepTest') }.each {
+tasks.named("latestDepTest").configure {
   it.onlyIf {
     // Only run latest dep tests tasks (including compilation) if the current JVM is compatible with the latest Selenium version
     JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_11)
Index: dd-java-agent/instrumentation/servicetalk/build.gradle
===================================================================
diff --git a/dd-java-agent/instrumentation/servicetalk/build.gradle b/dd-java-agent/instrumentation/servicetalk/build.gradle
--- a/dd-java-agent/instrumentation/servicetalk/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/servicetalk/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,12 @@
   id 'java-test-fixtures'
 }
 
+ext {
+  minJavaVersionForTests = JavaVersion.VERSION_11
+}
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'io.servicetalk'
@@ -18,12 +24,6 @@
   }
 }
 
-ext {
-  minJavaVersionForTests = JavaVersion.VERSION_11
-}
-
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/servlet/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/servlet/build.gradle b/dd-java-agent/instrumentation/servlet/build.gradle
--- a/dd-java-agent/instrumentation/servlet/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/servlet/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = "javax.servlet"
@@ -12,9 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 dependencies {
   compileOnly group: 'javax.servlet', name: 'servlet-api', version: '2.3'
   testRuntimeOnly project(':dd-java-agent:instrumentation:iast-instrumenter')
Index: dd-java-agent/instrumentation/servlet/request-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/servlet/request-2/build.gradle b/dd-java-agent/instrumentation/servlet/request-2/build.gradle
--- a/dd-java-agent/instrumentation/servlet/request-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/servlet/request-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = 'servlet-2.x'
@@ -26,8 +28,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/servlet/request-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/servlet/request-3/build.gradle b/dd-java-agent/instrumentation/servlet/request-3/build.gradle
--- a/dd-java-agent/instrumentation/servlet/request-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/servlet/request-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   id 'java-test-fixtures'
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     name = 'servlet-3.x'
@@ -24,9 +27,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('latestDepForkedTest', 'test')
 
Index: dd-java-agent/instrumentation/servlet/request-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/servlet/request-5/build.gradle b/dd-java-agent/instrumentation/servlet/request-5/build.gradle
--- a/dd-java-agent/instrumentation/servlet/request-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/servlet/request-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,6 +4,10 @@
   id 'java-test-fixtures'
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
+
 muzzle {
   pass {
     group = "jakarta.servlet"
@@ -12,14 +16,11 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 // jakarta.servlet-api dependencies are compiled with Java 11 and
 // the gradle muzzle tasks uses the JVM gradle is running with
 if (!JavaVersion.current().java11Compatible) {
   project.afterEvaluate {
-    tasks.findAll {it.group == 'Muzzle' }.each {
+    tasks.withType(MuzzleTask).configureEach {
       logger.info("Disabling task $it.path (requires Java 11)")
       it.enabled = false
     }
@@ -30,7 +31,7 @@
   javaxClassesToRelocate
 }
 
-task relocatedJavaxJar(type: ShadowJar) {
+tasks.register("relocatedJavaxJar", ShadowJar) {
   relocate 'javax.servlet', 'jakarta.servlet'
   relocate 'datadog.trace.instrumentation.servlet3', 'datadog.trace.instrumentation.servlet5'
   relocate 'datadog.trace.instrumentation.servlet', 'datadog.trace.instrumentation.servlet5'
@@ -51,7 +52,7 @@
 }
 
 dependencies {
-  implementation files(relocatedJavaxJar.outputs.files)
+  implementation files(tasks.named("relocatedJavaxJar", ShadowJar).map { it.outputs.files })
   compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'
   testImplementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'
   testImplementation group: 'jakarta.servlet.jsp', name: 'jakarta.servlet.jsp-api', version: '3.0.0'
@@ -72,6 +73,6 @@
   // tested on tomcat-5.5:latestDepTest
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   from zipTree(relocatedJavaxJar.outputs.files.asPath)
 }
Index: dd-java-agent/instrumentation/slick/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/slick/build.gradle b/dd-java-agent/instrumentation/slick/build.gradle
--- a/dd-java-agent/instrumentation/slick/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/slick/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'scala'
 
 muzzle {
   pass {
@@ -5,9 +7,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'scala'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 tasks.named("compileTestGroovy").configure {
Index: dd-java-agent/instrumentation/snakeyaml/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/snakeyaml/build.gradle b/dd-java-agent/instrumentation/snakeyaml/build.gradle
--- a/dd-java-agent/instrumentation/snakeyaml/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/snakeyaml/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = 'snakeyaml-1.x'
@@ -13,7 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/spark-executor/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spark-executor/build.gradle b/dd-java-agent/instrumentation/spark-executor/build.gradle
--- a/dd-java-agent/instrumentation/spark-executor/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spark-executor/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.spark"
@@ -13,8 +15,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 // Since we are using different scala versions for different test sets,
 // we put the test classes in the baseTest test set so that the scala
 // version is not inherited
Index: dd-java-agent/instrumentation/spark/spark_2.12/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spark/spark_2.12/build.gradle b/dd-java-agent/instrumentation/spark/spark_2.12/build.gradle
--- a/dd-java-agent/instrumentation/spark/spark_2.12/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spark/spark_2.12/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,11 @@
 def sparkVersion = '2.4.0'
 def scalaVersion = '2.12'
 
+configurations.all {
+  resolutionStrategy.deactivateDependencyLocking()
+}
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.spark"
@@ -13,10 +18,6 @@
     assertInverse = true
   }
 }
-configurations.all {
-  resolutionStrategy.deactivateDependencyLocking()
-}
-apply from: "$rootDir/gradle/java.gradle"
 
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuite('test_spark24')
Index: dd-java-agent/instrumentation/spark/spark_2.13/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spark/spark_2.13/build.gradle b/dd-java-agent/instrumentation/spark/spark_2.13/build.gradle
--- a/dd-java-agent/instrumentation/spark/spark_2.13/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spark/spark_2.13/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -6,6 +6,8 @@
 def sparkVersion = '3.2.0'
 def scalaVersion = '2.13'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.spark"
@@ -15,8 +17,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuite('test_spark32')
 
Index: dd-java-agent/instrumentation/sparkjava-2.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/sparkjava-2.3/build.gradle b/dd-java-agent/instrumentation/sparkjava-2.3/build.gradle
--- a/dd-java-agent/instrumentation/sparkjava-2.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/sparkjava-2.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 // building against 2.3 and testing against 2.4 because JettyHandler is available since 2.4 only
 muzzle {
@@ -9,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/spray-1.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spray-1.3/build.gradle b/dd-java-agent/instrumentation/spray-1.3/build.gradle
--- a/dd-java-agent/instrumentation/spray-1.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spray-1.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 
 def scalaVersion = '2.11'
 
+apply from: "${rootDir}/gradle/java.gradle"
+apply from: "${rootDir}/gradle/test-with-scala.gradle"
+
 muzzle {
   pass {
     group = 'io.spray'
@@ -9,9 +12,6 @@
   }
 }
 
-apply from: "${rootDir}/gradle/java.gradle"
-apply from: "${rootDir}/gradle/test-with-scala.gradle"
-
 dependencies {
   compileOnly group: 'com.typesafe.akka', name: "akka-actor_$scalaVersion", version: '2.3.14'
   compileOnly group: 'io.spray', name: "spray-can_$scalaVersion", version: '1.3.1'
Index: dd-java-agent/instrumentation/spring-beans/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-beans/build.gradle b/dd-java-agent/instrumentation/spring-beans/build.gradle
--- a/dd-java-agent/instrumentation/spring-beans/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-beans/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -7,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.springframework', name: 'spring-beans', version: '3.1.0.RELEASE'
 }
Index: dd-java-agent/instrumentation/spring-boot/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-boot/build.gradle b/dd-java-agent/instrumentation/spring-boot/build.gradle
--- a/dd-java-agent/instrumentation/spring-boot/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-boot/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,6 +4,9 @@
   boot3TestMinJavaVersionForTests = JavaVersion.VERSION_17
   boot3ForkedTestMinJavaVersionForTests = JavaVersion.VERSION_17
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework.boot'
@@ -18,8 +21,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir("boot1LatestDepTest", "test")
 addTestSuiteForDir("boot2Test", "test")
 addTestSuiteForDir("boot2LatestDepTest", "test")
@@ -31,8 +32,10 @@
 addTestSuiteExtendingForDir("boot3ForkedTest", "boot3Test", "test")
 addTestSuiteExtendingForDir("latestDepForkedTest", "latestDepTest", "test")
 
-[compileLatestDepTestGroovy, compileBoot3TestGroovy].each {
-  it.javaLauncher = getJavaLauncherFor(17)
+for (final taskName in ["compileLatestDepTestGroovy", "compileBoot3TestGroovy"]) {
+  tasks.named(taskName, GroovyCompile).configure {
+    it.javaLauncher = getJavaLauncherFor(17)
+  }
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/spring-cloud-zuul-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-cloud-zuul-2/build.gradle b/dd-java-agent/instrumentation/spring-cloud-zuul-2/build.gradle
--- a/dd-java-agent/instrumentation/spring-cloud-zuul-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-cloud-zuul-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -10,8 +11,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.springframework.cloud', name: 'spring-cloud-netflix-zuul', version: '2.0.0.RELEASE'
   compileOnly group: 'com.netflix.zuul', name: 'zuul-core', version: '1.3.1' // "optional" dependency of ^^
Index: dd-java-agent/instrumentation/spring-core/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-core/build.gradle b/dd-java-agent/instrumentation/spring-core/build.gradle
--- a/dd-java-agent/instrumentation/spring-core/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-core/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/spring-data-1.8/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-data-1.8/build.gradle b/dd-java-agent/instrumentation/spring-data-1.8/build.gradle
--- a/dd-java-agent/instrumentation/spring-data-1.8/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-data-1.8/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
 
 // This file includes software developed at SignalFx
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // We have two independent covariants, so we have to test them independently.
   pass {
@@ -25,8 +27,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 // DQH - API changes that impact instrumentation occurred in spring-data-commons in March 2014.
Index: dd-java-agent/instrumentation/spring-jms-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-jms-3.1/build.gradle b/dd-java-agent/instrumentation/spring-jms-3.1/build.gradle
--- a/dd-java-agent/instrumentation/spring-jms-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-jms-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -7,14 +9,12 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/spring-messaging-4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-messaging-4/build.gradle b/dd-java-agent/instrumentation/spring-messaging-4/build.gradle
--- a/dd-java-agent/instrumentation/spring-messaging-4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-messaging-4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,8 @@
+ext {
+  minJavaVersionForTests = JavaVersion.VERSION_17
+}
+
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,16 +13,12 @@
   }
 }
 
-ext {
-  minJavaVersionForTests = JavaVersion.VERSION_17
-}
-
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
-[compileTestGroovy, compileLatestDepTestGroovy].each {
-  it.javaLauncher = getJavaLauncherFor(17)
+for (final taskName in ["compileTestGroovy", "compileLatestDepTestGroovy"]) {
+  tasks.named(taskName, GroovyCompile).configure {
+    it.javaLauncher = getJavaLauncherFor(17)
+  }
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/spring-rabbit/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-rabbit/build.gradle b/dd-java-agent/instrumentation/spring-rabbit/build.gradle
--- a/dd-java-agent/instrumentation/spring-rabbit/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-rabbit/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,4 @@
+apply from: "$rootDir/gradle/java.gradle"
 
 muzzle {
   pass {
@@ -8,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/spring-scheduling-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.1/build.gradle b/dd-java-agent/instrumentation/spring-scheduling-3.1/build.gradle
--- a/dd-java-agent/instrumentation/spring-scheduling-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-scheduling-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   spring6TestMinJavaVersionForTests = JavaVersion.VERSION_17
   spring6LatestDepTestMinJavaVersionForTests = JavaVersion.VERSION_17
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -18,25 +21,33 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('spring6Test', 'test')
 addTestSuiteExtendingForDir('spring6LatestDepTest', 'latestDepTest', 'test')
 
-[compileSpring6TestJava, compileSpring6LatestDepTestJava].each {
-  setJavaVersion(it, 17)
-  sourceCompatibility = JavaVersion.VERSION_1_8
-  targetCompatibility = JavaVersion.VERSION_1_8
+for (final taskName in ["compileSpring6TestJava", "compileSpring6LatestDepTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
+    setJavaVersion(it, 17)
+    sourceCompatibility = JavaVersion.VERSION_1_8
+    targetCompatibility = JavaVersion.VERSION_1_8
+  }
 }
 
-
-[compileSpring6TestGroovy, compileSpring6LatestDepTestGroovy, spring6Test, spring6LatestDepTest].each {
-  it.javaLauncher = getJavaLauncherFor(17)
+for (final taskName in [
+    "compileSpring6TestGroovy",
+    "compileSpring6LatestDepTestGroovy",
+    "spring6Test",
+    "spring6LatestDepTest"
+  ]) {
+  tasks.named(taskName).configure {
+    it.javaLauncher = getJavaLauncherFor(17)
+  }
 }
 
-[spring6Test, spring6LatestDepTest].each {
-  it.jvmArgs '--add-opens', 'java.base/java.util=ALL-UNNAMED'
+for (final taskName in ["spring6Test", "spring6LatestDepTest"]) {
+  tasks.named(taskName).configure {
+    it.jvmArgs '--add-opens', 'java.base/java.util=ALL-UNNAMED'
+  }
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/spring-security-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-security-5/build.gradle b/dd-java-agent/instrumentation/spring-security-5/build.gradle
--- a/dd-java-agent/instrumentation/spring-security-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-security-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,9 @@
+ext {
+  minJavaVersionForTests = JavaVersion.VERSION_17
+}
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework.security'
@@ -7,21 +13,15 @@
   }
 }
 
-ext {
-  minJavaVersionForTests = JavaVersion.VERSION_17
-}
-
-apply from: "$rootDir/gradle/java.gradle"
-
-[compileMain_java17Java, compileTestJava].each {
-  it.configure {
+for (final taskName in ["compileMain_java17Java", "compileTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
     setJavaVersion(it, 17)
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
   }
 }
 
-compileTestGroovy {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   javaLauncher = getJavaLauncherFor(17)
 }
 
Index: dd-java-agent/instrumentation/spring-webflux-5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-webflux-5/build.gradle b/dd-java-agent/instrumentation/spring-webflux-5/build.gradle
--- a/dd-java-agent/instrumentation/spring-webflux-5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-webflux-5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = "webflux_5.0.0+_with_netty_0.8.0"
@@ -58,9 +60,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteForDir('latestBoot20Test', 'bootTest')
 addTestSuiteForDir('latestBoot24Test', 'bootTest')
Index: dd-java-agent/instrumentation/spring-webflux-6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-webflux-6/build.gradle b/dd-java-agent/instrumentation/spring-webflux-6/build.gradle
--- a/dd-java-agent/instrumentation/spring-webflux-6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-webflux-6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,19 +11,17 @@
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepBootTest', 'latestDepTest', 'bootTest')
 
-tasks.withType(JavaCompile).each {
-  it.configure {
-    setJavaVersion(it, 17)
-    sourceCompatibility = JavaVersion.VERSION_1_8
-    targetCompatibility = JavaVersion.VERSION_1_8
-  }
+tasks.withType(JavaCompile).configureEach {
+  setJavaVersion(it, 17)
+  sourceCompatibility = JavaVersion.VERSION_1_8
+  targetCompatibility = JavaVersion.VERSION_1_8
 }
 
-tasks.withType(GroovyCompile).each {
-  it.javaLauncher = getJavaLauncherFor(17)
+tasks.withType(GroovyCompile).configureEach {
+  javaLauncher = getJavaLauncherFor(17)
 }
 
-iastTest {
+tasks.named("iastTest").configure {
   jvmArgs '--add-opens', 'java.base/java.util=ALL-UNNAMED'
 }
 
Index: dd-java-agent/instrumentation/spring-webmvc-3.1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-webmvc-3.1/build.gradle b/dd-java-agent/instrumentation/spring-webmvc-3.1/build.gradle
--- a/dd-java-agent/instrumentation/spring-webmvc-3.1/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-webmvc-3.1/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -36,8 +38,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.springframework', name: 'spring-webmvc', version: '3.1.0.RELEASE'
   compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
Index: dd-java-agent/instrumentation/spring-webmvc-5.3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-webmvc-5.3/build.gradle b/dd-java-agent/instrumentation/spring-webmvc-5.3/build.gradle
--- a/dd-java-agent/instrumentation/spring-webmvc-5.3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-webmvc-5.3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 dependencies {
   compileOnly group: 'org.springframework', name: 'spring-webmvc', version: '5.3.23'
   compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
Index: dd-java-agent/instrumentation/spring-webmvc-6.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-webmvc-6.0/build.gradle b/dd-java-agent/instrumentation/spring-webmvc-6.0/build.gradle
--- a/dd-java-agent/instrumentation/spring-webmvc-6.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-webmvc-6.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,8 @@
   minJavaVersionForTests = JavaVersion.VERSION_17
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework'
@@ -12,19 +14,17 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir("latestDepTest", "test")
 
-[compileMain_java17Java, compileTestJava, compileLatestDepTestJava].each {
-  it.configure {
+for (final taskName in ["compileMain_java17Java", "compileTestJava", "compileLatestDepTestJava"]) {
+  tasks.named(taskName, JavaCompile).configure {
     setJavaVersion(it, 17)
     sourceCompatibility = JavaVersion.VERSION_1_8
     targetCompatibility = JavaVersion.VERSION_1_8
   }
 }
 
-tasks.withType(GroovyCompile) {
+tasks.withType(GroovyCompile).configureEach {
   javaLauncher = getJavaLauncherFor(17)
   groovyOptions.setParameters(true)
 }
Index: dd-java-agent/instrumentation/spring-ws-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spring-ws-2/build.gradle b/dd-java-agent/instrumentation/spring-ws-2/build.gradle
--- a/dd-java-agent/instrumentation/spring-ws-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spring-ws-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 def minVersion = '2.0.0.RELEASE'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.springframework.ws'
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/spymemcached-2.10/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/spymemcached-2.10/build.gradle b/dd-java-agent/instrumentation/spymemcached-2.10/build.gradle
--- a/dd-java-agent/instrumentation/spymemcached-2.10/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/spymemcached-2.10/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/configure_tests.gradle"
+
 muzzle {
   pass {
     group = "net.spy"
@@ -7,14 +10,10 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/configure_tests.gradle"
-
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 dependencies {
Index: dd-java-agent/instrumentation/sslsocket/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/sslsocket/build.gradle b/dd-java-agent/instrumentation/sslsocket/build.gradle
--- a/dd-java-agent/instrumentation/sslsocket/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/sslsocket/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,7 +1,7 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     coreJdk()
   }
 }
-
-apply from: "$rootDir/gradle/java.gradle"
Index: dd-java-agent/instrumentation/synapse-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/synapse-3/build.gradle b/dd-java-agent/instrumentation/synapse-3/build.gradle
--- a/dd-java-agent/instrumentation/synapse-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/synapse-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "org.apache.synapse"
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 configurations.all {
   // the version used by Synapse isn't available in a public repository - we don't need it, so exclude it
Index: dd-java-agent/instrumentation/thymeleaf/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/thymeleaf/build.gradle b/dd-java-agent/instrumentation/thymeleaf/build.gradle
--- a/dd-java-agent/instrumentation/thymeleaf/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/thymeleaf/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'org.thymeleaf'
@@ -7,8 +9,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/tomcat-5.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/tomcat-5.5/build.gradle b/dd-java-agent/instrumentation/tomcat-5.5/build.gradle
--- a/dd-java-agent/instrumentation/tomcat-5.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/tomcat-5.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,6 +5,8 @@
   latest10ForkedTestMinJavaVersionForTests = JavaVersion.VERSION_11
 }
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // Catalina doesn't reliably depend on coyote, so we use a different dependency that does.
   pass {
@@ -38,8 +40,6 @@
   // org.apache.catalina.connector.CoyoteAdapter introduced in Catalina 5.5
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'latestDepTest')
 
Index: dd-java-agent/instrumentation/tomcat-appsec-5.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/tomcat-appsec-5.5/build.gradle b/dd-java-agent/instrumentation/tomcat-appsec-5.5/build.gradle
--- a/dd-java-agent/instrumentation/tomcat-appsec-5.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/tomcat-appsec-5.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 evaluationDependsOn ':dd-java-agent:instrumentation:tomcat-5.5'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // despite the name of module, this also applies to tomcat < 6.0.35 or 7.0-7.0.22
   pass {
@@ -47,8 +49,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'tomcat', name: 'tomcat-util', version: '5.5.23'
   compileOnly group: 'tomcat', name: 'tomcat-coyote', version: '5.5.23'
Index: dd-java-agent/instrumentation/tomcat-appsec-6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/tomcat-appsec-6/build.gradle b/dd-java-agent/instrumentation/tomcat-appsec-6/build.gradle
--- a/dd-java-agent/instrumentation/tomcat-appsec-6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/tomcat-appsec-6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   // despite the name of module, this doesn't apply to tomcat < 6.0.35 or 7.0-7.0.22
   pass {
@@ -19,8 +21,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.apache.tomcat', name: 'coyote', version: '6.0.53'
 }
Index: dd-java-agent/instrumentation/tomcat-appsec-7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/tomcat-appsec-7/build.gradle b/dd-java-agent/instrumentation/tomcat-appsec-7/build.gradle
--- a/dd-java-agent/instrumentation/tomcat-appsec-7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/tomcat-appsec-7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,5 +1,7 @@
 evaluationDependsOn ':dd-java-agent:instrumentation:tomcat-5.5'
 
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     name = 'from7'
@@ -17,8 +19,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '7.0.4'
   compileOnly group: 'org.apache.tomcat', name: 'tomcat-coyote', version: '7.0.4'
Index: dd-java-agent/instrumentation/twilio/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/twilio/build.gradle b/dd-java-agent/instrumentation/twilio/build.gradle
--- a/dd-java-agent/instrumentation/twilio/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/twilio/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = 'com.twilio.sdk'
@@ -6,8 +8,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuite('latestDepTest')
 
 dependencies {
Index: dd-java-agent/instrumentation/unbescape/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/unbescape/build.gradle b/dd-java-agent/instrumentation/unbescape/build.gradle
--- a/dd-java-agent/instrumentation/unbescape/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/unbescape/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply plugin: 'call-site-instrumentation'
+
 muzzle {
   pass {
     group = 'org.unbescape'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply plugin: 'call-site-instrumentation'
-
 addTestSuiteForDir('latestDepTest', 'test')
 
 dependencies {
Index: dd-java-agent/instrumentation/undertow/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/undertow/build.gradle b/dd-java-agent/instrumentation/undertow/build.gradle
--- a/dd-java-agent/instrumentation/undertow/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/undertow/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.undertow"
@@ -8,8 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 dependencies {
   compileOnly group: 'io.undertow', name: 'undertow-core', version: '2.0.0.Final'
 }
Index: dd-java-agent/instrumentation/undertow/undertow-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/undertow/undertow-2.0/build.gradle b/dd-java-agent/instrumentation/undertow/undertow-2.0/build.gradle
--- a/dd-java-agent/instrumentation/undertow/undertow-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/undertow/undertow-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.undertow"
@@ -25,8 +27,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 
Index: dd-java-agent/instrumentation/undertow/undertow-2.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/undertow/undertow-2.2/build.gradle b/dd-java-agent/instrumentation/undertow/undertow-2.2/build.gradle
--- a/dd-java-agent/instrumentation/undertow/undertow-2.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/undertow/undertow-2.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,9 @@
   latestDepTestMinJavaVersionForTests = JavaVersion.VERSION_11
   latestDepForkedTestMinJavaVersionForTests = JavaVersion.VERSION_11
 }
+
+apply from: "$rootDir/gradle/java.gradle"
+
 muzzle {
   pass {
     group = "io.undertow"
@@ -18,8 +21,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 addTestSuiteForDir('latest22Test', 'test')
Index: dd-java-agent/instrumentation/vertx-mysql-client-3.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-mysql-client-3.9/build.gradle b/dd-java-agent/instrumentation/vertx-mysql-client-3.9/build.gradle
--- a/dd-java-agent/instrumentation/vertx-mysql-client-3.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-mysql-client-3.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -20,7 +20,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/vertx-mysql-client-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-mysql-client-4.0/build.gradle b/dd-java-agent/instrumentation/vertx-mysql-client-4.0/build.gradle
--- a/dd-java-agent/instrumentation/vertx-mysql-client-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-mysql-client-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -15,7 +15,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/vertx-mysql-client-4.4.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-mysql-client-4.4.2/build.gradle b/dd-java-agent/instrumentation/vertx-mysql-client-4.4.2/build.gradle
--- a/dd-java-agent/instrumentation/vertx-mysql-client-4.4.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-mysql-client-4.4.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -15,7 +15,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/vertx-redis-client-3.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-redis-client-3.9/build.gradle b/dd-java-agent/instrumentation/vertx-redis-client-3.9/build.gradle
--- a/dd-java-agent/instrumentation/vertx-redis-client-3.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-redis-client-3.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,6 @@
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/configure_tests.gradle"
+
 muzzle {
   pass {
     group = 'io.vertx'
@@ -7,9 +10,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/configure_tests.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 addTestSuiteExtendingForDir('latestDepForkedTest', 'latestDepTest', 'test')
 addTestSuiteForDir('redis4xTest', 'test')
Index: dd-java-agent/instrumentation/vertx-rx-3.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-rx-3.5/build.gradle b/dd-java-agent/instrumentation/vertx-rx-3.5/build.gradle
--- a/dd-java-agent/instrumentation/vertx-rx-3.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-rx-3.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -6,7 +6,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
Index: dd-java-agent/instrumentation/vertx-web-3.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/build.gradle b/dd-java-agent/instrumentation/vertx-web-3.4/build.gradle
--- a/dd-java-agent/instrumentation/vertx-web-3.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-web-3.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -20,7 +20,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
@@ -30,7 +30,7 @@
 
 // Create test artifacts so vertx-rx can reuse the server test instrumentation and base class
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/vertx-web-3.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-web-3.5/build.gradle b/dd-java-agent/instrumentation/vertx-web-3.5/build.gradle
--- a/dd-java-agent/instrumentation/vertx-web-3.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-web-3.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -20,7 +20,7 @@
 
 apply from: "$rootDir/gradle/configure_tests.gradle"
 
-latestDepTest {
+tasks.named("latestDepTest").configure {
   finalizedBy 'latestDepForkedTest'
 }
 
@@ -30,7 +30,7 @@
 
 // Create test artifacts so vertx-rx can reuse the server test instrumentation and base class
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/vertx-web-3.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-web-3.9/build.gradle b/dd-java-agent/instrumentation/vertx-web-3.9/build.gradle
--- a/dd-java-agent/instrumentation/vertx-web-3.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-web-3.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -23,7 +23,7 @@
 
 // Create test artifacts so vertx-rx can reuse the server test instrumentation and base class
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/vertx-web-4.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/vertx-web-4.0/build.gradle b/dd-java-agent/instrumentation/vertx-web-4.0/build.gradle
--- a/dd-java-agent/instrumentation/vertx-web-4.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/vertx-web-4.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -23,7 +23,7 @@
 
 // Create test artifacts so vertx-rx can reuse the server test instrumentation and base class
 artifacts {
-  testArtifacts testJar
+  testArtifacts tasks.named("testJar", Jar)
 }
 
 dependencies {
Index: dd-java-agent/instrumentation/zio/zio-2.0/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/instrumentation/zio/zio-2.0/build.gradle b/dd-java-agent/instrumentation/zio/zio-2.0/build.gradle
--- a/dd-java-agent/instrumentation/zio/zio-2.0/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/instrumentation/zio/zio-2.0/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,9 @@
 def zioVersion = '2.0.0'
 def scalaVersion = '2.12'
 
+apply from: "$rootDir/gradle/java.gradle"
+apply from: "$rootDir/gradle/test-with-scala.gradle"
+
 muzzle {
   pass {
     group = 'dev.zio'
@@ -22,9 +25,6 @@
   }
 }
 
-apply from: "$rootDir/gradle/java.gradle"
-apply from: "$rootDir/gradle/test-with-scala.gradle"
-
 addTestSuiteForDir('latestDepTest', 'test')
 tasks.named("compileLatestDepTestGroovy").configure {
   dependsOn "compileLatestDepTestScala"
Index: dd-java-agent/testing/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-java-agent/testing/build.gradle b/dd-java-agent/testing/build.gradle
--- a/dd-java-agent/testing/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-java-agent/testing/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id 'com.github.johnrengelman.shadow'
 }
@@ -78,7 +80,7 @@
   testCompileOnly libs.autoservice.annotation
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   dependencies {
     include(dependency {
       it.moduleGroup == 'org.eclipse.jetty'
Index: dd-smoke-tests/appsec/spring-tomcat7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/appsec/spring-tomcat7/build.gradle b/dd-smoke-tests/appsec/spring-tomcat7/build.gradle
--- a/dd-smoke-tests/appsec/spring-tomcat7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/appsec/spring-tomcat7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,7 +5,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Spring Tomcat7 Smoke Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.appsec.springtomcat7.Main')
   }
@@ -26,8 +26,8 @@
   jvmArgs "-Ddatadog.smoketest.appsec.springtomcat7.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-task testRuntimeActivation(type: Test) {
+tasks.register('testRuntimeActivation', Test) {
   jvmArgs '-Dsmoke_test.appsec.enabled=inactive',
     "-Ddatadog.smoketest.appsec.springtomcat7.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
-tasks['check'].dependsOn(testRuntimeActivation)
+tasks.named('check').configure { dependsOn 'testRuntimeActivation' }
Index: dd-smoke-tests/appsec/springboot-graphql/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/appsec/springboot-graphql/build.gradle b/dd-smoke-tests/appsec/springboot-graphql/build.gradle
--- a/dd-smoke-tests/appsec/springboot-graphql/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/appsec/springboot-graphql/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -7,20 +7,20 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.appsec.springbootgraphql.SpringbootGraphqlApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   mergeServiceFiles {
     include 'META-INF/spring.*'
   }
 }
 
 // Use Java 11 to build application
-tasks.withType(JavaCompile) {
+tasks.withType(JavaCompile).configureEach {
   setJavaVersion(delegate, 11)
 }
 
@@ -38,8 +38,9 @@
   jvmArgs "-Ddatadog.smoketest.appsec.springboot-graphql.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-task testRuntimeActivation(type: Test) {
+tasks.register('testRuntimeActivation', Test).configure {
   jvmArgs '-Dsmoke_test.appsec.enabled=inactive',
     "-Ddatadog.smoketest.appsec.springboot-graphql.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
-tasks['check'].dependsOn(testRuntimeActivation)
+
+tasks.named('check').configure { it.dependsOn 'testRuntimeActivation' }
Index: dd-smoke-tests/appsec/springboot-grpc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/appsec/springboot-grpc/build.gradle b/dd-smoke-tests/appsec/springboot-grpc/build.gradle
--- a/dd-smoke-tests/appsec/springboot-grpc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/appsec/springboot-grpc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,7 +11,7 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.appsec.springboot.SpringbootApplication')
   }
Index: dd-smoke-tests/appsec/springboot-security/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/appsec/springboot-security/build.gradle b/dd-smoke-tests/appsec/springboot-security/build.gradle
--- a/dd-smoke-tests/appsec/springboot-security/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/appsec/springboot-security/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -8,18 +8,18 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.appsec.springbootsecurity.SpringbootApplication')
   }
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
 // Use Java 17 to build application
-tasks.withType(JavaCompile) {
+tasks.withType(JavaCompile).configureEach {
   setJavaVersion(delegate, 17)
 }
 
@@ -44,8 +44,8 @@
   jvmArgs "-Ddatadog.smoketest.appsec.springbootsecurity.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-task testRuntimeActivation(type: Test) {
+tasks.register('testRuntimeActivation', Test).configure {
   jvmArgs '-Dsmoke_test.appsec.enabled=inactive',
     "-Ddatadog.smoketest.appsec.springbootsecurity.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
-tasks['check'].dependsOn(testRuntimeActivation)
+tasks.named('check').configure { dependsOn 'testRuntimeActivation' }
Index: dd-smoke-tests/appsec/springboot/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/appsec/springboot/build.gradle b/dd-smoke-tests/appsec/springboot/build.gradle
--- a/dd-smoke-tests/appsec/springboot/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/appsec/springboot/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -7,7 +7,7 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.appsec.springboot.SpringbootApplication')
   }
@@ -27,8 +27,8 @@
   jvmArgs "-Ddatadog.smoketest.appsec.springboot.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-task testRuntimeActivation(type: Test) {
+tasks.register('testRuntimeActivation', Test) {
   jvmArgs '-Dsmoke_test.appsec.enabled=inactive',
     "-Ddatadog.smoketest.appsec.springboot.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
-tasks['check'].dependsOn(testRuntimeActivation)
+tasks.named('check').configure { dependsOn 'testRuntimeActivation' }
Index: dd-smoke-tests/armeria-grpc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/armeria-grpc/build.gradle b/dd-smoke-tests/armeria-grpc/build.gradle
--- a/dd-smoke-tests/armeria-grpc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/armeria-grpc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -33,8 +33,10 @@
     }
   }
   generateProtoTasks {
-    ofSourceSet('main')*.plugins {
-      grpc {}
+    ofSourceSet('main').configureEach {
+      plugins {
+        grpc {}
+      }
     }
   }
 }
@@ -72,13 +74,12 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-evaluationDependsOn ':dd-trace-api'
-armeriaBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
+evaluationDependsOn ':dd-trace-api'
+
 tasks.named("compileTestGroovy").configure {
   dependsOn 'armeriaBuild'
   outputs.upToDateWhen {
Index: dd-smoke-tests/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/build.gradle b/dd-smoke-tests/build.gradle
--- a/dd-smoke-tests/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+logger.debug("Will apply build.gradle for ${project.path}")
+
 apply from: "$rootDir/gradle/java.gradle"
 
 description = 'dd-smoke-tests'
@@ -12,6 +14,7 @@
 
 Project parent_project = project
 subprojects { Project subProj ->
+  logger.debug("Will apply build.gradle (sub ${subProj.path}) for ${project.path}")
   // Don't need javadoc task run for internal projects.
   subProj.tasks.withType(Javadoc).configureEach { enabled = false }
 
Index: dd-smoke-tests/cli/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/cli/build.gradle b/dd-smoke-tests/cli/build.gradle
--- a/dd-smoke-tests/cli/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/cli/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,7 +5,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Command Line Application Smoke Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.cli.CliApplication')
   }
Index: dd-smoke-tests/crashtracking/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/crashtracking/build.gradle b/dd-smoke-tests/crashtracking/build.gradle
--- a/dd-smoke-tests/crashtracking/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/crashtracking/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,7 +10,7 @@
 
 description = 'Crashtracking Integration Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.crashtracking.CrashtrackingTestApplication')
   }
Index: dd-smoke-tests/custom-systemloader/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/custom-systemloader/build.gradle b/dd-smoke-tests/custom-systemloader/build.gradle
--- a/dd-smoke-tests/custom-systemloader/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/custom-systemloader/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,13 +5,13 @@
 description = 'Check classes loaded by custom system class-loader are transformed'
 apply from: "$rootDir/gradle/java.gradle"
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'sample.app.App')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/datastreams/kafkaschemaregistry/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/datastreams/kafkaschemaregistry/build.gradle b/dd-smoke-tests/datastreams/kafkaschemaregistry/build.gradle
--- a/dd-smoke-tests/datastreams/kafkaschemaregistry/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/datastreams/kafkaschemaregistry/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -15,7 +15,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Kafka Smoke Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.datastreams.kafkaschemaregistry.KafkaProducerWithSchemaRegistry')
   }
@@ -38,7 +38,7 @@
   jvmArgs "-Ddatadog.smoketest.datastreams.kafkaschemaregistry.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-task testRuntimeActivation(type: Test) {
+tasks.register('testRuntimeActivation', Test) {
   jvmArgs "-Ddatadog.smoketest.datastreams.kafkaschemaregistry.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
-tasks['check'].dependsOn(testRuntimeActivation)
+tasks.named('check').configure { dependsOn 'testRuntimeActivation' }
Index: dd-smoke-tests/debugger-integration-tests/latest-jdk-app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/debugger-integration-tests/latest-jdk-app/build.gradle b/dd-smoke-tests/debugger-integration-tests/latest-jdk-app/build.gradle
--- a/dd-smoke-tests/debugger-integration-tests/latest-jdk-app/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/debugger-integration-tests/latest-jdk-app/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -13,7 +13,7 @@
 
 def latestJdkHome = System.getenv("JAVA_${latestJdk}_HOME")
 if (latestJdkHome != null) {
-  tasks.withType(JavaCompile) {
+  tasks.withType(JavaCompile).configureEach {
     options.fork = true
     options.release = latestJdk
     compileJava.options.forkOptions.javaHome = file(latestJdkHome)
Index: dd-smoke-tests/field-injection/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/field-injection/build.gradle b/dd-smoke-tests/field-injection/build.gradle
--- a/dd-smoke-tests/field-injection/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/field-injection/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -5,13 +5,13 @@
 description = 'Check fields get injected where expected'
 apply from: "$rootDir/gradle/java.gradle"
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.fieldinjection.FieldInjectionApp')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/gradle/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/gradle/build.gradle b/dd-smoke-tests/gradle/build.gradle
--- a/dd-smoke-tests/gradle/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/gradle/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,7 +10,7 @@
   testImplementation project(':dd-smoke-tests:backend-mock')
 }
 
-test {
+tasks.named("test", Test).configure {
   testLogging {
     events "passed", "skipped", "failed", "standardOut", "standardError"
   }
Index: dd-smoke-tests/grpc-1.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/grpc-1.5/build.gradle b/dd-smoke-tests/grpc-1.5/build.gradle
--- a/dd-smoke-tests/grpc-1.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/grpc-1.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -37,7 +37,9 @@
     grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
   }
   generateProtoTasks {
-    all()*.plugins { grpc {} }
+    all().configureEach {
+      plugins { grpc {} }
+    }
   }
 }
 
Index: dd-smoke-tests/iast-propagation/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/iast-propagation/build.gradle b/dd-smoke-tests/iast-propagation/build.gradle
--- a/dd-smoke-tests/iast-propagation/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/iast-propagation/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,13 +11,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/java9-modules/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/java9-modules/build.gradle b/dd-smoke-tests/java9-modules/build.gradle
--- a/dd-smoke-tests/java9-modules/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/java9-modules/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -4,7 +4,7 @@
 
 apply from: "$rootDir/gradle/java.gradle"
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.moduleapp.ModuleApplication')
   }
@@ -30,7 +30,7 @@
   dependsOn "jar"
 }
 
-tasks.withType(Test).forEach {
+tasks.withType(Test).configureEach {
   it.doFirst {
     JavaInstallationMetadata metadata = it.getJavaLauncher().get().metadata
     // We can safely assume that the general configuration has disabled this test if
Index: dd-smoke-tests/jersey-2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/jersey-2/build.gradle b/dd-smoke-tests/jersey-2/build.gradle
--- a/dd-smoke-tests/jersey-2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/jersey-2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -6,7 +6,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Jersey 2 Smoke Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes "Main-Class": "com.restserver.Main"
   }
Index: dd-smoke-tests/jersey-3/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/jersey-3/build.gradle b/dd-smoke-tests/jersey-3/build.gradle
--- a/dd-smoke-tests/jersey-3/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/jersey-3/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -6,7 +6,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Jersey 3 Smoke Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes "Main-Class": "smoketest.MainApp"
   }
Index: dd-smoke-tests/lib-injection/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/lib-injection/build.gradle b/dd-smoke-tests/lib-injection/build.gradle
--- a/dd-smoke-tests/lib-injection/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/lib-injection/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,7 +10,7 @@
   mainClass = 'datadog.smoketest.Application'
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes(
       'Premain-Class': 'datadog.smoketest.Agent',
Index: dd-smoke-tests/maven/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/maven/build.gradle b/dd-smoke-tests/maven/build.gradle
--- a/dd-smoke-tests/maven/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/maven/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,7 +11,7 @@
   testImplementation project(':dd-smoke-tests:backend-mock')
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.maven.MavenRunner')
   }
Index: dd-smoke-tests/osgi/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/osgi/build.gradle b/dd-smoke-tests/osgi/build.gradle
--- a/dd-smoke-tests/osgi/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/osgi/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -42,7 +42,7 @@
   testImplementation project(':dd-smoke-tests')
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   include 'datadog/smoketest/osgi/app/**'
 }
 
Index: dd-smoke-tests/play-2.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.4/build.gradle b/dd-smoke-tests/play-2.4/build.gradle
--- a/dd-smoke-tests/play-2.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -70,11 +70,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.5/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.5/build.gradle b/dd-smoke-tests/play-2.5/build.gradle
--- a/dd-smoke-tests/play-2.5/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.5/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -72,11 +72,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.6/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.6/build.gradle b/dd-smoke-tests/play-2.6/build.gradle
--- a/dd-smoke-tests/play-2.6/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.6/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -72,11 +72,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.7/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.7/build.gradle b/dd-smoke-tests/play-2.7/build.gradle
--- a/dd-smoke-tests/play-2.7/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.7/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -72,11 +72,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.8-otel/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.8-otel/build.gradle b/dd-smoke-tests/play-2.8-otel/build.gradle
--- a/dd-smoke-tests/play-2.8-otel/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.8-otel/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -70,11 +70,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.8-split-routes/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.8-split-routes/build.gradle b/dd-smoke-tests/play-2.8-split-routes/build.gradle
--- a/dd-smoke-tests/play-2.8-split-routes/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.8-split-routes/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -70,11 +70,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/play-2.8/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/play-2.8/build.gradle b/dd-smoke-tests/play-2.8/build.gradle
--- a/dd-smoke-tests/play-2.8/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/play-2.8/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -71,11 +71,9 @@
   }
 }
 
-tasks.withType(AbstractCopyTask).each {
+tasks.withType(AbstractCopyTask).configureEach {
   // Don't know why the play plugin tries to copy the logback.xml file twice, but only accept it once
-  it.configure {
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-  }
+  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 }
 
 spotless {
Index: dd-smoke-tests/profiling-integration-tests/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/profiling-integration-tests/build.gradle b/dd-smoke-tests/profiling-integration-tests/build.gradle
--- a/dd-smoke-tests/profiling-integration-tests/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/profiling-integration-tests/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,7 +10,7 @@
 
 description = 'Profiling Integration Tests.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.profiling.ProfilingTestApplication')
   }
@@ -36,7 +36,7 @@
   jvmArgs "-Ddatadog.smoketest.profiling.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   include {
     return it.directory || it.path.endsWith('.jar') ||
       it.path.startsWith('io/opentracing') ||
Index: dd-smoke-tests/quarkus-native/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/quarkus-native/build.gradle b/dd-smoke-tests/quarkus-native/build.gradle
--- a/dd-smoke-tests/quarkus-native/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/quarkus-native/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -53,9 +53,7 @@
     .withPathSensitivity(PathSensitivity.RELATIVE)
     inputs.file(project(':dd-trace-api').tasks.jar.archiveFile.get()).withPropertyName('apiJar')
     inputs.file(project(':dd-java-agent').tasks.shadowJar.archiveFile.get()).withPropertyName('agentJar')
-  }
 
-  quarkusNativeBuild {
     dependsOn project(':dd-trace-api').tasks.named("jar") // Use dev @Trace annotation
     dependsOn project(':dd-java-agent').tasks.named('shadowJar') // Use dev agent
   }
Index: dd-smoke-tests/quarkus/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/quarkus/build.gradle b/dd-smoke-tests/quarkus/build.gradle
--- a/dd-smoke-tests/quarkus/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/quarkus/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -27,13 +27,11 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
-
-evaluationDependsOn ':dd-trace-api'
-quarkusBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
+evaluationDependsOn ':dd-trace-api'
+
 tasks.named("compileTestGroovy").configure {
   dependsOn 'quarkusBuild'
   outputs.upToDateWhen {
Index: dd-smoke-tests/resteasy/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/resteasy/build.gradle b/dd-smoke-tests/resteasy/build.gradle
--- a/dd-smoke-tests/resteasy/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/resteasy/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -6,7 +6,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'RestEasy Smoke Test.'
 
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes "Main-Class": "smoketest.resteasy.Main"
   }
Index: dd-smoke-tests/spring-boot-2.3-webmvc-jetty/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.3-webmvc-jetty/build.gradle b/dd-smoke-tests/spring-boot-2.3-webmvc-jetty/build.gradle
--- a/dd-smoke-tests/spring-boot-2.3-webmvc-jetty/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.3-webmvc-jetty/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,22 +1,22 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
 
-
-import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer
-
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Spring Boot 2.3 Jetty Smoke Tests.'
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
   mergeServiceFiles()
   append 'META-INF/spring.handlers'
Index: dd-smoke-tests/spring-boot-2.4-webflux/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.4-webflux/build.gradle b/dd-smoke-tests/spring-boot-2.4-webflux/build.gradle
--- a/dd-smoke-tests/spring-boot-2.4-webflux/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.4-webflux/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -7,13 +9,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/spring-boot-2.5-webflux/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.5-webflux/build.gradle b/dd-smoke-tests/spring-boot-2.5-webflux/build.gradle
--- a/dd-smoke-tests/spring-boot-2.5-webflux/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.5-webflux/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -7,13 +9,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/spring-boot-2.6-webflux/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.6-webflux/build.gradle b/dd-smoke-tests/spring-boot-2.6-webflux/build.gradle
--- a/dd-smoke-tests/spring-boot-2.6-webflux/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.6-webflux/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -9,13 +9,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar").configure {
   configurations = [project.configurations.runtimeClasspath]
   mergeServiceFiles()
   append 'META-INF/spring.handlers'
@@ -24,7 +24,8 @@
   transform(PropertiesFileTransformer) {
     paths = ['META-INF/spring.factories']
     mergeStrategy = "append"
-  }}
+  }
+}
 
 dependencies {
   implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.6.0+'
Index: dd-smoke-tests/spring-boot-2.6-webmvc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.6-webmvc/build.gradle b/dd-smoke-tests/spring-boot-2.6-webmvc/build.gradle
--- a/dd-smoke-tests/spring-boot-2.6-webmvc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.6-webmvc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,23 +1,23 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer
+
 plugins {
   id "com.github.johnrengelman.shadow"
   id 'java-test-fixtures'
 }
 
-
-import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer
-
 apply from: "$rootDir/gradle/java.gradle"
 description = 'Spring Boot 2.6 Webmvc Smoke Tests.'
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
   mergeServiceFiles()
   append 'META-INF/spring.handlers'
Index: dd-smoke-tests/spring-boot-2.7-webflux/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-2.7-webflux/build.gradle b/dd-smoke-tests/spring-boot-2.7-webflux/build.gradle
--- a/dd-smoke-tests/spring-boot-2.7-webflux/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-2.7-webflux/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -29,9 +29,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-webfluxBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/spring-boot-3.0-native/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-3.0-native/build.gradle b/dd-smoke-tests/spring-boot-3.0-native/build.gradle
--- a/dd-smoke-tests/spring-boot-3.0-native/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-3.0-native/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -57,14 +57,12 @@
     .withPathSensitivity(PathSensitivity.RELATIVE)
     inputs.file(project(':dd-trace-api').tasks.jar.archiveFile.get()).withPropertyName('apiJar')
     inputs.file(project(':dd-java-agent').tasks.shadowJar.archiveFile.get()).withPropertyName('agentJar')
-  }
 
-  springNativeBuild {
     dependsOn project(':dd-trace-api').tasks.named("jar") // Use dev @Trace annotation
     dependsOn project(':dd-java-agent').tasks.named('shadowJar') // Use dev agent
   }
 
-  tasks.named('compileTestGroovy').configure {
+  tasks.named('compileTestGroovy', GroovyCompile).configure {
     dependsOn 'springNativeBuild'
     outputs.upToDateWhen {
       !springNativeBuild.didWork
Index: dd-smoke-tests/spring-boot-3.0-webflux/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-3.0-webflux/build.gradle b/dd-smoke-tests/spring-boot-3.0-webflux/build.gradle
--- a/dd-smoke-tests/spring-boot-3.0-webflux/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-3.0-webflux/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -33,9 +33,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-webfluxBuild30 {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/spring-boot-3.0-webmvc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-3.0-webmvc/build.gradle b/dd-smoke-tests/spring-boot-3.0-webmvc/build.gradle
--- a/dd-smoke-tests/spring-boot-3.0-webmvc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-3.0-webmvc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -35,12 +35,9 @@
   .withPathSensitivity(PathSensitivity.RELATIVE)
 }
 
-compileTestGroovy {
-  dependsOn project(':dd-trace-api').tasks.named("jar")
-}
-
-tasks.named("compileTestGroovy").configure {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   dependsOn 'webmvcBuild30'
+  dependsOn project(':dd-trace-api').tasks.named("jar")
   outputs.upToDateWhen {
     !webmvcBuild30.didWork
   }
Index: dd-smoke-tests/spring-boot-rabbit/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-boot-rabbit/build.gradle b/dd-smoke-tests/spring-boot-rabbit/build.gradle
--- a/dd-smoke-tests/spring-boot-rabbit/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-boot-rabbit/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -7,13 +9,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/spring-security/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/spring-security/build.gradle b/dd-smoke-tests/spring-security/build.gradle
--- a/dd-smoke-tests/spring-security/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/spring-security/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,7 +11,7 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'com.example.jwt.SecurityJwtDemoApplication')
   }
@@ -35,7 +35,7 @@
   jvmArgs "-Ddatadog.smoketest.springboot.shadowJar.path=${tasks.jar.archiveFile.get()}"
 }
 
-processResources {
+tasks.named("processResources").configure {
   doFirst {
     def resourcesDir = sourceSets.main.output.resourcesDir
     resourcesDir.mkdirs()
Index: dd-smoke-tests/springboot-grpc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/springboot-grpc/build.gradle b/dd-smoke-tests/springboot-grpc/build.gradle
--- a/dd-smoke-tests/springboot-grpc/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/springboot-grpc/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,6 +1,8 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
-  id 'com.google.protobuf' version '0.8.18'
+  id 'com.google.protobuf' version '0.9.4'
 }
 
 ext {
@@ -23,21 +25,23 @@
     }
   }
   generateProtoTasks {
-    all()*.plugins {
-      grpc {}
+    ofSourceSet("main").configureEach {
+      plugins {
+        grpc {}
+      }
     }
   }
 }
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootGrpcApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/springboot-mongo/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/springboot-mongo/build.gradle b/dd-smoke-tests/springboot-mongo/build.gradle
--- a/dd-smoke-tests/springboot-mongo/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/springboot-mongo/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
 }
@@ -7,13 +9,13 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   configurations = [project.configurations.runtimeClasspath]
 }
 
Index: dd-smoke-tests/springboot-tomcat/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/springboot-tomcat/build.gradle b/dd-smoke-tests/springboot-tomcat/build.gradle
--- a/dd-smoke-tests/springboot-tomcat/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/springboot-tomcat/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -13,7 +13,6 @@
 apply from: "$rootDir/gradle/java.gradle"
 description = 'SpringBoot Tomcat Smoke Tests.'
 
-
 repositories {
   ivy {
     url 'https://archive.apache.org/dist'
@@ -67,36 +66,28 @@
   testImplementation project(':dd-smoke-tests')
 }
 
-tasks.sourcesJar {
-  dependsOn 'unzip'
-}
-
-tasks.javadocJar {
+// DEBUG: meant for sourcesJar and javaDoc, but experimenting with removing it, and why would we need this anyway?
+tasks.withType(Jar).configureEach {
   dependsOn 'unzip'
 }
 
-tasks.bootWar {
+tasks.named('bootWar').configure {
   dependsOn 'unzip'
 }
 
-tasks.bootWarMainClassName {
+tasks.named('bootWarMainClassName').configure {
   dependsOn 'unzip'
 }
 
-tasks.war {
+tasks.named('war').configure {
   dependsOn 'unzip'
 }
 
-tasks.javadocJar{
-  dependsOn 'unzip'
-}
-
-tasks.sourcesJar{
-  dependsOn 'unzip'
-}
-
-tasks.matching({it.name.startsWith('compileTest')}).configureEach {
-  dependsOn 'war', 'bootWar', 'unzip'
+// TODO: Figure out if there's a cleaner way
+tasks.withType(AbstractCompile).configureEach {
+  if (it.name.startsWith('compileTest')) {
+    dependsOn 'war', 'bootWar', 'unzip'
+  }
 }
 
 tasks.withType(Test).configureEach {
Index: dd-smoke-tests/springboot/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/springboot/build.gradle b/dd-smoke-tests/springboot/build.gradle
--- a/dd-smoke-tests/springboot/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/springboot/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -12,7 +12,7 @@
 
 // The standard spring-boot plugin doesn't play nice with our project
 // so we'll build a fat jar instead
-jar {
+tasks.named("jar", Jar).configure {
   manifest {
     attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
   }
Index: dd-smoke-tests/vertx-3.4/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/vertx-3.4/build.gradle b/dd-smoke-tests/vertx-3.4/build.gradle
--- a/dd-smoke-tests/vertx-3.4/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/vertx-3.4/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -31,9 +31,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-vertxBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/vertx-3.9-resteasy/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/vertx-3.9-resteasy/build.gradle b/dd-smoke-tests/vertx-3.9-resteasy/build.gradle
--- a/dd-smoke-tests/vertx-3.9-resteasy/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/vertx-3.9-resteasy/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -29,9 +29,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-vertxBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/vertx-3.9/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/vertx-3.9/build.gradle b/dd-smoke-tests/vertx-3.9/build.gradle
--- a/dd-smoke-tests/vertx-3.9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/vertx-3.9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -30,9 +30,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-vertxBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/vertx-4.2/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/vertx-4.2/build.gradle b/dd-smoke-tests/vertx-4.2/build.gradle
--- a/dd-smoke-tests/vertx-4.2/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/vertx-4.2/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -30,9 +30,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-vertxBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-smoke-tests/wildfly/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-smoke-tests/wildfly/build.gradle b/dd-smoke-tests/wildfly/build.gradle
--- a/dd-smoke-tests/wildfly/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-smoke-tests/wildfly/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -57,9 +57,7 @@
   })
   .withPropertyName("application")
   .withPathSensitivity(PathSensitivity.RELATIVE)
-}
 
-earBuild {
   dependsOn project(':dd-trace-api').tasks.named("jar")
 }
 
Index: dd-trace-core/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dd-trace-core/build.gradle b/dd-trace-core/build.gradle
--- a/dd-trace-core/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-trace-core/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -52,7 +52,7 @@
 
 addTestSuite('traceAgentTest')
 
-tasks.withType(Test).findByName('forkedTest').configure {
+tasks.named('forkedTest', Test).configure {
   // Needed for FootprintForkedTest on Java 17
   jvmArgs += ['-Djol.magicFieldOffset=true']
 }
@@ -74,8 +74,6 @@
 
   implementation group: 'com.google.re2j', name: 're2j', version: '1.7'
 
-  compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.2.0'
-
   // We have autoservices defined in test subtree, looks like we need this to be able to properly rebuild this
   testAnnotationProcessor libs.autoservice.processor
   testCompileOnly libs.autoservice.annotation
Index: dd-trace-ot/build.gradle
===================================================================
diff --git a/dd-trace-ot/build.gradle b/dd-trace-ot/build.gradle
--- a/dd-trace-ot/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/dd-trace-ot/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,3 +1,5 @@
+import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
+
 plugins {
   id "com.github.johnrengelman.shadow"
   id "me.champeau.jmh"
@@ -82,12 +84,12 @@
   finalizedBy "ot31CompatibilityTest", "ot33CompatibilityTest"
 }
 
-jar {
+tasks.named("jar", Jar).configure {
   destinationDirectory.set(file("$buildDir/libs-unbundled"))
   archiveClassifier = 'unbundled'
 }
 
-shadowJar {
+tasks.named("shadowJar", ShadowJar).configure {
   archiveClassifier = ''
 
   dependencies {
Index: gradle/configure_tests.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/configure_tests.gradle b/gradle/configure_tests.gradle
--- a/gradle/configure_tests.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/configure_tests.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -76,20 +76,23 @@
   }
 
   timeout = testTimeoutDuration
-
-  check.dependsOn it
 }
 
-Task allTestsTask = tasks.maybeCreate('allTests')
-Task allLatestDepTestsTask = tasks.maybeCreate('allLatestDepTests')
-project.afterEvaluate {
-  tasks.withType(Test).each {
-    if (it.name.containsIgnoreCase('latest')) {
-      allLatestDepTestsTask.dependsOn it
-    } else if (it.name != 'traceAgentTest') {
-      allTestsTask.dependsOn it
-    }
-  }
+tasks.named('check').configure { it.dependsOn tasks.withType(Test) }
+
+// XXX: Some projects apply configure_tests.gradle twice, so we need to avoid registering the same tasks twice.
+//      But also avoid using maybeCreate, which will realize the task and ruin configuration avoidance.
+void maybeRegister(String name, Action<? extends Task> configurationAction) {
+  try {
+    tasks.register(name)
+  } catch (InvalidUserDataException ignored) { }
+  tasks.named(name).configure(configurationAction)
+}
+maybeRegister('allTests') {
+  it.dependsOn tasks.withType(Test).matching { !it.name.containsIgnoreCase('latest') && it.name != 'traceAgentTest' }
+}
+maybeRegister('allLatestDepTests') {
+  it.dependsOn tasks.withType(Test).matching { it.name.containsIgnoreCase('latest') }
 }
 
 // Setup flaky tests jobs. Done in afterEvaluate so that it applies to latestDepTest.
@@ -122,3 +125,5 @@
     }
   }
 }
+
+logger.debug("Will apply configure_tests.gradle for ${project.path} (done)")
Index: gradle/forbiddenapis.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/forbiddenapis.gradle b/gradle/forbiddenapis.gradle
--- a/gradle/forbiddenapis.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/forbiddenapis.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -11,6 +11,8 @@
 
 apply plugin: "de.thetaphi.forbiddenapis"
 
+import de.thetaphi.forbiddenapis.gradle.CheckForbiddenApis
+
 def mainFilterFile = files("$rootDir/gradle/forbiddenApiFilters/main.txt")
 
 forbiddenApis {
@@ -20,8 +22,8 @@
 }
 
 // disable forbiddenApis for all test tasks
-afterEvaluate {
-  tasks.matching({it.name.startsWith('forbiddenApis') && it.name.endsWith('Test')}).configureEach {
+tasks.withType(CheckForbiddenApis).configureEach {
+  if (it.name.endsWith('Test')) {
     it.enabled = false
   }
 }
Index: gradle/instrumentation-module-init.gradle
===================================================================
diff --git a/gradle/instrumentation-module-init.gradle b/gradle/instrumentation-module-init.gradle
new file mode 100644
--- /dev/null	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
+++ b/gradle/instrumentation-module-init.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -0,0 +1,87 @@
+
+apply plugin: 'instrument'
+apply plugin: 'muzzle'
+
+configurations {
+  instrumentPluginClasspath {
+    visible = false
+    canBeConsumed = false
+    canBeResolved = true
+  }
+}
+
+instrument {
+  plugins = [
+    'datadog.trace.agent.tooling.muzzle.MuzzleGradlePlugin',
+    'datadog.trace.agent.tooling.bytebuddy.NewTaskForGradlePlugin',
+    'datadog.trace.agent.tooling.bytebuddy.reqctx.RewriteRequestContextAdvicePlugin',
+  ]
+}
+
+tasks.withType(Javadoc).configureEach { enabled = false }
+
+afterEvaluate {
+  String jdkCompile = null
+  if (project.hasProperty('minJavaVersionForTests') && project.getProperty('minJavaVersionForTests') != JavaVersion.VERSION_1_8) {
+    def version = JavaVersion.toVersion(project.getProperty('minJavaVersionForTests'))
+    def name = "java$version.majorVersion"
+    jdkCompile = "main_${name}Implementation"
+  }
+  dependencies {
+    // Apply common dependencies for instrumentation.
+    implementation project(':dd-trace-api')
+    implementation project(':dd-java-agent:agent-tooling')
+    implementation libs.bytebuddy
+    if (jdkCompile) {
+      "$jdkCompile" project(':dd-trace-api')
+      "$jdkCompile" project(':dd-java-agent:agent-tooling')
+      "$jdkCompile" libs.bytebuddy
+    }
+
+    annotationProcessor libs.autoservice.processor
+    compileOnly libs.autoservice.annotation
+
+    // Include instrumentations instrumenting core JDK classes to ensure interoperability with other instrumentation
+    testImplementation project(':dd-java-agent:instrumentation:java-concurrent')
+    testImplementation project(':dd-java-agent:instrumentation:java-concurrent:java-completablefuture')
+    // FIXME: we should enable this, but currently this fails tests for google http client
+    //testImplementation project(':dd-java-agent:instrumentation:http-url-connection')
+    testImplementation project(':dd-java-agent:instrumentation:classloading')
+
+    testImplementation project(':dd-java-agent:testing')
+    testAnnotationProcessor libs.autoservice.processor
+    testCompileOnly libs.autoservice.annotation
+
+    instrumentPluginClasspath project(path: ':dd-java-agent:agent-tooling', configuration: 'instrumentPluginClasspath')
+  }
+
+
+  project.testing {
+    suites.configureEach {
+      // SpockRunner that we use to run agent tests cannot be properly ported to JUnit 5,
+      // since the framework does not provide the hooks / extension points
+      // that can be used to shadow the tested class.
+
+      // In order to mitigate this, SpockRunner extends JUnitPlatform,
+      // which is a JUnit 4 runner that allows executing JUnit 5 tests in a JUnit 4 environment
+      // (i.e. running them as JUnit 4 tests).
+
+      // So even though Spock 2 tests run on top of JUnit 5,
+      // we execute them in "compatibility mode" so that SpockRunner could shadow the test class
+      // See https://junit.org/junit5/docs/current/user-guide/#running-tests-junit-platform-runner for more details.
+      useJUnit()
+    }
+  }
+
+  project.tasks.withType(Test).configureEach { subTask ->
+    // The `forkedTest` task is not a proper test suite, so it has to be configured directly
+    if (subTask.name == 'forkedTest') {
+      // See SpockRunner comment above
+      useJUnit()
+    }
+
+    if (subTask.name in ['latestDepTest', 'latestDepForkedTest']) {
+      subTask.jvmArgs '-Dtest.dd.latestDepTest=true'
+    }
+  }
+}
Index: gradle/jacoco.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/jacoco.gradle b/gradle/jacoco.gradle
--- a/gradle/jacoco.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/jacoco.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -52,7 +52,7 @@
     }
   }
 
-  jacocoTestCoverageVerification {
+  tasks.named("jacocoTestCoverageVerification").configure {
     violationRules {
       rule {
         element = 'CLASS'
Index: gradle/java_no_deps.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/java_no_deps.gradle b/gradle/java_no_deps.gradle
--- a/gradle/java_no_deps.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/java_no_deps.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -10,16 +10,19 @@
 apply from: "$rootDir/gradle/pitest.gradle"
 apply from: "$rootDir/gradle/test-suites.gradle"
 
+logger.debug("Will apply java_no_deps.gradle stage 1 for ${project.path}")
+
 // Only run one testcontainers test at a time
 ext.testcontainersLimit = gradle.sharedServices.registerIfAbsent("testcontainersLimit", BuildService) {
   maxParallelUsages = 1
 }
 
+logger.debug("Will apply java_no_deps.gradle stage 2 for ${project.path}")
+
 // Task for tests that want to run forked in their own separate JVM
-if (tasks.matching({it.name == 'forkedTest'}).empty) {
-  tasks.register('forkedTest', Test).configure {
-    useJUnitPlatform()
-  }
+// XXX: tasks.matching here realizes all tasks!
+tasks.register('forkedTest', Test).configure {
+  useJUnitPlatform()
 }
 
 def applyCodeCoverage = !(
@@ -37,13 +40,19 @@
 sourceCompatibility = JavaVersion.VERSION_1_8
 targetCompatibility = JavaVersion.VERSION_1_8
 
+logger.debug("Will apply java_no_deps.gradle stage 3 for ${project.path}")
+
 // when building with Java 9+, lazily set compiler --release flag to match target
 def skipSettingCompilerRelease = project.findProperty('skipSettingCompilerRelease')
 if (!skipSettingCompilerRelease && JavaVersion.current().isJava9Compatible()) {
-  compileJava.options.release = project.provider {
-    JavaVersion.toVersion(targetCompatibility).majorVersion as Integer
+  tasks.named('compileJava', JavaCompile).configure { task ->
+    task.options.release = project.provider {
+      JavaVersion.toVersion(JavaVersion.VERSION_1_8).majorVersion as Integer
+    }
   }
 }
+
+logger.debug("Will apply java_no_deps.gradle stage 4 for ${project.path}")
 
 if (project.hasProperty('minJavaVersionForTests') && project.getProperty('minJavaVersionForTests') != JavaVersion.VERSION_1_7) {
   def version = JavaVersion.toVersion(project.getProperty('minJavaVersionForTests'))
@@ -54,7 +63,7 @@
     }
   }
 
-  "compileMain_${name}Java" {
+  tasks.named("compileMain_${name}Java").configure {
     sourceCompatibility = version
     targetCompatibility = version
   }
@@ -64,8 +73,9 @@
     implementation files(project.sourceSets."main_$name".output)
   }
 
-  jar {
-    from sourceSets."main_$name".output
+  final taskName = name
+  tasks.named("jar", Jar).configure {
+    from sourceSets."main_$taskName".output
   }
 
   // In some cases we would like to avoid setting java version to `minJavaVersionForTests`.
@@ -81,6 +91,8 @@
   }
 }
 
+logger.debug("Will apply java_no_deps.gradle stage 5 for ${project.path}")
+
 java {
   // See https://docs.gradle.org/current/userguide/upgrading_version_5.html, Automatic target JVM version
   disableAutoTargetJvm()
@@ -88,7 +100,9 @@
   withSourcesJar()
 }
 
-jar {
+
+logger.debug("Will apply java_no_deps.gradle stage 6 for ${project.path}")
+tasks.named("jar", Jar).configure {
   /**
    Make Jar build fail on duplicate files
    By default Gradle Jar task can put multiple files with the same name
@@ -100,7 +114,7 @@
    confusing failures.
    Instead we should 'fail early' and avoid building such Jars.
    */
-  duplicatesStrategy = 'fail'
+  duplicatesStrategy = DuplicatesStrategy.FAIL
 
   manifest {
     attributes(
@@ -112,35 +126,35 @@
   }
 }
 
+logger.debug("Will apply java_no_deps.gradle stage 6b for ${project.path}")
+
 tasks.withType(Javadoc).configureEach {
-  options.encoding = "utf-8"
-  options.docEncoding = "utf-8"
-  options.charSet = "utf-8"
-
-  options.addStringOption('Xdoclint:none', '-quiet')
-
-  doFirst {
-    if (project.ext.has("apiLinks")) {
-      options.links(*project.apiLinks)
-    }
-  }
-}
-
-javadoc {
   source = sourceSets.main.java.srcDirs
   classpath = configurations.compileClasspath
 
   options {
-    setMemberLevel JavadocMemberLevel.PUBLIC
-    setAuthor true
-
-    links "https://docs.oracle.com/javase/8/docs/api/"
+    encoding = "utf-8"
+    docEncoding = "utf-8"
+    charSet = "utf-8"
+    memberLevel = JavadocMemberLevel.PUBLIC
+    author = true
+    links = ['https://docs.oracle.com/javase/8/docs/api/']
     source = 8
   }
+
+  options.addStringOption('Xdoclint:none', '-quiet')
+
+  doFirst {
+    if (project.ext.has("apiLinks")) {
+      options.links(*project.apiLinks)
+    }
+  }
 }
 
 def currentJavaHomePath = getJavaHomePath(System.getProperty("java.home"))
 
+logger.debug("Will apply java_no_deps.gradle stage 9 for ${project.path}")
+
 project.afterEvaluate {
   def testJvm = gradle.startParameter.projectProperties["testJvm"]
   def javaTestLauncher = null as Provider<JavaLauncher>
@@ -237,18 +251,20 @@
 }
 
 if (project.plugins.hasPlugin('com.github.johnrengelman.shadow')) {
-  // Remove the no-deps jar from the archives to prevent publication
-  configurations.archives.with {
-    artifacts.remove artifacts.find {
-      if (it.hasProperty("delegate")) {
-        it.delegate.archiveTask.is jar
-      } else {
-        it.archiveTask.is jar
-      }
-    }
-  }
-  artifacts {
-    archives shadowJar
+  tasks.named("shadowJar").configure {
+    // Remove the no-deps jar from the archives to prevent publication
+    project.configurations.archives.with {
+      artifacts.remove artifacts.find {
+        if (it.hasProperty("delegate")) {
+          (it.delegate.archiveTask instanceof Jar) && it.delegate.archiveTask.is(jar)
+        } else {
+          (it.archiveTask.class.isInstance instanceof Jar) && it.archiveTask.is(jar)
+        }
+      }
+    }
+    project.artifacts {
+      archives shadowJar
+    }
   }
 }
 
@@ -328,4 +344,12 @@
   archiveClassifier = 'test'
 }
 
+logger.debug("Will apply configure_tests.gradle to ${project.path}")
 apply from: "$rootDir/gradle/configure_tests.gradle"
+
+if (project.path.startsWith(":dd-java-agent:instrumentation:")) {
+  if (!project.hasProperty("instrumentationModuleInitialized")) {
+    apply from: "$rootDir/gradle/instrumentation-module-init.gradle"
+    project.ext.instrumentationModuleInitialized = true
+  }
+}
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/libs.versions.toml	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -33,6 +33,7 @@
 asm = "9.7"
 cafe_crypto = "0.1.0"
 lz4 = "1.7.1"
+spotbugs = "4.8.6"
 
 [libraries]
 slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
Index: gradle/publish.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/publish.gradle b/gradle/publish.gradle
--- a/gradle/publish.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/publish.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -22,11 +22,11 @@
   publications {
     maven(MavenPublication) { MavenPublication publication ->
       if (project.plugins.hasPlugin('com.github.johnrengelman.shadow')) {
-        publication.artifact(project.tasks.shadowJar)
+        // DEBUG: publication.artifact(project.tasks.shadowJar)
 
         // Required by Maven Central:
-        publication.artifact sourcesJar
-        publication.artifact javadocJar
+        // DEBUG: publication.artifact sourcesJar
+        // DEBUG: publication.artifact javadocJar
 
         afterEvaluate {
           /**
@@ -113,6 +113,6 @@
 
 tasks.withType(AbstractPublishToMaven).configureEach {
   rootProject.subprojects {
-    mustRunAfter tasks.matching { it instanceof VerificationTask }
+    mustRunAfter tasks.withType(VerificationTask)
   }
 }
Index: gradle/spotbugFilters/exclude.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/spotbugFilters/exclude.xml b/gradle/spotbugFilters/exclude.xml
--- a/gradle/spotbugFilters/exclude.xml	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/spotbugFilters/exclude.xml	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,6 +2,14 @@
 <FindBugsFilter>
   <Match>
     <Or>
+      <!-- New in spotbugs 4.8.0: does not pass -->
+      <Bug pattern="CT_CONSTRUCTOR_THROW" />
+      <!-- New in spotbugs 4.8.0: does not pass -->
+      <Bug pattern="SING_SINGLETON_HAS_NONPRIVATE_CONSTRUCTOR" />
+      <!-- New in spotbugs 4.8.0: does not pass -->
+      <Bug pattern="PA_PUBLIC_PRIMITIVE_ATTRIBUTE" />
+      <!-- New in spotbugs 4.8.6: does not pass -->
+      <Bug pattern="SING_SINGLETON_GETTER_NOT_SYNCHRONIZED" />
       <Class name="~com.datadog.debugger.util.WeakIdentityHashMap.*" />
       <Package name="io.sqreen.testapp.sampleapp" />
       <Package name="datadog.trace.bootstrap.instrumentation.decorator.http.utils" />
Index: gradle/spotbugs.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/spotbugs.gradle b/gradle/spotbugs.gradle
--- a/gradle/spotbugs.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/spotbugs.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -1,57 +1,72 @@
-apply plugin: 'com.github.spotbugs'
+buildscript {
+  repositories {
+    gradlePluginPortal()
+  }
+  dependencies {
+    classpath 'com.github.spotbugs:com.github.spotbugs.gradle.plugin:6.0.20'
+  }
+}
+
+import com.github.spotbugs.snom.SpotBugsTask
+
+final shouldRunSpotbugs = !project.path.startsWith(":dd-smoke-tests")
+
+if (shouldRunSpotbugs) {
+  apply plugin: 'com.github.spotbugs'
 
-spotbugs {
-  ignoreFailures = true
-  excludeFilter = file("$rootDir/gradle/spotbugFilters/exclude.xml")
-}
+  spotbugs {
+    ignoreFailures = true
+    excludeFilter = file("$rootDir/gradle/spotbugFilters/exclude.xml")
+  }
 
-// configure spotbugs for Main tasks and disable it for all other
-afterEvaluate {
-  tasks.withType(spotbugsMain.class).configureEach {
-    def name = it.name
-    if (name.endsWith("Main") || name.endsWith("Main_java11")) {
-      it.ignoreFailures = false
-      // detector documentation is in the following link:
-      // https://spotbugs-in-kengo-toda.readthedocs.io/en/lqc-list-detectors/detectors.html
-      it.omitVisitors = [
-        'DefaultEncodingDetector',
-        'DoInsideDoPrivileged',
-        'DontUseEnum',
-        'DroppedException',
-        'FindDeadLocalStores',
-        'FindHEmismatch',
-        'FindNullDeref',
-        'FindReturnRef',
-        'FindRunInvocations',
-        'FindUselessControlFlow',
-        'InitializationChain',
-        'LazyInit',
-        'LoadOfKnownNullValue',
-        'LostLoggerDueToWeakReference',
-        'MethodReturnCheck',
-        'MutableStaticFields',
-        'Naming',
-        'RuntimeExceptionCapture',
-        'SerializableIdiom',
-        'UnreadFields',
-      ]
-      it.reports {
-        html {
-          enabled = true
-          destination = file("$buildDir/reports/spotbugs/${name}.html")
-          stylesheet = 'fancy-hist.xsl'
-        }
-      }
-    } else {
-      it.enabled = false
+  // configure spotbugs for Main tasks and disable it for all other
+  afterEvaluate {
+    tasks.withType(SpotBugsTask).configureEach {
+      def name = it.name
+      if (name.endsWith("Main") || name.endsWith("Main_java11")) {
+        it.ignoreFailures = false
+        // detector documentation is in the following link:
+        // https://spotbugs-in-kengo-toda.readthedocs.io/en/lqc-list-detectors/detectors.html
+        it.omitVisitors = [
+          'DefaultEncodingDetector',
+          'DoInsideDoPrivileged',
+          'DontUseEnum',
+          'DroppedException',
+          'FindDeadLocalStores',
+          'FindHEmismatch',
+          'FindNullDeref',
+          'FindReturnRef',
+          'FindRunInvocations',
+          'FindUselessControlFlow',
+          'InitializationChain',
+          'LazyInit',
+          'LoadOfKnownNullValue',
+          'LostLoggerDueToWeakReference',
+          'MethodReturnCheck',
+          'MutableStaticFields',
+          'Naming',
+          'RuntimeExceptionCapture',
+          'SerializableIdiom',
+          'UnreadFields',
+        ]
+        it.reports {
+          html {
+            enabled = true
+            destination = file("$buildDir/reports/spotbugs/${name}.html")
+            stylesheet = 'fancy-hist.xsl'
+          }
+        }
+      } else {
+        it.enabled = false
+      }
     }
   }
 }
 
 dependencies {
   compileOnly 'net.jcip:jcip-annotations:1.0'
-  compileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.0'
+  compileOnly "com.github.spotbugs:spotbugs-annotations:${libs.versions.spotbugs.get()}"
 
   testImplementation 'net.jcip:jcip-annotations:1.0'
-  testImplementation 'com.github.spotbugs:spotbugs-annotations:4.2.0'
+  testImplementation "com.github.spotbugs:spotbugs-annotations:${libs.versions.spotbugs.get()}"
 }
Index: gradle/spotless.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/spotless.gradle b/gradle/spotless.gradle
--- a/gradle/spotless.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/spotless.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -77,9 +77,6 @@
 
 apply from: "$configPath/spotless/spotless-kotlin.gradle"
 
-tasks.register('formatCode') {
-  dependsOn 'spotlessApply'
-}
-check.configure {
+tasks.named('check').configure {
   dependsOn 'spotlessCheck'
 }
Index: gradle/test-suites.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/test-suites.gradle b/gradle/test-suites.gradle
--- a/gradle/test-suites.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/test-suites.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -61,7 +61,7 @@
   }
 
   tasks.register("${testSuiteName}Jar", Jar) {
-    dependsOn(tasks.named("${testSuiteName}Classes").get())
+    dependsOn "${testSuiteName}Classes"
     from(sourceSets.named(testSuiteName).get().output)
     archiveClassifier = testSuiteName
   }
Index: gradle/test-with-kotlin.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/test-with-kotlin.gradle b/gradle/test-with-kotlin.gradle
--- a/gradle/test-with-kotlin.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/gradle/test-with-kotlin.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -2,7 +2,7 @@
 apply plugin: 'kotlin'
 apply from: "$rootDir/gradle/spotless/spotless-kotlin.gradle"
 
-tasks.named("compileTestGroovy").configure {
+tasks.named("compileTestGroovy", GroovyCompile).configure {
   //Note: look like it should be `classpath += files(sourceSets.test.kotlin.classesDirectory)`
   //instead, but kotlin plugin doesn't support it (yet?)
   classpath += files(compileTestKotlin.destinationDirectory)
Index: internal-api/build.gradle
===================================================================
diff --git a/internal-api/build.gradle b/internal-api/build.gradle
--- a/internal-api/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/internal-api/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -8,7 +8,7 @@
 }
 
 // sun.misc.SharedSecrets is gone in later versions
-compileJava {
+tasks.named("compileJava", JavaCompile).configure {
   javaCompiler = javaToolchains.compilerFor {
     languageVersion = JavaLanguageVersion.of(8)
   }
@@ -17,7 +17,7 @@
 apply from: "$rootDir/gradle/java.gradle"
 apply from: "$rootDir/gradle/tries.gradle"
 
-tasks.compileTestJava.configure {
+tasks.named("compileTestJava", JavaCompile).configure {
   setJavaVersion(it, 8)
 }
 
@@ -185,7 +185,9 @@
 ]
 excludedClassesInstructionCoverage = ['datadog.trace.util.stacktrace.StackWalkerFactory']
 
-compileTestJava.dependsOn 'generateTestClassNameTries'
+tasks.named('compileTestJava', JavaCompile).configure {
+  dependsOn 'generateTestClassNameTries'
+}
 
 dependencies {
   // references TraceScope and Continuation from public api
Index: internal-api/internal-api-9/build.gradle
===================================================================
diff --git a/internal-api/internal-api-9/build.gradle b/internal-api/internal-api-9/build.gradle
--- a/internal-api/internal-api-9/build.gradle	(revision 271c7061ae97ae2d92ef94eb8d141a94e1ddf45b)
+++ b/internal-api/internal-api-9/build.gradle	(revision 1a8bb3fe26e33415f2c16e5733a69466ce11eb1d)
@@ -15,7 +15,7 @@
   }
 }
 
-tasks.withType(Javadoc) {
+tasks.withType(Javadoc).configureEach {
   javadocTool.set(javaToolchains.javadocToolFor(java.toolchain))
 }
 
@@ -37,7 +37,7 @@
   testImplementation libs.slf4j
 }
 
-forbiddenApisMain {
+tasks.named("forbiddenApisMain").configure {
   failOnMissingClasses = false
 }
 
